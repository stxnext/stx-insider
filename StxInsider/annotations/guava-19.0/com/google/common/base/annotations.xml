<root>
    <item name='com.google.common.base.CharMatcher com.google.common.base.CharMatcher none()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Strings java.lang.String padStart(java.lang.String, int, char) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.CharMatcher com.google.common.base.CharMatcher singleWidth()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Joiner A appendTo(A, java.util.Iterator&lt;?&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.CharMatcher int countIn(java.lang.CharSequence) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Optional com.google.common.base.Optional&lt;T&gt; or(com.google.common.base.Optional&lt;? extends T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.base.StandardSystemProperty JAVA_VM_VERSION'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Predicates com.google.common.base.Predicate&lt;T&gt; alwaysFalse()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.CharMatcher DIGIT'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Objects.ToStringHelper com.google.common.base.Objects.ToStringHelper addValue(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.CharMatcher boolean apply(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.MoreObjects.ToStringHelper com.google.common.base.MoreObjects.ToStringHelper add(java.lang.String, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.CharMatcher com.google.common.base.CharMatcher invisible()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Optional com.google.common.base.Optional&lt;T&gt; absent()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Predicate boolean apply(T) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Predicates com.google.common.base.Predicate&lt;T&gt; or(com.google.common.base.Predicate&lt;? super T&gt;, com.google.common.base.Predicate&lt;? super T&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.CaseFormat LOWER_CAMEL'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.FinalizableSoftReference FinalizableSoftReference(T, com.google.common.base.FinalizableReferenceQueue) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Stopwatch com.google.common.base.Stopwatch start()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.MoreObjects.ToStringHelper com.google.common.base.MoreObjects.ToStringHelper add(java.lang.String, double) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Ascii java.lang.String toUpperCase(java.lang.CharSequence) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Converter com.google.common.base.Converter&lt;A,C&gt; andThen(com.google.common.base.Converter&lt;B,C&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.FinalizablePhantomReference FinalizablePhantomReference(T, com.google.common.base.FinalizableReferenceQueue) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Functions com.google.common.base.Function&lt;K,V&gt; forMap(java.util.Map&lt;K,V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.CharMatcher com.google.common.base.CharMatcher or(com.google.common.base.CharMatcher)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.CharMatcher java.lang.String trimLeadingFrom(java.lang.CharSequence) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Joiner A appendTo(A, java.lang.Iterable&lt;?&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Converter com.google.common.base.Converter&lt;B,A&gt; reverse()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.MoreObjects.ToStringHelper com.google.common.base.MoreObjects.ToStringHelper add(java.lang.String, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Predicates com.google.common.base.Predicate&lt;T&gt; or(com.google.common.base.Predicate&lt;? super T&gt;, com.google.common.base.Predicate&lt;? super T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Enums com.google.common.base.Optional&lt;T&gt; getIfPresent(java.lang.Class&lt;T&gt;, java.lang.String) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.MoreObjects.ToStringHelper com.google.common.base.MoreObjects.ToStringHelper add(java.lang.String, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Functions com.google.common.base.Function&lt;java.lang.Object,T&gt; forSupplier(com.google.common.base.Supplier&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Joiner.MapJoiner com.google.common.base.Joiner.MapJoiner useForNull(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.CharMatcher com.google.common.base.CharMatcher or(com.google.common.base.CharMatcher) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Predicates com.google.common.base.Predicate&lt;T&gt; equalTo(T)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Strings java.lang.String repeat(java.lang.String, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Converter com.google.common.base.Converter&lt;A,C&gt; andThen(com.google.common.base.Converter&lt;B,C&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.CaseFormat UPPER_UNDERSCORE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Converter com.google.common.base.Converter&lt;A,B&gt; from(com.google.common.base.Function&lt;? super A,? extends B&gt;, com.google.common.base.Function&lt;? super B,? extends A&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Joiner A appendTo(A, java.util.Iterator&lt;?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Splitter com.google.common.base.Splitter on(com.google.common.base.CharMatcher)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Stopwatch com.google.common.base.Stopwatch createUnstarted(com.google.common.base.Ticker) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Joiner com.google.common.base.Joiner.MapJoiner withKeyValueSeparator(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Enums com.google.common.base.Optional&lt;T&gt; getIfPresent(java.lang.Class&lt;T&gt;, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.MoreObjects.ToStringHelper com.google.common.base.MoreObjects.ToStringHelper addValue(double)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Preconditions T checkNotNull(T, java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.CharMatcher JAVA_ISO_CONTROL'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Splitter com.google.common.base.Splitter omitEmptyStrings()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Predicates com.google.common.base.Predicate&lt;T&gt; and(java.lang.Iterable&lt;? extends com.google.common.base.Predicate&lt;? super T&gt;&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.CharMatcher com.google.common.base.CharMatcher javaLetterOrDigit()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Splitter com.google.common.base.Splitter limit(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.CharMatcher com.google.common.base.CharMatcher noneOf(java.lang.CharSequence) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Objects.ToStringHelper com.google.common.base.Objects.ToStringHelper add(java.lang.String, double) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Joiner A appendTo(A, java.lang.Object[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.StandardSystemProperty JAVA_VERSION'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Converter com.google.common.base.Converter&lt;A,B&gt; from(com.google.common.base.Function&lt;? super A,? extends B&gt;, com.google.common.base.Function&lt;? super B,? extends A&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Equivalence com.google.common.base.Equivalence&lt;F&gt; onResultOf(com.google.common.base.Function&lt;F,? extends T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Joiner com.google.common.base.Joiner on(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Preconditions T checkNotNull(T) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.StandardSystemProperty JAVA_SPECIFICATION_VENDOR'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.CharMatcher JAVA_DIGIT'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Utf8 boolean isWellFormed(byte[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.CharMatcher com.google.common.base.CharMatcher anyOf(java.lang.CharSequence)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.CharMatcher java.lang.String replaceFrom(java.lang.CharSequence, java.lang.CharSequence) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Joiner.MapJoiner A appendTo(A, java.lang.Iterable&lt;? extends java.util.Map.Entry&lt;?,?&gt;&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.CharMatcher com.google.common.base.CharMatcher forPredicate(com.google.common.base.Predicate&lt;? super java.lang.Character&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.CharMatcher com.google.common.base.CharMatcher inRange(char, char)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Functions com.google.common.base.Function&lt;K,V&gt; forMap(java.util.Map&lt;K,? extends V&gt;, V) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Objects.ToStringHelper com.google.common.base.Objects.ToStringHelper add(java.lang.String, char) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Optional com.google.common.base.Optional&lt;T&gt; or(com.google.common.base.Optional&lt;? extends T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Optional com.google.common.base.Optional&lt;V&gt; transform(com.google.common.base.Function&lt;? super T,V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Enums com.google.common.base.Converter&lt;java.lang.String,T&gt; stringConverter(java.lang.Class&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.CharMatcher com.google.common.base.CharMatcher forPredicate(com.google.common.base.Predicate&lt;? super java.lang.Character&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Predicates com.google.common.base.Predicate&lt;T&gt; and(com.google.common.base.Predicate&lt;? super T&gt;, com.google.common.base.Predicate&lt;? super T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.CharMatcher SINGLE_WIDTH'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.CharMatcher java.lang.String replaceFrom(java.lang.CharSequence, java.lang.CharSequence) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Objects.ToStringHelper com.google.common.base.Objects.ToStringHelper add(java.lang.String, java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.CharMatcher java.lang.String retainFrom(java.lang.CharSequence)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Functions com.google.common.base.Function&lt;K,V&gt; forMap(java.util.Map&lt;K,V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Suppliers com.google.common.base.Supplier&lt;T&gt; ofInstance(T)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.CharMatcher boolean apply(java.lang.Character) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Optional com.google.common.base.Optional&lt;T&gt; fromNullable(T)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.CharMatcher int indexIn(java.lang.CharSequence) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Predicates com.google.common.base.Predicate&lt;T&gt; and(java.lang.Iterable&lt;? extends com.google.common.base.Predicate&lt;? super T&gt;&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Joiner A appendTo(A, java.lang.Object[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Objects.ToStringHelper com.google.common.base.Objects.ToStringHelper add(java.lang.String, java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Joiner com.google.common.base.Joiner on(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Joiner com.google.common.base.Joiner.MapJoiner withKeyValueSeparator(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Splitter com.google.common.base.Splitter on(char)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.CharMatcher java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.base.StandardSystemProperty PATH_SEPARATOR'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Suppliers com.google.common.base.Supplier&lt;T&gt; memoize(com.google.common.base.Supplier&lt;T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Splitter com.google.common.base.Splitter on(com.google.common.base.CharMatcher) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.CharMatcher com.google.common.base.CharMatcher anyOf(java.lang.CharSequence) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Converter A doBackward(B) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Converter com.google.common.base.Converter&lt;A,B&gt; from(com.google.common.base.Function&lt;? super A,? extends B&gt;, com.google.common.base.Function&lt;? super B,? extends A&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.StandardSystemProperty JAVA_SPECIFICATION_VERSION'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Equivalence com.google.common.base.Equivalence&lt;F&gt; onResultOf(com.google.common.base.Function&lt;F,? extends T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Predicates com.google.common.base.Predicate&lt;T&gt; alwaysTrue()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Optional com.google.common.base.Optional&lt;V&gt; transform(com.google.common.base.Function&lt;? super T,V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher com.google.common.base.CharMatcher noneOf(java.lang.CharSequence)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Splitter com.google.common.base.Splitter on(java.util.regex.Pattern) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Preconditions T checkNotNull(T, java.lang.String, java.lang.Object...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Joiner A appendTo(A, java.lang.Object, java.lang.Object, java.lang.Object...) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Throwables java.lang.Throwable getRootCause(java.lang.Throwable)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.CharMatcher NONE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.CharMatcher java.lang.String collapseFrom(java.lang.CharSequence, char) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Predicates com.google.common.base.Predicate&lt;T&gt; and(com.google.common.base.Predicate&lt;? super T&gt;, com.google.common.base.Predicate&lt;? super T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.StandardSystemProperty USER_DIR'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Stopwatch com.google.common.base.Stopwatch reset()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.CaseFormat java.lang.String to(com.google.common.base.CaseFormat, java.lang.String) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.CaseFormat com.google.common.base.Converter&lt;java.lang.String,java.lang.String&gt; converterTo(com.google.common.base.CaseFormat)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.StandardSystemProperty JAVA_IO_TMPDIR'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.CharMatcher com.google.common.base.CharMatcher precomputed()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Predicates com.google.common.base.Predicate&lt;T&gt; in(java.util.Collection&lt;? extends T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.CharMatcher java.lang.String retainFrom(java.lang.CharSequence) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.MoreObjects.ToStringHelper com.google.common.base.MoreObjects.ToStringHelper addValue(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Equivalence com.google.common.base.Predicate&lt;T&gt; equivalentTo(T)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Predicates com.google.common.base.Predicate&lt;T&gt; or(java.lang.Iterable&lt;? extends com.google.common.base.Predicate&lt;? super T&gt;&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Joiner java.lang.StringBuilder appendTo(java.lang.StringBuilder, java.lang.Object[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Stopwatch com.google.common.base.Stopwatch createStarted()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Predicates com.google.common.base.Predicate&lt;java.lang.CharSequence&gt; containsPattern(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Objects.ToStringHelper com.google.common.base.Objects.ToStringHelper addValue(char)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Equivalence com.google.common.base.Equivalence&lt;java.lang.Object&gt; identity()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.CaseFormat LOWER_HYPHEN'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.CharMatcher com.google.common.base.CharMatcher digit()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.MoreObjects.ToStringHelper com.google.common.base.MoreObjects.ToStringHelper add(java.lang.String, java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Objects.ToStringHelper com.google.common.base.Objects.ToStringHelper addValue(boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Splitter com.google.common.base.Splitter trimResults()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.MoreObjects.ToStringHelper com.google.common.base.MoreObjects.ToStringHelper add(java.lang.String, float)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Objects.ToStringHelper com.google.common.base.Objects.ToStringHelper addValue(float)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Joiner A appendTo(A, java.lang.Iterable&lt;?&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.CharMatcher java.lang.String trimFrom(java.lang.CharSequence) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Optional com.google.common.base.Optional&lt;T&gt; of(T) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Joiner java.lang.StringBuilder appendTo(java.lang.StringBuilder, java.lang.Object[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Preconditions T checkNotNull(T)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.CharMatcher int indexIn(java.lang.CharSequence, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.MoreObjects.ToStringHelper com.google.common.base.MoreObjects.ToStringHelper add(java.lang.String, java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Predicates com.google.common.base.Predicate&lt;T&gt; in(java.util.Collection&lt;? extends T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Joiner A appendTo(A, java.lang.Object, java.lang.Object, java.lang.Object...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Joiner com.google.common.base.Joiner useForNull(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Splitter com.google.common.base.Splitter on(java.util.regex.Pattern)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Joiner A appendTo(A, java.lang.Object, java.lang.Object, java.lang.Object...) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Predicates com.google.common.base.Predicate&lt;T&gt; and(com.google.common.base.Predicate&lt;? super T&gt;, com.google.common.base.Predicate&lt;? super T&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Stopwatch com.google.common.base.Stopwatch createStarted(com.google.common.base.Ticker)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.CharMatcher java.lang.String trimTrailingFrom(java.lang.CharSequence) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.MoreObjects com.google.common.base.MoreObjects.ToStringHelper toStringHelper(java.lang.Class&lt;?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Ascii java.lang.String truncate(java.lang.CharSequence, int, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.MoreObjects.ToStringHelper com.google.common.base.MoreObjects.ToStringHelper addValue(char)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Joiner java.lang.String join(java.lang.Object, java.lang.Object, java.lang.Object...) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Joiner.MapJoiner java.lang.String join(java.util.Iterator&lt;? extends java.util.Map.Entry&lt;?,?&gt;&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.StandardSystemProperty JAVA_VM_NAME'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Joiner com.google.common.base.Joiner useForNull(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.MoreObjects.ToStringHelper com.google.common.base.MoreObjects.ToStringHelper add(java.lang.String, double)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Strings java.lang.String repeat(java.lang.String, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Equivalence com.google.common.base.Equivalence&lt;java.lang.Iterable&lt;S&gt;&gt; pairwise()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Suppliers com.google.common.base.Supplier&lt;T&gt; memoize(com.google.common.base.Supplier&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Objects com.google.common.base.Objects.ToStringHelper toStringHelper(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Predicates com.google.common.base.Predicate&lt;T&gt; or(java.lang.Iterable&lt;? extends com.google.common.base.Predicate&lt;? super T&gt;&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Functions com.google.common.base.Function&lt;K,V&gt; forMap(java.util.Map&lt;K,? extends V&gt;, V)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Joiner A appendTo(A, java.lang.Iterable&lt;?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Strings java.lang.String padEnd(java.lang.String, int, char) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.CharMatcher java.lang.String trimFrom(java.lang.CharSequence)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Ascii java.lang.String truncate(java.lang.CharSequence, int, java.lang.String) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.CharMatcher java.lang.String trimAndCollapseFrom(java.lang.CharSequence, char) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Predicates com.google.common.base.Predicate&lt;A&gt; compose(com.google.common.base.Predicate&lt;B&gt;, com.google.common.base.Function&lt;A,? extends B&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.MoreObjects.ToStringHelper com.google.common.base.MoreObjects.ToStringHelper addValue(float)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Predicates com.google.common.base.Predicate&lt;A&gt; compose(com.google.common.base.Predicate&lt;B&gt;, com.google.common.base.Function&lt;A,? extends B&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.CaseFormat com.google.common.base.Converter&lt;java.lang.String,java.lang.String&gt; converterTo(com.google.common.base.CaseFormat) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Throwables java.lang.Throwable getRootCause(java.lang.Throwable) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.MoreObjects.ToStringHelper com.google.common.base.MoreObjects.ToStringHelper add(java.lang.String, char)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.MoreObjects.ToStringHelper com.google.common.base.MoreObjects.ToStringHelper omitNullValues()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.MoreObjects.ToStringHelper com.google.common.base.MoreObjects.ToStringHelper addValue(long)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Ascii java.lang.String toUpperCase(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Predicates com.google.common.base.Predicate&lt;A&gt; compose(com.google.common.base.Predicate&lt;B&gt;, com.google.common.base.Function&lt;A,? extends B&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.CharMatcher ANY'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.CharMatcher com.google.common.base.CharMatcher breakingWhitespace()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.StandardSystemProperty JAVA_VM_SPECIFICATION_VENDOR'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.MoreObjects.ToStringHelper com.google.common.base.MoreObjects.ToStringHelper add(java.lang.String, float) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.MoreObjects.ToStringHelper com.google.common.base.MoreObjects.ToStringHelper addValue(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Enums com.google.common.base.Optional&lt;T&gt; getIfPresent(java.lang.Class&lt;T&gt;, java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Joiner java.lang.String join(java.lang.Iterable&lt;?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.StandardSystemProperty JAVA_VM_VENDOR'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Functions com.google.common.base.Function&lt;java.lang.Object,T&gt; forSupplier(com.google.common.base.Supplier&lt;T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.CharMatcher com.google.common.base.CharMatcher whitespace()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Joiner com.google.common.base.Joiner on(char)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.FinalizableWeakReference FinalizableWeakReference(T, com.google.common.base.FinalizableReferenceQueue) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.MoreObjects com.google.common.base.MoreObjects.ToStringHelper toStringHelper(java.lang.Class&lt;?&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Predicates com.google.common.base.Predicate&lt;java.lang.Object&gt; instanceOf(java.lang.Class&lt;?&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Objects.ToStringHelper com.google.common.base.Objects.ToStringHelper addValue(double)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.CharMatcher com.google.common.base.CharMatcher javaLetter()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Throwables void propagateIfPossible(java.lang.Throwable, java.lang.Class&lt;X1&gt;, java.lang.Class&lt;X2&gt;) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Joiner.MapJoiner com.google.common.base.Joiner.MapJoiner useForNull(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Joiner.MapJoiner java.lang.StringBuilder appendTo(java.lang.StringBuilder, java.lang.Iterable&lt;? extends java.util.Map.Entry&lt;?,?&gt;&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Predicates com.google.common.base.Predicate&lt;java.lang.CharSequence&gt; contains(java.util.regex.Pattern)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.StandardSystemProperty JAVA_VM_SPECIFICATION_VERSION'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Defaults T defaultValue(java.lang.Class&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Functions com.google.common.base.Function&lt;A,C&gt; compose(com.google.common.base.Function&lt;B,C&gt;, com.google.common.base.Function&lt;A,? extends B&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Predicates com.google.common.base.Predicate&lt;T&gt; isNull()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Optional java.lang.Iterable&lt;T&gt; presentInstances(java.lang.Iterable&lt;? extends com.google.common.base.Optional&lt;? extends T&gt;&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.CharMatcher com.google.common.base.CharMatcher negate()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.StandardSystemProperty OS_VERSION'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Suppliers com.google.common.base.Supplier&lt;T&gt; synchronizedSupplier(com.google.common.base.Supplier&lt;T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Suppliers com.google.common.base.Supplier&lt;T&gt; synchronizedSupplier(com.google.common.base.Supplier&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Joiner java.lang.StringBuilder appendTo(java.lang.StringBuilder, java.lang.Iterable&lt;?&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Optional T or(com.google.common.base.Supplier&lt;? extends T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Functions com.google.common.base.Function&lt;A,C&gt; compose(com.google.common.base.Function&lt;B,C&gt;, com.google.common.base.Function&lt;A,? extends B&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Predicates com.google.common.base.Predicate&lt;java.lang.Class&lt;?&gt;&gt; assignableFrom(java.lang.Class&lt;?&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.MoreObjects.ToStringHelper com.google.common.base.MoreObjects.ToStringHelper add(java.lang.String, char) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Predicates com.google.common.base.Predicate&lt;java.lang.Class&lt;?&gt;&gt; assignableFrom(java.lang.Class&lt;?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.MoreObjects T firstNonNull(T, T)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Utf8 boolean isWellFormed(byte[], int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.StandardSystemProperty JAVA_CLASS_PATH'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.CharMatcher JAVA_LETTER'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Splitter.MapSplitter java.util.Map&lt;java.lang.String,java.lang.String&gt; split(java.lang.CharSequence) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.MoreObjects.ToStringHelper com.google.common.base.MoreObjects.ToStringHelper add(java.lang.String, long) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Functions com.google.common.base.Function&lt;A,C&gt; compose(com.google.common.base.Function&lt;B,C&gt;, com.google.common.base.Function&lt;A,? extends B&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Optional T or(com.google.common.base.Supplier&lt;? extends T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Predicates com.google.common.base.Predicate&lt;java.lang.Object&gt; instanceOf(java.lang.Class&lt;?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.CharMatcher com.google.common.base.CharMatcher javaIsoControl()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.CharMatcher BREAKING_WHITESPACE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Joiner java.lang.StringBuilder appendTo(java.lang.StringBuilder, java.lang.Iterable&lt;?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Joiner java.lang.StringBuilder appendTo(java.lang.StringBuilder, java.lang.Object, java.lang.Object, java.lang.Object...) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Predicates com.google.common.base.Predicate&lt;T&gt; and(com.google.common.base.Predicate&lt;? super T&gt;...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Objects com.google.common.base.Objects.ToStringHelper toStringHelper(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Suppliers com.google.common.base.Supplier&lt;T&gt; memoizeWithExpiration(com.google.common.base.Supplier&lt;T&gt;, long, java.util.concurrent.TimeUnit)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Predicates com.google.common.base.Predicate&lt;java.lang.CharSequence&gt; contains(java.util.regex.Pattern) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Splitter com.google.common.base.Splitter.MapSplitter withKeyValueSeparator(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Joiner.MapJoiner java.lang.String join(java.util.Map&lt;?,?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Functions com.google.common.base.Function&lt;java.lang.Object,E&gt; constant(E)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.StandardSystemProperty JAVA_VM_SPECIFICATION_NAME'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Joiner java.lang.StringBuilder appendTo(java.lang.StringBuilder, java.lang.Iterable&lt;?&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Ascii java.lang.String toLowerCase(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.CharMatcher com.google.common.base.CharMatcher javaDigit()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Predicates com.google.common.base.Predicate&lt;T&gt; notNull()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.CharMatcher com.google.common.base.CharMatcher isNot(char)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.CharMatcher int lastIndexIn(java.lang.CharSequence) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Objects.ToStringHelper com.google.common.base.Objects.ToStringHelper add(java.lang.String, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Predicates com.google.common.base.Predicate&lt;T&gt; not(com.google.common.base.Predicate&lt;T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Splitter com.google.common.base.Splitter fixedLength(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Joiner.MapJoiner java.lang.String join(java.lang.Iterable&lt;? extends java.util.Map.Entry&lt;?,?&gt;&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Splitter com.google.common.base.Splitter trimResults(com.google.common.base.CharMatcher)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.StandardSystemProperty JAVA_CLASS_VERSION'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Joiner java.lang.StringBuilder appendTo(java.lang.StringBuilder, java.lang.Object, java.lang.Object, java.lang.Object...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Suppliers com.google.common.base.Supplier&lt;T&gt; memoizeWithExpiration(com.google.common.base.Supplier&lt;T&gt;, long, java.util.concurrent.TimeUnit) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Joiner.MapJoiner java.lang.StringBuilder appendTo(java.lang.StringBuilder, java.lang.Iterable&lt;? extends java.util.Map.Entry&lt;?,?&gt;&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Optional java.lang.Iterable&lt;T&gt; presentInstances(java.lang.Iterable&lt;? extends com.google.common.base.Optional&lt;? extends T&gt;&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Functions com.google.common.base.Function&lt;T,java.lang.Boolean&gt; forPredicate(com.google.common.base.Predicate&lt;T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Ascii boolean equalsIgnoreCase(java.lang.CharSequence, java.lang.CharSequence) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.MoreObjects.ToStringHelper com.google.common.base.MoreObjects.ToStringHelper add(java.lang.String, long)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.CharMatcher java.lang.String removeFrom(java.lang.CharSequence) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Suppliers com.google.common.base.Supplier&lt;T&gt; compose(com.google.common.base.Function&lt;? super F,T&gt;, com.google.common.base.Supplier&lt;F&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.CharMatcher JAVA_LETTER_OR_DIGIT'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Suppliers com.google.common.base.Supplier&lt;T&gt; compose(com.google.common.base.Function&lt;? super F,T&gt;, com.google.common.base.Supplier&lt;F&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Objects.ToStringHelper com.google.common.base.Objects.ToStringHelper addValue(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Equivalence boolean doEquivalent(T, T) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CaseFormat LOWER_UNDERSCORE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Objects.ToStringHelper com.google.common.base.Objects.ToStringHelper add(java.lang.String, long)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Joiner java.lang.StringBuilder appendTo(java.lang.StringBuilder, java.util.Iterator&lt;?&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Splitter com.google.common.base.Splitter trimResults(com.google.common.base.CharMatcher) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Suppliers com.google.common.base.Supplier&lt;T&gt; compose(com.google.common.base.Function&lt;? super F,T&gt;, com.google.common.base.Supplier&lt;F&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Joiner.MapJoiner java.lang.StringBuilder appendTo(java.lang.StringBuilder, java.lang.Iterable&lt;? extends java.util.Map.Entry&lt;?,?&gt;&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Predicates com.google.common.base.Predicate&lt;T&gt; or(com.google.common.base.Predicate&lt;? super T&gt;...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.CharMatcher com.google.common.base.CharMatcher and(com.google.common.base.CharMatcher) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Joiner.MapJoiner A appendTo(A, java.lang.Iterable&lt;? extends java.util.Map.Entry&lt;?,?&gt;&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Stopwatch com.google.common.base.Stopwatch createStarted(com.google.common.base.Ticker) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Converter java.lang.Iterable&lt;B&gt; convertAll(java.lang.Iterable&lt;? extends A&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Stopwatch com.google.common.base.Stopwatch stop()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Equivalence com.google.common.base.Equivalence.Wrapper&lt;S&gt; wrap(S)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Objects.ToStringHelper com.google.common.base.Objects.ToStringHelper add(java.lang.String, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Ticker com.google.common.base.Ticker systemTicker()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Joiner java.lang.StringBuilder appendTo(java.lang.StringBuilder, java.lang.Object, java.lang.Object, java.lang.Object...) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.CaseFormat java.lang.String to(com.google.common.base.CaseFormat, java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Equivalence boolean doEquivalent(T, T) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher INVISIBLE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.CharMatcher ASCII'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Joiner.MapJoiner A appendTo(A, java.util.Iterator&lt;? extends java.util.Map.Entry&lt;?,?&gt;&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.CharMatcher com.google.common.base.CharMatcher and(com.google.common.base.CharMatcher)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Objects.ToStringHelper com.google.common.base.Objects.ToStringHelper add(java.lang.String, long) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Objects com.google.common.base.Objects.ToStringHelper toStringHelper(java.lang.Class&lt;?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Optional T or(T)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Optional com.google.common.base.Optional&lt;T&gt; of(T)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.CharMatcher com.google.common.base.CharMatcher any()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Converter java.lang.Iterable&lt;B&gt; convertAll(java.lang.Iterable&lt;? extends A&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Objects.ToStringHelper com.google.common.base.Objects.ToStringHelper add(java.lang.String, float) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Objects.ToStringHelper com.google.common.base.Objects.ToStringHelper add(java.lang.String, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Strings java.lang.String commonSuffix(java.lang.CharSequence, java.lang.CharSequence) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.StandardSystemProperty JAVA_VENDOR'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.StandardSystemProperty OS_NAME'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Joiner.MapJoiner A appendTo(A, java.util.Map&lt;?,?&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Objects.ToStringHelper com.google.common.base.Objects.ToStringHelper add(java.lang.String, char)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Strings java.lang.String nullToEmpty(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Splitter java.lang.Iterable&lt;java.lang.String&gt; split(java.lang.CharSequence) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Joiner com.google.common.base.Joiner skipNulls()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Functions com.google.common.base.Function&lt;T,java.lang.Boolean&gt; forPredicate(com.google.common.base.Predicate&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Joiner.MapJoiner A appendTo(A, java.util.Iterator&lt;? extends java.util.Map.Entry&lt;?,?&gt;&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Splitter com.google.common.base.Splitter on(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Splitter com.google.common.base.Splitter.MapSplitter withKeyValueSeparator(com.google.common.base.Splitter)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Joiner.MapJoiner java.lang.StringBuilder appendTo(java.lang.StringBuilder, java.util.Map&lt;?,?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.CharMatcher com.google.common.base.CharMatcher javaUpperCase()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.CharMatcher WHITESPACE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.StandardSystemProperty LINE_SEPARATOR'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Strings java.lang.String commonSuffix(java.lang.CharSequence, java.lang.CharSequence) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Joiner.MapJoiner java.lang.StringBuilder appendTo(java.lang.StringBuilder, java.util.Iterator&lt;? extends java.util.Map.Entry&lt;?,?&gt;&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.CharMatcher java.lang.String replaceFrom(java.lang.CharSequence, char)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Objects.ToStringHelper com.google.common.base.Objects.ToStringHelper addValue(long)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Objects com.google.common.base.Objects.ToStringHelper toStringHelper(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Throwables java.lang.String getStackTraceAsString(java.lang.Throwable) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Joiner.MapJoiner A appendTo(A, java.lang.Iterable&lt;? extends java.util.Map.Entry&lt;?,?&gt;&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.CharMatcher boolean matchesAnyOf(java.lang.CharSequence) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Ascii java.lang.String toLowerCase(java.lang.CharSequence) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.CaseFormat UPPER_CAMEL'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Strings java.lang.String commonPrefix(java.lang.CharSequence, java.lang.CharSequence) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.CharMatcher java.lang.String removeFrom(java.lang.CharSequence)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Suppliers com.google.common.base.Supplier&lt;T&gt; memoizeWithExpiration(com.google.common.base.Supplier&lt;T&gt;, long, java.util.concurrent.TimeUnit) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.StandardSystemProperty FILE_SEPARATOR'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Joiner java.lang.StringBuilder appendTo(java.lang.StringBuilder, java.util.Iterator&lt;?&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.MoreObjects.ToStringHelper com.google.common.base.MoreObjects.ToStringHelper addValue(boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.StandardSystemProperty USER_NAME'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Equivalence com.google.common.base.Equivalence&lt;java.lang.Object&gt; equals()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Suppliers com.google.common.base.Function&lt;com.google.common.base.Supplier&lt;T&gt;,T&gt; supplierFunction()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Function T apply(F) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.base.MoreObjects com.google.common.base.MoreObjects.ToStringHelper toStringHelper(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Preconditions T checkNotNull(T, java.lang.String, java.lang.Object...) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Strings java.lang.String commonPrefix(java.lang.CharSequence, java.lang.CharSequence) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Joiner.MapJoiner A appendTo(A, java.util.Iterator&lt;? extends java.util.Map.Entry&lt;?,?&gt;&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.MoreObjects com.google.common.base.MoreObjects.ToStringHelper toStringHelper(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Objects.ToStringHelper com.google.common.base.Objects.ToStringHelper omitNullValues()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.StandardSystemProperty JAVA_COMPILER'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.CharMatcher JAVA_UPPER_CASE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Objects com.google.common.base.Objects.ToStringHelper toStringHelper(java.lang.Class&lt;?&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Splitter java.lang.Iterable&lt;java.lang.String&gt; split(java.lang.CharSequence)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Objects T firstNonNull(T, T)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Joiner java.lang.StringBuilder appendTo(java.lang.StringBuilder, java.util.Iterator&lt;?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.StandardSystemProperty JAVA_LIBRARY_PATH'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Splitter java.util.List&lt;java.lang.String&gt; splitToList(java.lang.CharSequence) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Objects.ToStringHelper com.google.common.base.Objects.ToStringHelper add(java.lang.String, double)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Splitter com.google.common.base.Splitter onPattern(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.CharMatcher com.google.common.base.CharMatcher javaLowerCase()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Joiner A appendTo(A, java.util.Iterator&lt;?&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Predicates com.google.common.base.Predicate&lt;T&gt; or(com.google.common.base.Predicate&lt;? super T&gt;, com.google.common.base.Predicate&lt;? super T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Optional java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Stopwatch long elapsed(java.util.concurrent.TimeUnit) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.MoreObjects com.google.common.base.MoreObjects.ToStringHelper toStringHelper(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.CharMatcher com.google.common.base.CharMatcher is(char)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Joiner java.lang.String join(java.util.Iterator&lt;?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Joiner.MapJoiner A appendTo(A, java.util.Map&lt;?,?&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.MoreObjects com.google.common.base.MoreObjects.ToStringHelper toStringHelper(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.CharMatcher com.google.common.base.CharMatcher ascii()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Utf8 int encodedLength(java.lang.CharSequence) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Enums com.google.common.base.Converter&lt;java.lang.String,T&gt; stringConverter(java.lang.Class&lt;T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Splitter com.google.common.base.Splitter on(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Optional T or(T) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Objects.ToStringHelper com.google.common.base.Objects.ToStringHelper add(java.lang.String, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Objects.ToStringHelper com.google.common.base.Objects.ToStringHelper add(java.lang.String, float)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Converter B apply(A) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Objects com.google.common.base.Objects.ToStringHelper toStringHelper(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.StandardSystemProperty JAVA_VENDOR_URL'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.StandardSystemProperty OS_ARCH'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.StandardSystemProperty USER_HOME'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.StandardSystemProperty JAVA_SPECIFICATION_NAME'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Equivalence int doHash(T) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.base.CharMatcher JAVA_LOWER_CASE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Converter B doForward(A) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.base.Converter com.google.common.base.Converter&lt;T,T&gt; identity()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Joiner.MapJoiner java.lang.StringBuilder appendTo(java.lang.StringBuilder, java.util.Map&lt;?,?&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Splitter com.google.common.base.Splitter.MapSplitter withKeyValueSeparator(com.google.common.base.Splitter) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Splitter com.google.common.base.Splitter.MapSplitter withKeyValueSeparator(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Predicates com.google.common.base.Predicate&lt;T&gt; not(com.google.common.base.Predicate&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.StandardSystemProperty JAVA_EXT_DIRS'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Throwables java.util.List&lt;java.lang.StackTraceElement&gt; lazyStackTrace(java.lang.Throwable) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Stopwatch com.google.common.base.Stopwatch createUnstarted()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Joiner.MapJoiner java.lang.StringBuilder appendTo(java.lang.StringBuilder, java.util.Iterator&lt;? extends java.util.Map.Entry&lt;?,?&gt;&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Joiner.MapJoiner java.lang.StringBuilder appendTo(java.lang.StringBuilder, java.util.Iterator&lt;? extends java.util.Map.Entry&lt;?,?&gt;&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Splitter com.google.common.base.Splitter.MapSplitter withKeyValueSeparator(char)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.CharMatcher java.lang.String replaceFrom(java.lang.CharSequence, char) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Functions com.google.common.base.Function&lt;java.lang.Object,java.lang.String&gt; toStringFunction()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Preconditions T checkNotNull(T, java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.CharMatcher boolean matchesAllOf(java.lang.CharSequence) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Functions com.google.common.base.Function&lt;E,E&gt; identity()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.StandardSystemProperty JAVA_HOME'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Joiner.MapJoiner java.lang.StringBuilder appendTo(java.lang.StringBuilder, java.util.Map&lt;?,?&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Enums java.lang.reflect.Field getField(java.lang.Enum&lt;?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Joiner.MapJoiner A appendTo(A, java.util.Map&lt;?,?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.CharMatcher boolean matchesNoneOf(java.lang.CharSequence) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.MoreObjects.ToStringHelper com.google.common.base.MoreObjects.ToStringHelper add(java.lang.String, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.base.Stopwatch com.google.common.base.Stopwatch createUnstarted(com.google.common.base.Ticker)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
</root>
