<root>
    <item name='com.google.common.collect.Tables com.google.common.collect.Table&lt;C,R,V&gt; transpose(com.google.common.collect.Table&lt;R,C,V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap com.google.common.collect.ImmutableSetMultimap&lt;K,V&gt; of(K, V, K, V, K, V, K, V, K, V) 8'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterators com.google.common.collect.UnmodifiableIterator&lt;T&gt; unmodifiableIterator(java.util.Iterator&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap.Builder com.google.common.collect.ImmutableMultimap.Builder&lt;K,V&gt; putAll(K, V...) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Queues java.util.PriorityQueue&lt;E&gt; newPriorityQueue(java.lang.Iterable&lt;? extends E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Queues java.util.Queue&lt;E&gt; synchronizedQueue(java.util.Queue&lt;E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableBiMap.Builder com.google.common.collect.ImmutableMap.Builder orderEntriesByValue(java.util.Comparator) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Sets com.google.common.collect.Sets.SetView&lt;E&gt; union(java.util.Set&lt;? extends E&gt;, java.util.Set&lt;? extends E&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.EnumBiMap java.util.Set entrySet()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.FluentIterable com.google.common.collect.ImmutableMap&lt;K,E&gt; uniqueIndex(com.google.common.base.Function&lt;? super E,K&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap.Builder com.google.common.collect.ImmutableSetMultimap.Builder&lt;K,V&gt; putAll(java.lang.Iterable&lt;? extends java.util.Map.Entry&lt;? extends K,? extends V&gt;&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ContiguousSet java.util.SortedSet subSet(java.lang.Object, java.lang.Object) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterators com.google.common.collect.UnmodifiableIterator&lt;T&gt; forEnumeration(java.util.Enumeration&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multimap boolean putAll(K, java.lang.Iterable&lt;? extends V&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Sets java.util.concurrent.CopyOnWriteArraySet&lt;E&gt; newCopyOnWriteArraySet(java.lang.Iterable&lt;? extends E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Tables com.google.common.collect.Table&lt;R,C,V&gt; unmodifiableTable(com.google.common.collect.Table&lt;? extends R,? extends C,? extends V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableRangeSet com.google.common.collect.ImmutableRangeSet&lt;C&gt; copyOf(com.google.common.collect.RangeSet&lt;C&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableClassToInstanceMap com.google.common.collect.ImmutableClassToInstanceMap&lt;B&gt; copyOf(java.util.Map&lt;? extends java.lang.Class&lt;? extends S&gt;,? extends S&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap com.google.common.collect.ImmutableSetMultimap&lt;K,V&gt; of(K, V, K, V, K, V, K, V, K, V) 9'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multimaps com.google.common.collect.ListMultimap&lt;K,V&gt; unmodifiableListMultimap(com.google.common.collect.ListMultimap&lt;K,V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ContiguousSet java.util.SortedSet subSet(java.lang.Object, java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.EvictingQueue boolean remove(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterables java.lang.Iterable&lt;java.util.List&lt;T&gt;&gt; partition(java.lang.Iterable&lt;T&gt;, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableCollection java.util.Iterator iterator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterators com.google.common.collect.UnmodifiableIterator&lt;T&gt; singletonIterator(T)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingCollection boolean contains(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps com.google.common.collect.SortedMapDifference&lt;K,V&gt; difference(java.util.SortedMap&lt;K,? extends V&gt;, java.util.Map&lt;? extends K,? extends V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ArrayListMultimap boolean putAll(com.google.common.collect.Multimap) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap com.google.common.collect.ImmutableSortedMap&lt;K,V&gt; copyOf(java.util.Map&lt;? extends K,? extends V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet.Builder com.google.common.collect.ImmutableSortedSet.Builder&lt;E&gt; add(E)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multimap boolean putAll(K, java.lang.Iterable&lt;? extends V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap com.google.common.collect.ImmutableSetMultimap&lt;K,V&gt; of(K, V, K, V, K, V, K, V, K, V) 6'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap com.google.common.collect.ImmutableSortedMap&lt;K,V&gt; copyOf(java.util.Map&lt;? extends K,? extends V&gt;, java.util.Comparator&lt;? super K&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.TreeRangeMap java.util.Map&lt;com.google.common.collect.Range&lt;K&gt;,V&gt; asDescendingMapOfRanges()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Collections2 java.util.Collection&lt;E&gt; filter(java.util.Collection&lt;E&gt;, com.google.common.base.Predicate&lt;? super E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Range com.google.common.collect.Range&lt;C&gt; closedOpen(C, C) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterables java.lang.Iterable&lt;T&gt; filter(java.lang.Iterable&lt;?&gt;, java.lang.Class&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableCollection.Builder com.google.common.collect.ImmutableCollection.Builder&lt;E&gt; addAll(java.util.Iterator&lt;? extends E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.FluentIterable com.google.common.collect.FluentIterable&lt;E&gt; append(java.lang.Iterable&lt;? extends E&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Range com.google.common.collect.Range&lt;C&gt; span(com.google.common.collect.Range&lt;C&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Sets com.google.common.collect.ImmutableSet&lt;E&gt; immutableEnumSet(E, E...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableBiMap com.google.common.collect.ImmutableBiMap&lt;K,V&gt; of()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ContiguousSet com.google.common.collect.ContiguousSet&lt;C&gt; create(com.google.common.collect.Range&lt;C&gt;, com.google.common.collect.DiscreteDomain&lt;C&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap com.google.common.collect.ImmutableSetMultimap&lt;K,V&gt; of(K, V, K, V, K, V, K, V) 7'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterables boolean contains(java.lang.Iterable&lt;?&gt;, java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterators boolean retainAll(java.util.Iterator&lt;?&gt;, java.util.Collection&lt;?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Range com.google.common.collect.Range&lt;C&gt; upTo(C, com.google.common.collect.BoundType)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Sets java.util.Set&lt;E&gt; newConcurrentHashSet(java.lang.Iterable&lt;? extends E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Tables com.google.common.collect.Table&lt;R,C,V&gt; newCustomTable(java.util.Map&lt;R,java.util.Map&lt;C,V&gt;&gt;, com.google.common.base.Supplier&lt;? extends java.util.Map&lt;C,V&gt;&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap com.google.common.collect.ImmutableMultimap&lt;K,V&gt; of(K, V)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multimaps com.google.common.collect.Multimap&lt;K,V&gt; newMultimap(java.util.Map&lt;K,java.util.Collection&lt;V&gt;&gt;, com.google.common.base.Supplier&lt;? extends java.util.Collection&lt;V&gt;&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.SortedLists.KeyPresentBehavior FIRST_AFTER'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMap.Builder com.google.common.collect.ImmutableMap.Builder&lt;K,V&gt; orderEntriesByValue(java.util.Comparator&lt;? super V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap.Builder com.google.common.collect.ImmutableListMultimap.Builder&lt;K,V&gt; putAll(com.google.common.collect.Multimap&lt;? extends K,? extends V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap com.google.common.collect.ImmutableSetMultimap&lt;K,V&gt; of(K, V, K, V, K, V, K, V, K, V) 7'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap com.google.common.collect.ImmutableSortedMap&lt;K,V&gt; copyOf(java.util.Map&lt;? extends K,? extends V&gt;, java.util.Comparator&lt;? super K&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap com.google.common.collect.ImmutableMultimap inverse()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Queues java.util.concurrent.LinkedBlockingDeque&lt;E&gt; newLinkedBlockingDeque(java.lang.Iterable&lt;? extends E&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Range com.google.common.collect.Range&lt;C&gt; closedOpen(C, C) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet.Builder com.google.common.collect.ImmutableCollection.Builder add(java.lang.Object[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableRangeSet.Builder com.google.common.collect.ImmutableRangeSet.Builder&lt;C&gt; add(com.google.common.collect.Range&lt;C&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableBiMap.Builder com.google.common.collect.ImmutableBiMap.Builder&lt;K,V&gt; put(K, V)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap com.google.common.collect.ImmutableSetMultimap&lt;K,V&gt; of(K, V, K, V, K, V, K, V) 6'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterables T getFirst(java.lang.Iterable&lt;? extends T&gt;, T) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ContiguousSet com.google.common.collect.ContiguousSet&lt;C&gt; create(com.google.common.collect.Range&lt;C&gt;, com.google.common.collect.DiscreteDomain&lt;C&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterators com.google.common.collect.PeekingIterator&lt;T&gt; peekingIterator(java.util.Iterator&lt;? extends T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet.Builder com.google.common.collect.ImmutableSortedSet.Builder&lt;E&gt; addAll(java.lang.Iterable&lt;? extends E&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterables java.lang.Iterable&lt;java.util.List&lt;T&gt;&gt; paddedPartition(java.lang.Iterable&lt;T&gt;, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterators boolean retainAll(java.util.Iterator&lt;?&gt;, java.util.Collection&lt;?&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Tables com.google.common.collect.Table&lt;R,C,V&gt; newCustomTable(java.util.Map&lt;R,java.util.Map&lt;C,V&gt;&gt;, com.google.common.base.Supplier&lt;? extends java.util.Map&lt;C,V&gt;&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet E floor(E) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multimap boolean put(K, V) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingMap java.util.Map&lt;K,V&gt; delegate()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Lists java.util.List&lt;java.util.List&lt;T&gt;&gt; partition(java.util.List&lt;T&gt;, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Sets java.util.TreeSet&lt;E&gt; newTreeSet()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multisets com.google.common.collect.Multiset.Entry&lt;E&gt; immutableEntry(E, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableBiMap com.google.common.collect.ImmutableBiMap&lt;K,V&gt; copyOf(java.lang.Iterable&lt;? extends java.util.Map.Entry&lt;? extends K,? extends V&gt;&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableList.Builder com.google.common.collect.ImmutableList.Builder&lt;E&gt; addAll(java.lang.Iterable&lt;? extends E&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ObjectArrays T[] concat(T, T[]) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Range com.google.common.collect.Range&lt;C&gt; greaterThan(C)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingCollection T[] standardToArray(T[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap.Builder com.google.common.collect.ImmutableListMultimap.Builder&lt;K,V&gt; put(java.util.Map.Entry&lt;? extends K,? extends V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multimaps com.google.common.collect.SortedSetMultimap&lt;K,V&gt; newSortedSetMultimap(java.util.Map&lt;K,java.util.Collection&lt;V&gt;&gt;, com.google.common.base.Supplier&lt;? extends java.util.SortedSet&lt;V&gt;&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ListMultimap java.util.List&lt;V&gt; get(K) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap com.google.common.collect.ImmutableListMultimap&lt;K,V&gt; of(K, V, K, V, K, V, K, V) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.LinkedHashMultiset boolean removeAll(java.util.Collection) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Range com.google.common.collect.Range&lt;C&gt; all()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap.Builder com.google.common.collect.ImmutableMultimap.Builder putAll(java.lang.Object, java.lang.Object[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.LinkedListMultimap java.util.Collection get(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Tables com.google.common.collect.Table.Cell&lt;R,C,V&gt; immutableCell(R, C, V)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ObjectArrays T[] newArray(T[], int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Collections2 java.util.Collection&lt;E&gt; filter(java.util.Collection&lt;E&gt;, com.google.common.base.Predicate&lt;? super E&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.FluentIterable com.google.common.collect.ImmutableListMultimap&lt;K,E&gt; index(com.google.common.base.Function&lt;? super E,K&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.AbstractSequentialIterator T computeNext(T) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap com.google.common.collect.ImmutableCollection&lt;V&gt; values()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap V get(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MultimapBuilder com.google.common.collect.MultimapBuilder.MultimapBuilderWithKeys&lt;java.lang.Object&gt; linkedHashKeys(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.TreeMultimap com.google.common.collect.TreeMultimap&lt;K,V&gt; create(java.util.Comparator&lt;? super K&gt;, java.util.Comparator&lt;? super V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multiset boolean setCount(E, int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multisets com.google.common.collect.ImmutableMultiset&lt;E&gt; copyHighestCountFirst(com.google.common.collect.Multiset&lt;E&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet com.google.common.collect.ImmutableSortedSet&lt;E&gt; copyOf(E[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultiset.Builder com.google.common.collect.ImmutableCollection.Builder add(java.lang.Object[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableRangeSet boolean encloses(com.google.common.collect.Range&lt;C&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.LinkedHashMultiset com.google.common.collect.LinkedHashMultiset&lt;E&gt; create(java.lang.Iterable&lt;? extends E&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap com.google.common.collect.ImmutableMultimap&lt;K,V&gt; of(K, V, K, V, K, V, K, V)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet com.google.common.collect.ImmutableSortedSet&lt;E&gt; copyOf(java.util.Collection&lt;? extends E&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap com.google.common.collect.ImmutableListMultimap&lt;K,V&gt; of(K, V, K, V, K, V, K, V) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multimaps com.google.common.collect.SortedSetMultimap&lt;K,V&gt; synchronizedSortedSetMultimap(com.google.common.collect.SortedSetMultimap&lt;K,V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultiset.Builder com.google.common.collect.ImmutableMultiset.Builder&lt;E&gt; add(E...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingTable java.util.Map&lt;R,V&gt; column(C) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet com.google.common.collect.ImmutableSortedSet&lt;E&gt; of(E)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ArrayTable java.util.Map&lt;C,V&gt; row(R) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap java.util.Collection get(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap com.google.common.collect.ImmutableSortedMap&lt;K,V&gt; of(K, V) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.TreeMultimap com.google.common.collect.TreeMultimap&lt;K,V&gt; create(java.util.Comparator&lt;? super K&gt;, java.util.Comparator&lt;? super V&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ComparisonChain com.google.common.collect.ComparisonChain compare(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap.Builder com.google.common.collect.ImmutableMultimap.Builder&lt;K,V&gt; putAll(com.google.common.collect.Multimap&lt;? extends K,? extends V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.DiscreteDomain long distance(C, C) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap com.google.common.collect.ImmutableCollection get(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.TreeBasedTable com.google.common.collect.TreeBasedTable&lt;R,C,V&gt; create(java.util.Comparator&lt;? super R&gt;, java.util.Comparator&lt;? super C&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Interners com.google.common.base.Function&lt;E,E&gt; asFunction(com.google.common.collect.Interner&lt;E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.MutableClassToInstanceMap com.google.common.collect.MutableClassToInstanceMap&lt;B&gt; create()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap.Builder com.google.common.collect.ImmutableMultimap.Builder putAll(java.lang.Iterable) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multisets com.google.common.collect.Multiset&lt;E&gt; difference(com.google.common.collect.Multiset&lt;E&gt;, com.google.common.collect.Multiset&lt;?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.MapMaker com.google.common.collect.GenericMapMaker weakKeys()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet com.google.common.collect.UnmodifiableIterator&lt;E&gt; descendingIterator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MutableClassToInstanceMap T getInstance(java.lang.Class&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingSet boolean standardRemoveAll(java.util.Collection&lt;?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap com.google.common.collect.ImmutableListMultimap&lt;K,V&gt; of(K, V, K, V, K, V, K, V) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingTable java.lang.Object delegate()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSet.Builder com.google.common.collect.ImmutableCollection.Builder add(java.lang.Object[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet com.google.common.collect.ImmutableSortedSet&lt;E&gt; of(E, E, E, E, E)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Lists java.util.LinkedList&lt;E&gt; newLinkedList()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterables T[] toArray(java.lang.Iterable&lt;? extends T&gt;, java.lang.Class&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multisets com.google.common.collect.Multiset&lt;E&gt; difference(com.google.common.collect.Multiset&lt;E&gt;, com.google.common.collect.Multiset&lt;?&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap com.google.common.collect.ImmutableSortedMap&lt;K,V&gt; of(K, V) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.DiscreteDomain long distance(C, C) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableTable.Builder com.google.common.collect.ImmutableTable&lt;R,C,V&gt; build()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Lists java.util.List&lt;E&gt; asList(E, E, E[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Sets com.google.common.collect.Sets.SetView&lt;E&gt; union(java.util.Set&lt;? extends E&gt;, java.util.Set&lt;? extends E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multimap java.util.Collection&lt;V&gt; get(K)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap.Builder com.google.common.collect.ImmutableMultimap.Builder&lt;K,V&gt; put(java.util.Map.Entry&lt;? extends K,? extends V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Sets java.util.HashSet&lt;E&gt; newHashSet(E...) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.TreeRangeSet com.google.common.collect.RangeSet&lt;C&gt; subRangeSet(com.google.common.collect.Range&lt;C&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingList java.util.List&lt;E&gt; subList(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps java.util.Map&lt;K,java.util.SortedSet&lt;V&gt;&gt; asMap(com.google.common.collect.SortedSetMultimap&lt;K,V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap com.google.common.collect.ImmutableListMultimap&lt;K,V&gt; of(K, V, K, V, K, V, K, V) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingMap java.lang.Object delegate()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Table java.util.Map&lt;C,V&gt; row(R)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EnumHashBiMap com.google.common.collect.EnumHashBiMap&lt;K,V&gt; create(java.lang.Class&lt;K&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap.Builder com.google.common.collect.ImmutableMultimap.Builder orderValuesBy(java.util.Comparator) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Range com.google.common.collect.Range&lt;C&gt; atLeast(C)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap.Builder com.google.common.collect.ImmutableSetMultimap.Builder&lt;K,V&gt; putAll(K, java.lang.Iterable&lt;? extends V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.DiscreteDomain com.google.common.collect.DiscreteDomain&lt;java.lang.Integer&gt; integers()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Maps com.google.common.base.Converter&lt;A,B&gt; asConverter(com.google.common.collect.BiMap&lt;A,B&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Range com.google.common.collect.Range&lt;C&gt; atMost(C) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet.Builder com.google.common.collect.ImmutableSortedSet.Builder&lt;E&gt; addAll(java.util.Iterator&lt;? extends E&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet.Builder com.google.common.collect.ImmutableSet.Builder add(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMap.Builder com.google.common.collect.ImmutableMap.Builder&lt;K,V&gt; putAll(java.lang.Iterable&lt;? extends java.util.Map.Entry&lt;? extends K,? extends V&gt;&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMap.Builder com.google.common.collect.ImmutableMap.Builder&lt;K,V&gt; putAll(java.util.Map&lt;? extends K,? extends V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap com.google.common.collect.ImmutableSetMultimap&lt;K,V&gt; of(K, V, K, V, K, V, K, V) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.TreeMultiset java.util.NavigableSet elementSet()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterators boolean any(java.util.Iterator&lt;T&gt;, com.google.common.base.Predicate&lt;? super T&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multimaps com.google.common.collect.Multimap&lt;K,V&gt; filterValues(com.google.common.collect.Multimap&lt;K,V&gt;, com.google.common.base.Predicate&lt;? super V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ArrayListMultimap com.google.common.collect.ArrayListMultimap&lt;K,V&gt; create(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap com.google.common.collect.ImmutableSetMultimap&lt;K,V&gt; of(K, V, K, V, K, V, K, V, K, V) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap com.google.common.collect.ImmutableMultimap&lt;K,V&gt; of(K, V, K, V) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Maps java.util.SortedMap&lt;K,V&gt; filterKeys(java.util.SortedMap&lt;K,V&gt;, com.google.common.base.Predicate&lt;? super K&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.TreeRangeSet com.google.common.collect.TreeRangeSet&lt;C&gt; create(com.google.common.collect.RangeSet&lt;C&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingSortedMultiset com.google.common.collect.SortedMultiset&lt;E&gt; subMultiset(E, com.google.common.collect.BoundType, E, com.google.common.collect.BoundType) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap com.google.common.collect.ImmutableListMultimap&lt;K,V&gt; of(K, V, K, V, K, V, K, V) 5'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset com.google.common.collect.ImmutableSortedMultiset.Builder&lt;E&gt; orderedBy(java.util.Comparator&lt;E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap com.google.common.collect.ImmutableSetMultimap&lt;K,V&gt; of(K, V, K, V)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap.Builder com.google.common.collect.ImmutableSetMultimap.Builder&lt;K,V&gt; putAll(K, java.lang.Iterable&lt;? extends V&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap com.google.common.collect.ImmutableMultimap&lt;K,V&gt; of(K, V, K, V, K, V) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.HashMultiset com.google.common.collect.HashMultiset&lt;E&gt; create(java.lang.Iterable&lt;? extends E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Maps com.google.common.collect.BiMap&lt;K,V&gt; filterKeys(com.google.common.collect.BiMap&lt;K,V&gt;, com.google.common.base.Predicate&lt;? super K&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multimaps M invertFrom(com.google.common.collect.Multimap&lt;? extends V,? extends K&gt;, M)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Collections2 java.util.Collection&lt;java.util.List&lt;E&gt;&gt; orderedPermutations(java.lang.Iterable&lt;E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ComparisonChain com.google.common.collect.ComparisonChain compareTrueFirst(boolean, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingMultiset boolean standardRemoveAll(java.util.Collection&lt;?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.HashBiMap java.util.Set&lt;K&gt; keySet()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingMultimap com.google.common.collect.Multimap&lt;K,V&gt; delegate()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingNavigableSet java.util.NavigableSet&lt;E&gt; subSet(E, boolean, E, boolean) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap com.google.common.collect.ImmutableSetMultimap&lt;K,V&gt; of(K, V, K, V, K, V, K, V) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap com.google.common.collect.ImmutableMultimap&lt;K,V&gt; of(K, V, K, V) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultiset.Builder com.google.common.collect.ImmutableMultiset.Builder&lt;E&gt; add(E) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterators com.google.common.collect.UnmodifiableIterator&lt;T&gt; mergeSorted(java.lang.Iterable&lt;? extends java.util.Iterator&lt;? extends T&gt;&gt;, java.util.Comparator&lt;? super T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Sets java.util.LinkedHashSet&lt;E&gt; newLinkedHashSet(java.lang.Iterable&lt;? extends E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableBiMap.Builder com.google.common.collect.ImmutableBiMap.Builder&lt;K,V&gt; put(java.util.Map.Entry&lt;? extends K,? extends V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap com.google.common.collect.ImmutableSetMultimap&lt;K,V&gt; of(K, V, K, V, K, V, K, V, K, V) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingQueue java.util.Collection delegate()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap com.google.common.collect.ImmutableListMultimap&lt;K,V&gt; of(K, V, K, V, K, V, K, V) 4'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Maps com.google.common.collect.BiMap&lt;K,V&gt; filterValues(com.google.common.collect.BiMap&lt;K,V&gt;, com.google.common.base.Predicate&lt;? super V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.FluentIterable com.google.common.collect.ImmutableSortedSet&lt;E&gt; toSortedSet(java.util.Comparator&lt;? super E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap com.google.common.collect.ImmutableSortedMap&lt;K,V&gt; tailMap(K, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap com.google.common.collect.ImmutableMultimap&lt;K,V&gt; of(K, V, K, V, K, V) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet com.google.common.collect.ImmutableSortedSet&lt;E&gt; headSet(E) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Queues java.util.concurrent.ConcurrentLinkedQueue&lt;E&gt; newConcurrentLinkedQueue()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterators int advance(java.util.Iterator&lt;?&gt;, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap com.google.common.collect.ImmutableListMultimap&lt;K,V&gt; of(K, V, K, V, K, V, K, V) 7'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ArrayTable java.util.Map&lt;C,java.util.Map&lt;R,V&gt;&gt; columnMap()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMap.Builder com.google.common.collect.ImmutableMap.Builder&lt;K,V&gt; put(java.util.Map.Entry&lt;? extends K,? extends V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.EnumHashBiMap java.util.Set entrySet()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterators com.google.common.collect.UnmodifiableIterator&lt;T&gt; unmodifiableIterator(com.google.common.collect.UnmodifiableIterator&lt;T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingSortedMultiset com.google.common.collect.SortedMultiset&lt;E&gt; subMultiset(E, com.google.common.collect.BoundType, E, com.google.common.collect.BoundType) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps com.google.common.collect.SetMultimap&lt;K,V&gt; filterValues(com.google.common.collect.SetMultimap&lt;K,V&gt;, com.google.common.base.Predicate&lt;? super V&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Interners com.google.common.collect.Interner&lt;E&gt; newStrongInterner()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Collections2 java.util.Collection&lt;java.util.List&lt;E&gt;&gt; permutations(java.util.Collection&lt;E&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multiset boolean remove(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingSortedMultiset com.google.common.collect.SortedMultiset&lt;E&gt; headMultiset(E, com.google.common.collect.BoundType) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps com.google.common.collect.BiMap&lt;K,V&gt; filterValues(com.google.common.collect.BiMap&lt;K,V&gt;, com.google.common.base.Predicate&lt;? super V&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterators com.google.common.collect.UnmodifiableIterator&lt;java.util.List&lt;T&gt;&gt; partition(java.util.Iterator&lt;T&gt;, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multiset boolean retainAll(java.util.Collection&lt;?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap.Builder com.google.common.collect.ImmutableMultimap build()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap com.google.common.collect.ImmutableMultimap&lt;K,V&gt; of(K, V, K, V, K, V) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterators com.google.common.base.Optional&lt;T&gt; tryFind(java.util.Iterator&lt;T&gt;, com.google.common.base.Predicate&lt;? super T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingNavigableSet java.util.NavigableSet&lt;E&gt; subSet(E, boolean, E, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap K lowerKey(K) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.FluentIterable com.google.common.collect.FluentIterable&lt;T&gt; transform(com.google.common.base.Function&lt;? super E,T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multimap java.util.Set&lt;K&gt; keySet()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Lists java.util.ArrayList&lt;E&gt; newArrayList(java.util.Iterator&lt;? extends E&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.MultimapBuilder.MultimapBuilderWithKeys com.google.common.collect.MultimapBuilder.SortedSetMultimapBuilder&lt;K0,V0&gt; treeSetValues(java.util.Comparator&lt;V0&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multimaps com.google.common.collect.SetMultimap&lt;K,V&gt; filterValues(com.google.common.collect.SetMultimap&lt;K,V&gt;, com.google.common.base.Predicate&lt;? super V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap com.google.common.collect.ImmutableListMultimap&lt;K,V&gt; of(K, V, K, V, K, V, K, V) 6'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableBiMap com.google.common.collect.ImmutableBiMap&lt;K,V&gt; copyOf(java.util.Map&lt;? extends K,? extends V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.HashBasedTable java.util.Map column(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableBiMap com.google.common.collect.ImmutableBiMap&lt;V,K&gt; inverse()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps com.google.common.collect.BiMap&lt;K,V&gt; filterEntries(com.google.common.collect.BiMap&lt;K,V&gt;, com.google.common.base.Predicate&lt;? super java.util.Map.Entry&lt;K,V&gt;&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap.Builder com.google.common.collect.ImmutableMultimap.Builder&lt;K,V&gt; put(K, V) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.LinkedListMultimap com.google.common.collect.LinkedListMultimap&lt;K,V&gt; create(com.google.common.collect.Multimap&lt;? extends K,? extends V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMap com.google.common.collect.ImmutableMap&lt;K,V&gt; copyOf(java.lang.Iterable&lt;? extends java.util.Map.Entry&lt;? extends K,? extends V&gt;&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap.Builder com.google.common.collect.ImmutableMap.Builder putAll(java.lang.Iterable)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingSortedSet java.util.Set delegate()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap com.google.common.collect.ImmutableSetMultimap&lt;K,V&gt; of(K, V, K, V, K, V, K, V) 5'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Lists java.util.List&lt;java.lang.Character&gt; charactersOf(java.lang.CharSequence) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Maps java.util.SortedMap&lt;K,V2&gt; transformValues(java.util.SortedMap&lt;K,V1&gt;, com.google.common.base.Function&lt;? super V1,V2&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingNavigableSet E ceiling(E) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap java.util.Set replaceValues(java.lang.Object, java.lang.Iterable) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterators com.google.common.collect.PeekingIterator&lt;T&gt; peekingIterator(com.google.common.collect.PeekingIterator&lt;T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.TreeRangeMap java.util.Map.Entry&lt;com.google.common.collect.Range&lt;K&gt;,V&gt; getEntry(K) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ArrayTable com.google.common.collect.ImmutableSet&lt;R&gt; rowKeySet()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multimap boolean put(K, V) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet com.google.common.collect.ImmutableSortedSet&lt;E&gt; copyOf(java.util.Comparator&lt;? super E&gt;, java.util.Collection&lt;? extends E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Lists java.util.concurrent.CopyOnWriteArrayList&lt;E&gt; newCopyOnWriteArrayList()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.MultimapBuilder.ListMultimapBuilder com.google.common.collect.ListMultimap&lt;K,V&gt; build()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MultimapBuilder.MultimapBuilderWithKeys com.google.common.collect.MultimapBuilder.SetMultimapBuilder&lt;K0,V0&gt; enumSetValues(java.lang.Class&lt;V0&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap com.google.common.collect.ImmutableSetMultimap&lt;K,V&gt; of(K, V, K, V, K, V, K, V, K, V) 4'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableTable com.google.common.collect.ImmutableTable&lt;R,C,V&gt; of()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableCollection T[] toArray(T[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap.Builder com.google.common.collect.ImmutableMultimap.Builder&lt;K,V&gt; put(K, V) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterables java.lang.Iterable&lt;T&gt; filter(java.lang.Iterable&lt;?&gt;, java.lang.Class&lt;T&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap java.util.NavigableMap subMap(java.lang.Object, boolean, java.lang.Object, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Maps com.google.common.collect.BiMap&lt;K,V&gt; filterEntries(com.google.common.collect.BiMap&lt;K,V&gt;, com.google.common.base.Predicate&lt;? super java.util.Map.Entry&lt;K,V&gt;&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.MinMaxPriorityQueue java.util.Iterator&lt;E&gt; iterator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Range com.google.common.collect.Range&lt;C&gt; lessThan(C)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Maps java.util.NavigableMap&lt;K,V&gt; filterKeys(java.util.NavigableMap&lt;K,V&gt;, com.google.common.base.Predicate&lt;? super K&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Queues java.util.ArrayDeque&lt;E&gt; newArrayDeque(java.lang.Iterable&lt;? extends E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Range com.google.common.collect.Range&lt;C&gt; intersection(com.google.common.collect.Range&lt;C&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.MinMaxPriorityQueue boolean offer(E) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap com.google.common.collect.ImmutableSetMultimap&lt;K,V&gt; of(K, V, K, V, K, V, K, V) 4'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet com.google.common.collect.ImmutableSortedSet&lt;E&gt; tailSet(E, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap com.google.common.collect.ImmutableCollection&lt;V&gt; get(K) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterators boolean addAll(java.util.Collection&lt;T&gt;, java.util.Iterator&lt;? extends T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableRangeSet com.google.common.collect.Range&lt;C&gt; rangeContaining(C) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableList com.google.common.collect.ImmutableList&lt;E&gt; reverse()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Table java.util.Map&lt;R,V&gt; column(C) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingSetMultimap java.util.Collection get(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeRangeSet com.google.common.collect.RangeSet&lt;C&gt; complement()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet com.google.common.collect.ImmutableSortedSet&lt;E&gt; copyOf(java.util.Comparator&lt;? super E&gt;, java.util.Collection&lt;? extends E&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.MapConstraints java.util.Map&lt;K,V&gt; constrainedMap(java.util.Map&lt;K,V&gt;, com.google.common.collect.MapConstraint&lt;? super K,? super V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Ordering com.google.common.collect.Ordering&lt;java.lang.Object&gt; allEqual()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableList.Builder com.google.common.collect.ImmutableCollection.ArrayBasedBuilder add(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap com.google.common.collect.ImmutableSetMultimap&lt;K,V&gt; of(K, V, K, V, K, V, K, V, K, V) 5'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterators boolean addAll(java.util.Collection&lt;T&gt;, java.util.Iterator&lt;? extends T&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap java.util.Map.Entry&lt;K,V&gt; lowerEntry(K) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.EnumMultiset com.google.common.collect.EnumMultiset&lt;E&gt; create(java.lang.Iterable&lt;E&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap com.google.common.collect.ImmutableSetMultimap&lt;K,V&gt; of(K, V, K, V, K, V, K, V) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Table java.util.Set&lt;com.google.common.collect.Table.Cell&lt;R,C,V&gt;&gt; cellSet()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.SortedLists.KeyAbsentBehavior INVERTED_INSERTION_INDEX'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.TreeRangeMap java.util.Map&lt;com.google.common.collect.Range&lt;K&gt;,V&gt; asMapOfRanges()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ComparisonChain com.google.common.collect.ComparisonChain compare(long, long)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Ordering com.google.common.collect.Ordering&lt;java.lang.Iterable&lt;S&gt;&gt; lexicographical()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Sets com.google.common.collect.ImmutableSet&lt;E&gt; immutableEnumSet(java.lang.Iterable&lt;E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap com.google.common.collect.ImmutableMultimap&lt;K,V&gt; of(K, V, K, V) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap.Builder com.google.common.collect.ImmutableMultimap.Builder orderValuesBy(java.util.Comparator)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterables java.lang.Iterable&lt;T&gt; concat(java.lang.Iterable&lt;? extends java.lang.Iterable&lt;? extends T&gt;&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap com.google.common.collect.ImmutableSetMultimap&lt;K,V&gt; of(K, V, K, V, K, V, K, V, K, V) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterators T getLast(java.util.Iterator&lt;? extends T&gt;, T) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableTable java.util.Map column(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Queues java.util.concurrent.LinkedBlockingQueue&lt;E&gt; newLinkedBlockingQueue(java.lang.Iterable&lt;? extends E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultiset.Builder com.google.common.collect.ImmutableMultiset&lt;E&gt; build()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap com.google.common.collect.ImmutableListMultimap&lt;K,V&gt; of(K, V, K, V, K, V)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap java.util.NavigableMap subMap(java.lang.Object, boolean, java.lang.Object, boolean) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ListMultimap java.util.List&lt;V&gt; replaceValues(K, java.lang.Iterable&lt;? extends V&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset java.util.Set elementSet()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMaker com.google.common.collect.MapMaker initialCapacity(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap com.google.common.collect.ImmutableMultimap&lt;K,V&gt; of(K, V, K, V) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Maps java.util.SortedMap&lt;K,V2&gt; transformValues(java.util.SortedMap&lt;K,V1&gt;, com.google.common.base.Function&lt;? super V1,V2&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Ordering E max(E, E, E, E...) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.HashMultimap com.google.common.collect.HashMultimap&lt;K,V&gt; create(com.google.common.collect.Multimap&lt;? extends K,? extends V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet com.google.common.collect.ImmutableSortedSet.Builder&lt;E&gt; orderedBy(java.util.Comparator&lt;E&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingCollection boolean standardContainsAll(java.util.Collection&lt;?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.LinkedListMultimap java.util.List&lt;java.util.Map.Entry&lt;K,V&gt;&gt; entries()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap com.google.common.collect.ImmutableSetMultimap&lt;K,V&gt; of(K, V, K, V, K, V, K, V) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterators boolean any(java.util.Iterator&lt;T&gt;, com.google.common.base.Predicate&lt;? super T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Maps java.util.HashMap&lt;K,V&gt; newHashMapWithExpectedSize(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Maps com.google.common.collect.BiMap&lt;K,V&gt; synchronizedBiMap(com.google.common.collect.BiMap&lt;K,V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap.Builder com.google.common.collect.ImmutableMultimap.Builder putAll(java.lang.Iterable)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Maps java.util.Map&lt;K,V&gt; filterEntries(java.util.Map&lt;K,V&gt;, com.google.common.base.Predicate&lt;? super java.util.Map.Entry&lt;K,V&gt;&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultiset com.google.common.collect.ImmutableMultiset&lt;E&gt; of(E, E, E, E, E)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap com.google.common.collect.ImmutableSetMultimap&lt;K,V&gt; of(K, V, K, V, K, V, K, V, K, V) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset.Builder com.google.common.collect.ImmutableSortedMultiset.Builder&lt;E&gt; add(E)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableList com.google.common.collect.ImmutableList&lt;E&gt; asList()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap com.google.common.collect.ImmutableSortedMap.Builder&lt;K,V&gt; reverseOrder()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingMap V remove(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap.Builder com.google.common.collect.ImmutableMultimap.Builder orderKeysBy(java.util.Comparator) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.TreeMultiset boolean add(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.SortedMultiset com.google.common.collect.SortedMultiset&lt;E&gt; headMultiset(E, com.google.common.collect.BoundType) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableTable com.google.common.collect.ImmutableMap&lt;C,V&gt; row(R) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ArrayTable java.util.Set&lt;com.google.common.collect.Table.Cell&lt;R,C,V&gt;&gt; cellSet()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSet.Builder com.google.common.collect.ImmutableCollection.Builder addAll(java.util.Iterator)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingSetMultimap java.util.Set&lt;V&gt; get(K) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableClassToInstanceMap com.google.common.collect.ImmutableClassToInstanceMap&lt;B&gt; of(java.lang.Class&lt;T&gt;, T) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset.Builder com.google.common.collect.ImmutableMultiset build()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.SortedMultiset com.google.common.collect.SortedMultiset&lt;E&gt; headMultiset(E, com.google.common.collect.BoundType) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps com.google.common.collect.ListMultimap&lt;K,V&gt; unmodifiableListMultimap(com.google.common.collect.ImmutableListMultimap&lt;K,V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet com.google.common.collect.ImmutableSortedSet&lt;E&gt; tailSet(E) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.LinkedHashMultimap java.util.Set&lt;java.util.Map.Entry&lt;K,V&gt;&gt; entries()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterators T find(java.util.Iterator&lt;? extends T&gt;, com.google.common.base.Predicate&lt;? super T&gt;, T) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap com.google.common.collect.ImmutableSetMultimap&lt;K,V&gt; of(K, V, K, V, K, V) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.HashMultiset int add(java.lang.Object, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedListMultimap com.google.common.collect.LinkedListMultimap&lt;K,V&gt; create(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multiset java.util.Set&lt;E&gt; elementSet()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps com.google.common.collect.MapDifference&lt;K,V&gt; difference(java.util.Map&lt;? extends K,? extends V&gt;, java.util.Map&lt;? extends K,? extends V&gt;, com.google.common.base.Equivalence&lt;? super V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.RangeSet boolean enclosesAll(com.google.common.collect.RangeSet&lt;C&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps com.google.common.collect.SetMultimap&lt;K,V&gt; unmodifiableSetMultimap(com.google.common.collect.SetMultimap&lt;K,V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Sets java.util.SortedSet&lt;E&gt; filter(java.util.SortedSet&lt;E&gt;, com.google.common.base.Predicate&lt;? super E&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap.Builder com.google.common.collect.ImmutableSortedMap.Builder&lt;K,V&gt; put(K, V) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterators T find(java.util.Iterator&lt;? extends T&gt;, com.google.common.base.Predicate&lt;? super T&gt;, T) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet com.google.common.collect.ImmutableSortedSet.Builder&lt;E&gt; naturalOrder()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableTable.Builder com.google.common.collect.ImmutableTable.Builder&lt;R,C,V&gt; orderColumnsBy(java.util.Comparator&lt;? super C&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingSortedSet java.util.SortedSet&lt;E&gt; delegate()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap com.google.common.collect.ImmutableSetMultimap&lt;K,V&gt; of(K, V, K, V, K, V) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableRangeSet com.google.common.collect.ImmutableSet&lt;com.google.common.collect.Range&lt;C&gt;&gt; asRanges()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multimaps com.google.common.collect.ImmutableListMultimap&lt;K,V&gt; index(java.lang.Iterable&lt;V&gt;, com.google.common.base.Function&lt;? super V,K&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingMap V get(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingNavigableSet E higher(E) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet.Builder com.google.common.collect.ImmutableCollection.ArrayBasedBuilder add(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ClassToInstanceMap T putInstance(java.lang.Class&lt;T&gt;, T) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterators java.util.Iterator&lt;T&gt; cycle(java.lang.Iterable&lt;T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multimaps com.google.common.collect.ListMultimap&lt;K,V&gt; newListMultimap(java.util.Map&lt;K,java.util.Collection&lt;V&gt;&gt;, com.google.common.base.Supplier&lt;? extends java.util.List&lt;V&gt;&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet java.util.NavigableSet descendingSet()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset com.google.common.collect.SortedMultiset tailMultiset(java.lang.Object, com.google.common.collect.BoundType)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.FluentIterable C copyInto(C)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.EnumMultiset com.google.common.collect.EnumMultiset&lt;E&gt; create(java.lang.Iterable&lt;E&gt;, java.lang.Class&lt;E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap.Builder com.google.common.collect.ImmutableSortedMap.Builder&lt;K,V&gt; put(K, V) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableBiMap.Builder com.google.common.collect.ImmutableMap.Builder putAll(java.lang.Iterable) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableRangeMap.Builder com.google.common.collect.ImmutableRangeMap.Builder&lt;K,V&gt; put(com.google.common.collect.Range&lt;K&gt;, V) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.TreeRangeSet void add(com.google.common.collect.Range&lt;C&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.EnumHashBiMap java.lang.Object put(java.lang.Object, java.lang.Object) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableBiMap.Builder com.google.common.collect.ImmutableBiMap.Builder&lt;K,V&gt; putAll(java.util.Map&lt;? extends K,? extends V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSet.Builder com.google.common.collect.ImmutableCollection build()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableRangeSet com.google.common.collect.RangeSet complement()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap com.google.common.collect.ImmutableSetMultimap&lt;K,V&gt; of(K, V, K, V, K, V) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ConcurrentHashMultiset boolean removeAll(java.util.Collection) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap java.util.SortedMap headMap(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterators java.util.Iterator&lt;T&gt; concat(java.util.Iterator&lt;? extends T&gt;, java.util.Iterator&lt;? extends T&gt;, java.util.Iterator&lt;? extends T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterables java.lang.Iterable&lt;T&gt; unmodifiableIterable(java.lang.Iterable&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multimaps com.google.common.collect.ListMultimap&lt;K,V&gt; newListMultimap(java.util.Map&lt;K,java.util.Collection&lt;V&gt;&gt;, com.google.common.base.Supplier&lt;? extends java.util.List&lt;V&gt;&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableRangeSet java.util.Set asRanges()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap.Builder com.google.common.collect.ImmutableSortedMap.Builder&lt;K,V&gt; put(K, V)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableClassToInstanceMap com.google.common.collect.ImmutableClassToInstanceMap&lt;B&gt; of(java.lang.Class&lt;T&gt;, T) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.EnumBiMap com.google.common.collect.EnumBiMap&lt;K,V&gt; create(java.lang.Class&lt;K&gt;, java.lang.Class&lt;V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableRangeMap.Builder com.google.common.collect.ImmutableRangeMap.Builder&lt;K,V&gt; put(com.google.common.collect.Range&lt;K&gt;, V) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Lists java.util.ArrayList&lt;E&gt; newArrayList(java.lang.Iterable&lt;? extends E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap.Builder com.google.common.collect.ImmutableSetMultimap.Builder&lt;K,V&gt; putAll(com.google.common.collect.Multimap&lt;? extends K,? extends V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Maps java.util.NavigableMap&lt;K,V2&gt; transformValues(java.util.NavigableMap&lt;K,V1&gt;, com.google.common.base.Function&lt;? super V1,V2&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.TreeMultiset boolean retainAll(java.util.Collection) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap com.google.common.collect.ImmutableSetMultimap&lt;K,V&gt; of(K, V, K, V, K, V) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.EnumHashBiMap java.lang.Object put(java.lang.Object, java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap java.util.NavigableMap headMap(java.lang.Object, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.LinkedHashMultiset boolean add(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ContiguousSet com.google.common.collect.ContiguousSet&lt;C&gt; intersection(com.google.common.collect.ContiguousSet&lt;C&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingSortedMultiset com.google.common.collect.SortedMultiset&lt;E&gt; tailMultiset(E, com.google.common.collect.BoundType) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap com.google.common.collect.ImmutableCollection get(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap com.google.common.collect.ImmutableMultimap&lt;K,V&gt; of(K, V, K, V, K, V) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.EnumMultiset boolean remove(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap boolean putAll(K, java.lang.Iterable&lt;? extends V&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterators java.util.Iterator&lt;T&gt; cycle(java.lang.Iterable&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ConcurrentHashMultiset com.google.common.collect.ConcurrentHashMultiset&lt;E&gt; create(java.lang.Iterable&lt;? extends E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableCollection.Builder com.google.common.collect.ImmutableCollection.Builder&lt;E&gt; add(E...) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap java.util.List get(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingSetMultimap java.util.Set&lt;V&gt; replaceValues(K, java.lang.Iterable&lt;? extends V&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.FluentIterable com.google.common.collect.FluentIterable&lt;E&gt; filter(com.google.common.base.Predicate&lt;? super E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingMapEntry java.lang.Object delegate()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedListMultimap boolean put(K, V) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.HashMultiset boolean add(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap com.google.common.collect.ImmutableSetMultimap&lt;K,V&gt; of(K, V, K, V, K, V) 4'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterables java.lang.Iterable&lt;T&gt; skip(java.lang.Iterable&lt;T&gt;, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableList com.google.common.collect.ImmutableList&lt;E&gt; of(E, E, E, E, E, E, E, E, E, E, E, E, E...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap.Builder com.google.common.collect.ImmutableSetMultimap.Builder&lt;K,V&gt; putAll(K, V...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Maps java.util.NavigableMap&lt;K,V2&gt; transformValues(java.util.NavigableMap&lt;K,V1&gt;, com.google.common.base.Function&lt;? super V1,V2&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableRangeMap com.google.common.collect.Range&lt;K&gt; span()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSet.Builder com.google.common.collect.ImmutableSet.Builder&lt;E&gt; add(E...) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.HashMultimap java.util.Set get(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterators java.util.Iterator&lt;T&gt; concat(java.util.Iterator&lt;? extends T&gt;, java.util.Iterator&lt;? extends T&gt;, java.util.Iterator&lt;? extends T&gt;) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingSortedMultiset com.google.common.collect.SortedMultiset&lt;E&gt; tailMultiset(E, com.google.common.collect.BoundType) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps java.util.LinkedHashMap&lt;K,V&gt; newLinkedHashMapWithExpectedSize(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableRangeMap com.google.common.collect.RangeMap subRangeMap(com.google.common.collect.Range)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingMap java.util.Collection&lt;V&gt; values()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap com.google.common.collect.ImmutableMultimap&lt;V,K&gt; inverse()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap com.google.common.collect.ImmutableMultimap&lt;K,V&gt; of(K, V, K, V, K, V) 4'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap boolean putAll(K, java.lang.Iterable&lt;? extends V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Range com.google.common.collect.Range&lt;C&gt; encloseAll(java.lang.Iterable&lt;C&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableList.Builder com.google.common.collect.ImmutableList.Builder&lt;E&gt; add(E...) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterables java.lang.Iterable&lt;T&gt; transform(java.lang.Iterable&lt;F&gt;, com.google.common.base.Function&lt;? super F,? extends T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.SortedLists.KeyPresentBehavior LAST_BEFORE'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.EvictingQueue java.lang.Object delegate()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.SortedMultiset com.google.common.collect.SortedMultiset&lt;E&gt; subMultiset(E, com.google.common.collect.BoundType, E, com.google.common.collect.BoundType) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedListMultimap boolean put(K, V) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps com.google.common.collect.SetMultimap&lt;K,V&gt; unmodifiableSetMultimap(com.google.common.collect.SetMultimap&lt;K,V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Queues java.util.concurrent.PriorityBlockingQueue&lt;E&gt; newPriorityBlockingQueue(java.lang.Iterable&lt;? extends E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMap com.google.common.collect.ImmutableMap&lt;K,V&gt; of(K, V, K, V) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap com.google.common.collect.ImmutableSetMultimap&lt;K,V&gt; of(K, V, K, V, K, V) 5'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableTable com.google.common.collect.ImmutableMap&lt;R,V&gt; column(C) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableCollection boolean contains(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterators boolean all(java.util.Iterator&lt;T&gt;, com.google.common.base.Predicate&lt;? super T&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Maps java.util.Map&lt;K,V2&gt; transformValues(java.util.Map&lt;K,V1&gt;, com.google.common.base.Function&lt;? super V1,V2&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.HashMultimap java.util.Set replaceValues(java.lang.Object, java.lang.Iterable) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ConcurrentHashMultiset com.google.common.collect.ConcurrentHashMultiset&lt;E&gt; create(com.google.common.collect.MapMaker)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterators java.util.Iterator&lt;T&gt; concat(java.util.Iterator&lt;? extends T&gt;, java.util.Iterator&lt;? extends T&gt;, java.util.Iterator&lt;? extends T&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.BoundType OPEN'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multimaps com.google.common.collect.SetMultimap&lt;K,V&gt; synchronizedSetMultimap(com.google.common.collect.SetMultimap&lt;K,V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Lists java.util.ArrayList&lt;E&gt; newArrayList(E...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Sets java.util.Set&lt;E&gt; filter(java.util.Set&lt;E&gt;, com.google.common.base.Predicate&lt;? super E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.MultimapBuilder com.google.common.collect.MultimapBuilder.MultimapBuilderWithKeys&lt;java.lang.Object&gt; linkedHashKeys()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Ordering java.util.List&lt;E&gt; leastOf(java.util.Iterator&lt;E&gt;, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap com.google.common.collect.ImmutableMultimap&lt;K,V&gt; of(K, V, K, V, K, V) 5'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset com.google.common.collect.SortedMultiset tailMultiset(java.lang.Object, com.google.common.collect.BoundType) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.SortedMultiset com.google.common.collect.SortedMultiset&lt;E&gt; subMultiset(E, com.google.common.collect.BoundType, E, com.google.common.collect.BoundType) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multisets com.google.common.collect.Multiset&lt;E&gt; filter(com.google.common.collect.Multiset&lt;E&gt;, com.google.common.base.Predicate&lt;? super E&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset com.google.common.collect.ImmutableSortedMultiset&lt;E&gt; of(E, E)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingList boolean addAll(int, java.util.Collection&lt;? extends E&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableList com.google.common.collect.ImmutableList&lt;E&gt; of(E, E, E, E, E, E, E, E)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableTable java.util.Map row(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.MinMaxPriorityQueue com.google.common.collect.MinMaxPriorityQueue.Builder&lt;java.lang.Comparable&gt; expectedSize(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Sets java.util.NavigableSet&lt;E&gt; filter(java.util.NavigableSet&lt;E&gt;, com.google.common.base.Predicate&lt;? super E&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap com.google.common.collect.ImmutableCollection entries()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterators java.util.Enumeration&lt;T&gt; asEnumeration(java.util.Iterator&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.TreeRangeMap V get(K) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterators boolean all(java.util.Iterator&lt;T&gt;, com.google.common.base.Predicate&lt;? super T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterators java.util.Iterator&lt;T&gt; concat(java.util.Iterator&lt;? extends T&gt;, java.util.Iterator&lt;? extends T&gt;, java.util.Iterator&lt;? extends T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterators java.util.Iterator&lt;T&gt; cycle(T...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.TreeBasedTable java.util.SortedMap&lt;R,java.util.Map&lt;C,V&gt;&gt; rowMap()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Sets java.util.Set&lt;E&gt; filter(java.util.Set&lt;E&gt;, com.google.common.base.Predicate&lt;? super E&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.LinkedHashMultiset boolean retainAll(java.util.Collection) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Ordering com.google.common.collect.Ordering&lt;T&gt; compound(java.lang.Iterable&lt;? extends java.util.Comparator&lt;? super T&gt;&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap java.util.SortedMap tailMap(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset com.google.common.collect.SortedMultiset tailMultiset(java.lang.Object, com.google.common.collect.BoundType) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ComparisonChain com.google.common.collect.ComparisonChain start()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap java.util.List get(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterables java.lang.Iterable&lt;T&gt; limit(java.lang.Iterable&lt;T&gt;, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Maps java.util.NavigableMap&lt;K,V2&gt; transformValues(java.util.NavigableMap&lt;K,V1&gt;, com.google.common.base.Function&lt;? super V1,V2&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap com.google.common.collect.ImmutableSortedMap&lt;K,V&gt; of(K, V, K, V)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Maps java.util.IdentityHashMap&lt;K,V&gt; newIdentityHashMap()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multimaps com.google.common.collect.SetMultimap&lt;K,V&gt; forMap(java.util.Map&lt;K,V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterators T getOnlyElement(java.util.Iterator&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.LinkedListMultimap boolean putAll(java.lang.Object, java.lang.Iterable) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.TreeMultiset com.google.common.collect.SortedMultiset subMultiset(java.lang.Object, com.google.common.collect.BoundType, java.lang.Object, com.google.common.collect.BoundType) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Ordering com.google.common.collect.Ordering&lt;U&gt; compound(java.util.Comparator&lt;? super U&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterables java.lang.Iterable&lt;T&gt; concat(java.lang.Iterable&lt;? extends T&gt;...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMap com.google.common.collect.ImmutableMap&lt;K,V&gt; of(K, V, K, V, K, V) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Collections2 java.util.Collection&lt;T&gt; transform(java.util.Collection&lt;F&gt;, com.google.common.base.Function&lt;? super F,T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableRangeSet.Builder com.google.common.collect.ImmutableRangeSet.Builder&lt;C&gt; addAll(com.google.common.collect.RangeSet&lt;C&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multisets com.google.common.collect.Multiset&lt;E&gt; filter(com.google.common.collect.Multiset&lt;E&gt;, com.google.common.base.Predicate&lt;? super E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.MapConstraints com.google.common.collect.SortedSetMultimap&lt;K,V&gt; constrainedSortedSetMultimap(com.google.common.collect.SortedSetMultimap&lt;K,V&gt;, com.google.common.collect.MapConstraint&lt;? super K,? super V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ArrayListMultimap java.util.List get(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingTable V put(R, C, V) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap boolean putAll(com.google.common.collect.Multimap&lt;? extends K,? extends V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeRangeSet java.util.Set&lt;com.google.common.collect.Range&lt;C&gt;&gt; asDescendingSetOfRanges()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Tables com.google.common.collect.RowSortedTable&lt;R,C,V&gt; unmodifiableRowSortedTable(com.google.common.collect.RowSortedTable&lt;R,? extends C,? extends V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingSortedSet java.util.Comparator&lt;? super E&gt; comparator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMap com.google.common.collect.ImmutableSet&lt;K&gt; keySet()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMap com.google.common.collect.ImmutableMap&lt;K,V&gt; of(K, V, K, V) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap.Builder com.google.common.collect.ImmutableMultimap.Builder put(java.util.Map.Entry)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableRangeMap.Builder com.google.common.collect.ImmutableRangeMap.Builder&lt;K,V&gt; putAll(com.google.common.collect.RangeMap&lt;K,? extends V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ContiguousSet com.google.common.collect.ContiguousSet&lt;C&gt; intersection(com.google.common.collect.ContiguousSet&lt;C&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterables T getOnlyElement(java.lang.Iterable&lt;? extends T&gt;, T) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Interner E intern(E) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMap com.google.common.collect.ImmutableMap.Builder&lt;K,V&gt; builder()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.LinkedListMultimap java.util.List&lt;V&gt; values()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterators boolean contains(java.util.Iterator&lt;?&gt;, java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableList com.google.common.collect.ImmutableList&lt;E&gt; of(E, E, E, E, E, E, E, E, E, E, E, E, E...) 12'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet java.util.Iterator descendingIterator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ArrayTable void putAll(com.google.common.collect.Table&lt;? extends R,? extends C,? extends V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMap com.google.common.collect.ImmutableMap&lt;K,V&gt; of(K, V, K, V, K, V) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ComparisonChain com.google.common.collect.ComparisonChain compare(java.lang.Comparable&lt;?&gt;, java.lang.Comparable&lt;?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MultimapBuilder.ListMultimapBuilder com.google.common.collect.Multimap build()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultiset com.google.common.collect.SortedMultiset&lt;E&gt; tailMultiset(E, com.google.common.collect.BoundType)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.MinMaxPriorityQueue com.google.common.collect.MinMaxPriorityQueue.Builder&lt;B&gt; orderedBy(java.util.Comparator&lt;B&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingNavigableSet E lower(E) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RangeMap com.google.common.collect.Range&lt;K&gt; span()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Sets com.google.common.collect.Sets.SetView&lt;E&gt; difference(java.util.Set&lt;E&gt;, java.util.Set&lt;?&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingTable V put(R, C, V) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multisets com.google.common.collect.Multiset&lt;E&gt; filter(com.google.common.collect.Multiset&lt;E&gt;, com.google.common.base.Predicate&lt;? super E&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet com.google.common.collect.ImmutableSortedSet&lt;E&gt; of(E, E)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap java.util.Collection replaceValues(java.lang.Object, java.lang.Iterable) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MultimapBuilder com.google.common.collect.MultimapBuilder.MultimapBuilderWithKeys&lt;K0&gt; enumKeys(java.lang.Class&lt;K0&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap.Builder com.google.common.collect.ImmutableSortedMap.Builder&lt;K,V&gt; putAll(java.util.Map&lt;? extends K,? extends V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Ordering com.google.common.collect.Ordering&lt;F&gt; onResultOf(com.google.common.base.Function&lt;F,? extends T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.TreeMultiset com.google.common.collect.SortedMultiset subMultiset(java.lang.Object, com.google.common.collect.BoundType, java.lang.Object, com.google.common.collect.BoundType) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multisets com.google.common.collect.SortedMultiset&lt;E&gt; unmodifiableSortedMultiset(com.google.common.collect.SortedMultiset&lt;E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterables java.lang.Iterable&lt;T&gt; concat(java.lang.Iterable&lt;? extends T&gt;...) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.TreeMultiset com.google.common.collect.SortedMultiset&lt;E&gt; tailMultiset(E, com.google.common.collect.BoundType) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultimap boolean put(java.lang.Object, java.lang.Object) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ConcurrentHashMultiset boolean remove(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMap com.google.common.collect.ImmutableMap&lt;K,V&gt; of(K, V, K, V) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableList com.google.common.collect.ImmutableList&lt;E&gt; of(E, E, E, E, E)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset com.google.common.collect.ImmutableSortedMultiset&lt;E&gt; of(E, E, E, E, E, E, E...) 6'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.MapConstraints com.google.common.collect.SortedSetMultimap&lt;K,V&gt; constrainedSortedSetMultimap(com.google.common.collect.SortedSetMultimap&lt;K,V&gt;, com.google.common.collect.MapConstraint&lt;? super K,? super V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ArrayTable com.google.common.collect.ImmutableSet&lt;C&gt; columnKeySet()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingSet java.lang.Object delegate()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps java.util.Map&lt;K,V2&gt; transformValues(java.util.Map&lt;K,V1&gt;, com.google.common.base.Function&lt;? super V1,V2&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterators java.util.Enumeration&lt;T&gt; asEnumeration(java.util.Iterator&lt;T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.LinkedListMultimap boolean putAll(java.lang.Object, java.lang.Iterable) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMap com.google.common.collect.ImmutableMap&lt;K,V&gt; of(K, V, K, V, K, V) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.MapConstraints com.google.common.collect.MapConstraint&lt;java.lang.Object,java.lang.Object&gt; notNull()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ContiguousSet com.google.common.collect.ImmutableSortedSet subSet(java.lang.Object, boolean, java.lang.Object, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Table V put(R, C, V) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multiset boolean removeAll(java.util.Collection&lt;?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps java.util.Map.Entry&lt;K,V&gt; immutableEntry(K, V)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet com.google.common.collect.ImmutableSortedSet&lt;E&gt; of(E, E, E)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.MultimapBuilder.MultimapBuilderWithKeys com.google.common.collect.MultimapBuilder.SortedSetMultimapBuilder&lt;K0,java.lang.Comparable&gt; treeSetValues()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.RangeMap void put(com.google.common.collect.Range&lt;K&gt;, V) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedListMultimap java.util.Collection replaceValues(java.lang.Object, java.lang.Iterable) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Maps java.util.NavigableMap&lt;K,V&gt; filterValues(java.util.NavigableMap&lt;K,V&gt;, com.google.common.base.Predicate&lt;? super V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.RangeSet boolean contains(C) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultiset com.google.common.collect.SortedMultiset&lt;E&gt; tailMultiset(E, com.google.common.collect.BoundType) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.TreeMultimap boolean put(java.lang.Object, java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableCollection java.lang.Object[] toArray()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSet.Builder com.google.common.collect.ImmutableCollection.Builder add(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.LinkedHashMultimap com.google.common.collect.LinkedHashMultimap&lt;K,V&gt; create(com.google.common.collect.Multimap&lt;? extends K,? extends V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Collections2 java.util.Collection&lt;T&gt; transform(java.util.Collection&lt;F&gt;, com.google.common.base.Function&lt;? super F,T&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingCollection boolean add(E) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMap com.google.common.collect.ImmutableMap&lt;K,V&gt; of(K, V, K, V) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableRangeMap void put(com.google.common.collect.Range&lt;K&gt;, V) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints com.google.common.collect.SortedSetMultimap&lt;K,V&gt; constrainedSortedSetMultimap(com.google.common.collect.SortedSetMultimap&lt;K,V&gt;, com.google.common.collect.MapConstraint&lt;? super K,? super V&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap.Builder com.google.common.collect.ImmutableMultimap.Builder put(java.lang.Object, java.lang.Object) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultiset.Builder com.google.common.collect.ImmutableCollection.Builder add(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.MutableClassToInstanceMap com.google.common.collect.MutableClassToInstanceMap&lt;B&gt; create(java.util.Map&lt;java.lang.Class&lt;? extends B&gt;,B&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.SortedMultiset com.google.common.collect.SortedMultiset&lt;E&gt; descendingMultiset()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMap com.google.common.collect.ImmutableMap&lt;K,V&gt; of(K, V, K, V, K, V) 5'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ComparisonChain com.google.common.collect.ComparisonChain compare(java.lang.Comparable&lt;?&gt;, java.lang.Comparable&lt;?&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultiset com.google.common.collect.ImmutableMultiset&lt;E&gt; copyOf(java.lang.Iterable&lt;? extends E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multisets com.google.common.collect.Multiset&lt;E&gt; sum(com.google.common.collect.Multiset&lt;? extends E&gt;, com.google.common.collect.Multiset&lt;? extends E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Maps java.util.Map&lt;K,V2&gt; transformValues(java.util.Map&lt;K,V1&gt;, com.google.common.base.Function&lt;? super V1,V2&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multimaps com.google.common.collect.Multimap&lt;K,V&gt; synchronizedMultimap(com.google.common.collect.Multimap&lt;K,V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multisets com.google.common.collect.SortedMultiset&lt;E&gt; unmodifiableSortedMultiset(com.google.common.collect.SortedMultiset&lt;E&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multimaps com.google.common.collect.ListMultimap&lt;K,V2&gt; transformValues(com.google.common.collect.ListMultimap&lt;K,V1&gt;, com.google.common.base.Function&lt;? super V1,V2&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Lists java.util.List&lt;T&gt; transform(java.util.List&lt;F&gt;, com.google.common.base.Function&lt;? super F,? extends T&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap.Builder com.google.common.collect.ImmutableSetMultimap.Builder&lt;K,V&gt; putAll(com.google.common.collect.Multimap&lt;? extends K,? extends V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSet.Builder com.google.common.collect.ImmutableCollection.Builder add(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.FluentIterable com.google.common.collect.FluentIterable&lt;E&gt; from(com.google.common.collect.FluentIterable&lt;E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableTable.Builder com.google.common.collect.ImmutableTable.Builder&lt;R,C,V&gt; orderColumnsBy(java.util.Comparator&lt;? super C&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterables int frequency(java.lang.Iterable&lt;?&gt;, java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset com.google.common.collect.ImmutableSortedMultiset&lt;E&gt; headMultiset(E, com.google.common.collect.BoundType)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ContiguousSet com.google.common.collect.ImmutableSortedSet subSet(java.lang.Object, boolean, java.lang.Object, boolean) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Table java.util.Collection&lt;V&gt; values()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap.Builder com.google.common.collect.ImmutableSortedMap.Builder&lt;K,V&gt; putAll(java.util.Map&lt;? extends K,? extends V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap.Builder com.google.common.collect.ImmutableListMultimap.Builder&lt;K,V&gt; putAll(K, java.lang.Iterable&lt;? extends V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap com.google.common.collect.ImmutableSortedMap&lt;K,V&gt; headMap(K, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap com.google.common.collect.ImmutableSortedMap.Builder&lt;K,V&gt; orderedBy(java.util.Comparator&lt;K&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multisets com.google.common.collect.Multiset&lt;E&gt; sum(com.google.common.collect.Multiset&lt;? extends E&gt;, com.google.common.collect.Multiset&lt;? extends E&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Sets java.util.TreeSet&lt;E&gt; newTreeSet(java.util.Comparator&lt;? super E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap com.google.common.collect.ImmutableSetMultimap&lt;K,V&gt; copyOf(com.google.common.collect.Multimap&lt;? extends K,? extends V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multimaps com.google.common.collect.ListMultimap&lt;K,V2&gt; transformValues(com.google.common.collect.ListMultimap&lt;K,V1&gt;, com.google.common.base.Function&lt;? super V1,V2&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSet com.google.common.collect.ImmutableSet.Builder&lt;E&gt; builder()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Lists java.util.List&lt;T&gt; transform(java.util.List&lt;F&gt;, com.google.common.base.Function&lt;? super F,? extends T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.HashBasedTable java.lang.Object put(java.lang.Object, java.lang.Object, java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingMapEntry V setValue(V) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultimap java.util.SortedSet replaceValues(java.lang.Object, java.lang.Iterable) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap com.google.common.collect.ImmutableListMultimap&lt;K,V&gt; copyOf(java.lang.Iterable&lt;? extends java.util.Map.Entry&lt;? extends K,? extends V&gt;&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultiset com.google.common.collect.ImmutableMultiset&lt;E&gt; of(E, E, E)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap.Builder com.google.common.collect.ImmutableMultimap&lt;K,V&gt; build()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingSetMultimap java.util.Collection replaceValues(java.lang.Object, java.lang.Iterable) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Range com.google.common.collect.Range&lt;C&gt; range(C, com.google.common.collect.BoundType, C, com.google.common.collect.BoundType)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.LinkedHashMultimap boolean put(java.lang.Object, java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMap com.google.common.collect.ImmutableMap&lt;K,V&gt; of(K, V, K, V, K, V) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterables T find(java.lang.Iterable&lt;T&gt;, com.google.common.base.Predicate&lt;? super T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multimaps com.google.common.collect.SetMultimap&lt;K,V&gt; forMap(java.util.Map&lt;K,V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.TreeRangeSet void removeAll(com.google.common.collect.RangeSet) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.HashBasedTable java.lang.Object put(java.lang.Object, java.lang.Object, java.lang.Object) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterators com.google.common.collect.UnmodifiableIterator&lt;java.util.List&lt;T&gt;&gt; paddedPartition(java.util.Iterator&lt;T&gt;, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Ordering java.util.List&lt;E&gt; sortedCopy(java.lang.Iterable&lt;E&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Collections2 java.util.Collection&lt;T&gt; transform(java.util.Collection&lt;F&gt;, com.google.common.base.Function&lt;? super F,T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multimaps com.google.common.collect.Multimap&lt;K,V&gt; filterKeys(com.google.common.collect.Multimap&lt;K,V&gt;, com.google.common.base.Predicate&lt;? super K&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet java.util.SortedSet subSet(java.lang.Object, java.lang.Object) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Ordering com.google.common.collect.Ordering&lt;F&gt; onResultOf(com.google.common.base.Function&lt;F,? extends T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap.Builder com.google.common.collect.ImmutableSetMultimap.Builder&lt;K,V&gt; put(java.util.Map.Entry&lt;? extends K,? extends V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableBiMap.Builder com.google.common.collect.ImmutableBiMap&lt;K,V&gt; build()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap.Builder com.google.common.collect.ImmutableMultimap.Builder orderKeysBy(java.util.Comparator)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.LinkedListMultimap java.util.Set keySet()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingCollection boolean standardRetainAll(java.util.Collection&lt;?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultiset.Builder com.google.common.collect.ImmutableCollection.Builder addAll(java.util.Iterator)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap.Builder com.google.common.collect.ImmutableMultimap.Builder put(java.lang.Object, java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Lists java.util.LinkedList&lt;E&gt; newLinkedList(java.lang.Iterable&lt;? extends E&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Ordering com.google.common.collect.Ordering&lt;T&gt; explicit(java.util.List&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableBiMap com.google.common.collect.ImmutableBiMap&lt;K,V&gt; of(K, V, K, V, K, V, K, V, K, V)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap java.util.NavigableMap descendingMap()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMap com.google.common.collect.ImmutableMap&lt;K,V&gt; of(K, V, K, V, K, V)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultiset com.google.common.collect.ImmutableMultiset&lt;E&gt; copyOf(java.util.Iterator&lt;? extends E&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterables T find(java.lang.Iterable&lt;T&gt;, com.google.common.base.Predicate&lt;? super T&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.LinkedHashMultimap boolean put(java.lang.Object, java.lang.Object) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMap com.google.common.collect.ImmutableMap&lt;K,V&gt; of(K, V, K, V, K, V) 4'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.HashBasedTable java.lang.Object put(java.lang.Object, java.lang.Object, java.lang.Object) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Maps com.google.common.collect.MapDifference&lt;K,V&gt; difference(java.util.Map&lt;? extends K,? extends V&gt;, java.util.Map&lt;? extends K,? extends V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Lists java.util.ArrayList&lt;E&gt; newArrayList(java.lang.Iterable&lt;? extends E&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableBiMap.Builder com.google.common.collect.ImmutableBiMap.Builder&lt;K,V&gt; putAll(java.util.Map&lt;? extends K,? extends V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet java.util.SortedSet subSet(java.lang.Object, java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multimap java.util.Collection&lt;java.util.Map.Entry&lt;K,V&gt;&gt; entries()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet.Builder com.google.common.collect.ImmutableCollection.Builder addAll(java.lang.Iterable) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingTable V put(R, C, V) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableCollection.Builder com.google.common.collect.ImmutableCollection.Builder&lt;E&gt; add(E) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps com.google.common.collect.Multimap&lt;K,V&gt; filterKeys(com.google.common.collect.Multimap&lt;K,V&gt;, com.google.common.base.Predicate&lt;? super K&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap.Builder com.google.common.collect.ImmutableMultimap build()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Collections2 java.util.Collection&lt;E&gt; filter(java.util.Collection&lt;E&gt;, com.google.common.base.Predicate&lt;? super E&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap com.google.common.collect.ImmutableSortedMap&lt;K,V&gt; copyOf(java.lang.Iterable&lt;? extends java.util.Map.Entry&lt;? extends K,? extends V&gt;&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableTable java.util.Map columnMap()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap com.google.common.collect.ImmutableSortedMap&lt;K,V&gt; copyOf(java.util.Map&lt;? extends K,? extends V&gt;, java.util.Comparator&lt;? super K&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap.Builder com.google.common.collect.ImmutableMultimap.Builder put(java.lang.Object, java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap com.google.common.collect.ImmutableSetMultimap&lt;K,V&gt; of()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap java.util.NavigableMap subMap(java.lang.Object, boolean, java.lang.Object, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Ordering int compare(T, T) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap com.google.common.collect.ImmutableMultimap&lt;K,V&gt; of(K, V, K, V, K, V, K, V) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableRangeSet void remove(com.google.common.collect.Range&lt;C&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Queues int drain(java.util.concurrent.BlockingQueue&lt;E&gt;, java.util.Collection&lt;? super E&gt;, int, long, java.util.concurrent.TimeUnit) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingSortedSetMultimap java.util.SortedSet&lt;V&gt; get(K) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.FluentIterable com.google.common.collect.ImmutableListMultimap&lt;K,E&gt; index(com.google.common.base.Function&lt;? super E,K&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSet com.google.common.collect.ImmutableSet&lt;E&gt; of(E, E, E, E, E, E, E...) 6'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset.Builder com.google.common.collect.ImmutableCollection.Builder add(java.lang.Object[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultiset com.google.common.collect.ImmutableSet&lt;com.google.common.collect.Multiset.Entry&lt;E&gt;&gt; entrySet()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.HashMultiset com.google.common.collect.HashMultiset&lt;E&gt; create()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Interners com.google.common.base.Function&lt;E,E&gt; asFunction(com.google.common.collect.Interner&lt;E&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap com.google.common.collect.ImmutableCollection get(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Table java.util.Map&lt;C,V&gt; row(R) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps com.google.common.collect.ListMultimap&lt;K,V&gt; unmodifiableListMultimap(com.google.common.collect.ListMultimap&lt;K,V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap com.google.common.collect.ImmutableListMultimap&lt;K,V&gt; of(K, V) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingSortedSet java.util.SortedSet&lt;E&gt; headSet(E)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap com.google.common.collect.ImmutableMultimap&lt;K,V&gt; of(K, V, K, V, K, V, K, V) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Lists java.util.ArrayList&lt;E&gt; newArrayListWithCapacity(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMap.Builder com.google.common.collect.ImmutableMap.Builder&lt;K,V&gt; orderEntriesByValue(java.util.Comparator&lt;? super V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.HashBasedTable java.util.Map columnMap()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingListMultimap java.util.List&lt;V&gt; replaceValues(K, java.lang.Iterable&lt;? extends V&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedListMultimap com.google.common.collect.LinkedListMultimap&lt;K,V&gt; create()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ContiguousSet com.google.common.collect.ContiguousSet&lt;C&gt; tailSet(C) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap com.google.common.collect.ImmutableListMultimap&lt;K,V&gt; of(K, V, K, V)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap com.google.common.collect.ImmutableSortedMap&lt;K,V&gt; copyOf(java.util.Map&lt;? extends K,? extends V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ContiguousSet java.util.SortedSet tailSet(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet com.google.common.collect.ImmutableSortedSet&lt;E&gt; copyOf(java.util.Collection&lt;? extends E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet com.google.common.collect.ImmutableSortedSet&lt;E&gt; of(E) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableList.Builder com.google.common.collect.ImmutableCollection.Builder add(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Queues java.util.Queue&lt;E&gt; synchronizedQueue(java.util.Queue&lt;E&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap.Builder com.google.common.collect.ImmutableListMultimap.Builder&lt;K,V&gt; putAll(K, V...) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Maps java.util.NavigableMap&lt;K,V&gt; synchronizedNavigableMap(java.util.NavigableMap&lt;K,V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap com.google.common.collect.ImmutableMultimap&lt;K,V&gt; of(K, V, K, V, K, V, K, V) 4'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.TreeRangeMap void remove(com.google.common.collect.Range&lt;K&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.MinMaxPriorityQueue.Builder com.google.common.collect.MinMaxPriorityQueue&lt;T&gt; create()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.HashBiMap V put(K, V) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps java.util.Map&lt;K,V&gt; filterKeys(java.util.Map&lt;K,V&gt;, com.google.common.base.Predicate&lt;? super K&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet.Builder com.google.common.collect.ImmutableSortedSet.Builder&lt;E&gt; add(E) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.FluentIterable java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multisets com.google.common.collect.ImmutableMultiset&lt;E&gt; copyHighestCountFirst(com.google.common.collect.Multiset&lt;E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet E higher(E) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.LinkedHashMultimap java.util.Collection replaceValues(java.lang.Object, java.lang.Iterable) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingListMultimap java.util.List&lt;V&gt; get(K) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSet com.google.common.collect.ImmutableSet&lt;E&gt; copyOf(java.lang.Iterable&lt;? extends E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.MultimapBuilder.SortedSetMultimapBuilder com.google.common.collect.Multimap build(com.google.common.collect.Multimap)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Ordering E max(java.util.Iterator&lt;E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultiset.Builder com.google.common.collect.ImmutableCollection.Builder add(java.lang.Object[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.LinkedListMultimap com.google.common.collect.LinkedListMultimap&lt;K,V&gt; create(com.google.common.collect.Multimap&lt;? extends K,? extends V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multimaps com.google.common.collect.SortedSetMultimap&lt;K,V&gt; newSortedSetMultimap(java.util.Map&lt;K,java.util.Collection&lt;V&gt;&gt;, com.google.common.base.Supplier&lt;? extends java.util.SortedSet&lt;V&gt;&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ArrayListMultimap com.google.common.collect.ArrayListMultimap&lt;K,V&gt; create(com.google.common.collect.Multimap&lt;? extends K,? extends V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap com.google.common.collect.ImmutableMultimap&lt;K,V&gt; of(K, V, K, V, K, V, K, V) 5'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Ordering int compare(T, T) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.HashBiMap V put(K, V) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap.Builder com.google.common.collect.ImmutableMap.Builder put(java.util.Map.Entry) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multimaps com.google.common.collect.SortedSetMultimap&lt;K,V&gt; newSortedSetMultimap(java.util.Map&lt;K,java.util.Collection&lt;V&gt;&gt;, com.google.common.base.Supplier&lt;? extends java.util.SortedSet&lt;V&gt;&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Maps java.util.Map&lt;K,V&gt; filterKeys(java.util.Map&lt;K,V&gt;, com.google.common.base.Predicate&lt;? super K&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Maps com.google.common.collect.MapDifference&lt;K,V&gt; difference(java.util.Map&lt;? extends K,? extends V&gt;, java.util.Map&lt;? extends K,? extends V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Sets java.util.HashSet&lt;E&gt; newHashSet(E...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Queues java.util.concurrent.SynchronousQueue&lt;E&gt; newSynchronousQueue()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.EnumHashBiMap com.google.common.collect.EnumHashBiMap&lt;K,V&gt; create(java.lang.Class&lt;K&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multimaps com.google.common.collect.Multimap&lt;K,V&gt; filterKeys(com.google.common.collect.Multimap&lt;K,V&gt;, com.google.common.base.Predicate&lt;? super K&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multimaps com.google.common.collect.SetMultimap&lt;K,V&gt; newSetMultimap(java.util.Map&lt;K,java.util.Collection&lt;V&gt;&gt;, com.google.common.base.Supplier&lt;? extends java.util.Set&lt;V&gt;&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.LinkedListMultimap java.util.Collection get(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap.Builder com.google.common.collect.ImmutableMultimap.Builder&lt;K,V&gt; putAll(K, V...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableList com.google.common.collect.UnmodifiableListIterator&lt;E&gt; listIterator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Ordering com.google.common.collect.Ordering&lt;T&gt; explicit(java.util.List&lt;T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableBiMap com.google.common.collect.ImmutableBiMap&lt;K,V&gt; of(K, V, K, V, K, V)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Maps java.util.TreeMap&lt;K,V&gt; newTreeMap(java.util.SortedMap&lt;K,? extends V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset.Builder com.google.common.collect.ImmutableMultiset.Builder addAll(java.lang.Iterable) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Maps java.util.TreeMap&lt;K,V&gt; newTreeMap(java.util.Comparator&lt;C&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.MinMaxPriorityQueue boolean addAll(java.util.Collection&lt;? extends E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ConcurrentHashMultiset java.util.Iterator iterator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap.Builder com.google.common.collect.ImmutableMultimap.Builder&lt;K,V&gt; putAll(java.lang.Iterable&lt;? extends java.util.Map.Entry&lt;? extends K,? extends V&gt;&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableRangeSet com.google.common.collect.RangeSet subRangeSet(com.google.common.collect.Range)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset com.google.common.collect.ImmutableSortedMultiset&lt;E&gt; descendingMultiset()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Maps com.google.common.collect.SortedMapDifference&lt;K,V&gt; difference(java.util.SortedMap&lt;K,? extends V&gt;, java.util.Map&lt;? extends K,? extends V&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingSet java.util.Set&lt;E&gt; delegate()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultimap java.util.Collection get(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterators com.google.common.collect.UnmodifiableIterator&lt;java.util.List&lt;T&gt;&gt; paddedPartition(java.util.Iterator&lt;T&gt;, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterables java.lang.Iterable&lt;T&gt; consumingIterable(java.lang.Iterable&lt;T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.MultimapBuilder.MultimapBuilderWithKeys com.google.common.collect.MultimapBuilder.SetMultimapBuilder&lt;K0,java.lang.Object&gt; hashSetValues()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap.Builder com.google.common.collect.ImmutableSetMultimap.Builder&lt;K,V&gt; orderKeysBy(java.util.Comparator&lt;? super K&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterables boolean elementsEqual(java.lang.Iterable&lt;?&gt;, java.lang.Iterable&lt;?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.TreeBasedTable com.google.common.collect.TreeBasedTable&lt;R,C,V&gt; create(java.util.Comparator&lt;? super R&gt;, java.util.Comparator&lt;? super C&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.LinkedHashMultiset boolean contains(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap java.util.Collection get(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps com.google.common.collect.ListMultimap&lt;K,V&gt; synchronizedListMultimap(com.google.common.collect.ListMultimap&lt;K,V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Ordering com.google.common.collect.Ordering&lt;U&gt; compound(java.util.Comparator&lt;? super U&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet.Builder com.google.common.collect.ImmutableSet.Builder addAll(java.lang.Iterable)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Queues java.util.ArrayDeque&lt;E&gt; newArrayDeque(java.lang.Iterable&lt;? extends E&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Sets java.util.Set&lt;E&gt; newConcurrentHashSet(java.lang.Iterable&lt;? extends E&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableTable com.google.common.collect.ImmutableMap&lt;R,java.util.Map&lt;C,V&gt;&gt; rowMap()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeRangeMap void put(com.google.common.collect.Range&lt;K&gt;, V) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingCollection boolean addAll(java.util.Collection&lt;? extends E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableList.Builder com.google.common.collect.ImmutableList&lt;E&gt; build()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Maps com.google.common.collect.SortedMapDifference&lt;K,V&gt; difference(java.util.SortedMap&lt;K,? extends V&gt;, java.util.Map&lt;? extends K,? extends V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingMultiset java.util.Set&lt;E&gt; elementSet()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableCollection com.google.common.collect.UnmodifiableIterator&lt;E&gt; iterator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterables boolean elementsEqual(java.lang.Iterable&lt;?&gt;, java.lang.Iterable&lt;?&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Range boolean apply(C) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Sets java.util.LinkedHashSet&lt;E&gt; newLinkedHashSetWithExpectedSize(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap java.util.Map.Entry&lt;K,V&gt; ceilingEntry(K) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.DiscreteDomain C next(C) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ConcurrentHashMultiset int setCount(E, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.TreeBasedTable com.google.common.collect.TreeBasedTable&lt;R,C,V&gt; create(java.util.Comparator&lt;? super R&gt;, java.util.Comparator&lt;? super C&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset.Builder com.google.common.collect.ImmutableSortedMultiset.Builder&lt;E&gt; addAll(java.lang.Iterable&lt;? extends E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Tables com.google.common.collect.Table&lt;C,R,V&gt; transpose(com.google.common.collect.Table&lt;R,C,V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMap com.google.common.collect.ImmutableMap&lt;K,V&gt; of(K, V, K, V, K, V, K, V)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterables java.lang.Iterable&lt;E&gt; unmodifiableIterable(com.google.common.collect.ImmutableCollection&lt;E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Queues java.util.PriorityQueue&lt;E&gt; newPriorityQueue(java.lang.Iterable&lt;? extends E&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Lists java.util.ArrayList&lt;E&gt; newArrayListWithExpectedSize(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap com.google.common.collect.ImmutableMultimap&lt;K,V&gt; of(K, V, K, V, K, V, K, V) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSet com.google.common.collect.ImmutableSet&lt;E&gt; of(E) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingMap void standardPutAll(java.util.Map&lt;? extends K,? extends V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterators T getOnlyElement(java.util.Iterator&lt;? extends T&gt;, T) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset.Builder com.google.common.collect.ImmutableMultiset.Builder setCount(java.lang.Object, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.RangeSet java.util.Set&lt;com.google.common.collect.Range&lt;C&gt;&gt; asDescendingSetOfRanges()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MinMaxPriorityQueue java.lang.Object[] toArray()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMap com.google.common.collect.ImmutableMap&lt;K,V&gt; of(K, V, K, V)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Sets java.util.concurrent.CopyOnWriteArraySet&lt;E&gt; newCopyOnWriteArraySet(java.lang.Iterable&lt;? extends E&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableBiMap com.google.common.collect.ImmutableBiMap&lt;K,V&gt; of(K, V)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingList java.util.List&lt;E&gt; delegate()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingListMultimap java.util.Collection replaceValues(java.lang.Object, java.lang.Iterable) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableClassToInstanceMap.Builder com.google.common.collect.ImmutableClassToInstanceMap&lt;B&gt; build()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableList.Builder com.google.common.collect.ImmutableCollection.Builder addAll(java.util.Iterator) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ContiguousSet com.google.common.collect.ImmutableSortedSet headSet(java.lang.Object, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterables com.google.common.base.Optional&lt;T&gt; tryFind(java.lang.Iterable&lt;T&gt;, com.google.common.base.Predicate&lt;? super T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingMultimap java.util.Map&lt;K,java.util.Collection&lt;V&gt;&gt; asMap()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.SortedLists.KeyAbsentBehavior NEXT_LOWER'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap com.google.common.collect.ImmutableMultimap&lt;K,V&gt; of(K, V, K, V, K, V, K, V) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multisets com.google.common.collect.Multiset&lt;E&gt; unmodifiableMultiset(com.google.common.collect.Multiset&lt;? extends E&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.SortedMultiset java.util.Comparator&lt;? super E&gt; comparator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.SortedMultiset java.util.Iterator&lt;E&gt; iterator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterators com.google.common.collect.UnmodifiableIterator&lt;java.util.List&lt;T&gt;&gt; partition(java.util.Iterator&lt;T&gt;, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet.Builder com.google.common.collect.ImmutableSet.Builder addAll(java.util.Iterator) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingMap.StandardKeySet StandardKeySet(com.google.common.collect.ForwardingMap) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Ordering E min(E, E, E, E...) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ConcurrentHashMultiset com.google.common.collect.ConcurrentHashMultiset&lt;E&gt; create(com.google.common.collect.MapMaker) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Lists java.util.ArrayList&lt;E&gt; newArrayList(E...) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.MultimapBuilder com.google.common.collect.MultimapBuilder.MultimapBuilderWithKeys&lt;K0&gt; enumKeys(java.lang.Class&lt;K0&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multimaps com.google.common.collect.ImmutableListMultimap&lt;K,V&gt; index(java.util.Iterator&lt;V&gt;, com.google.common.base.Function&lt;? super V,K&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.BiMap com.google.common.collect.BiMap&lt;V,K&gt; inverse()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multiset java.util.Set&lt;com.google.common.collect.Multiset.Entry&lt;E&gt;&gt; entrySet()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterators java.util.Iterator&lt;T&gt; transform(java.util.Iterator&lt;F&gt;, com.google.common.base.Function&lt;? super F,? extends T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multimaps com.google.common.collect.Multimap&lt;K,V2&gt; transformEntries(com.google.common.collect.Multimap&lt;K,V1&gt;, com.google.common.collect.Maps.EntryTransformer&lt;? super K,? super V1,V2&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterables boolean any(java.lang.Iterable&lt;T&gt;, com.google.common.base.Predicate&lt;? super T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingListIterator void add(E) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.HashBasedTable com.google.common.collect.HashBasedTable&lt;R,C,V&gt; create()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableTable void putAll(com.google.common.collect.Table&lt;? extends R,? extends C,? extends V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeTraverser com.google.common.collect.FluentIterable&lt;T&gt; breadthFirstTraversal(T) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multisets com.google.common.collect.Multiset&lt;E&gt; intersection(com.google.common.collect.Multiset&lt;E&gt;, com.google.common.collect.Multiset&lt;?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.TreeBasedTable void putAll(com.google.common.collect.Table) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.FluentIterable com.google.common.base.Optional&lt;E&gt; last()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.MultimapBuilder.SortedSetMultimapBuilder com.google.common.collect.Multimap build()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Range boolean isConnected(com.google.common.collect.Range&lt;C&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multimaps com.google.common.collect.SortedSetMultimap&lt;K,V&gt; unmodifiableSortedSetMultimap(com.google.common.collect.SortedSetMultimap&lt;K,V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Maps com.google.common.collect.ImmutableMap&lt;K,V&gt; toMap(java.util.Iterator&lt;K&gt;, com.google.common.base.Function&lt;? super K,V&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.RangeSet com.google.common.collect.RangeSet&lt;C&gt; subRangeSet(com.google.common.collect.Range&lt;C&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableClassToInstanceMap.Builder com.google.common.collect.ImmutableClassToInstanceMap.Builder&lt;B&gt; putAll(java.util.Map&lt;? extends java.lang.Class&lt;? extends T&gt;,? extends T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multimaps com.google.common.collect.ImmutableListMultimap&lt;K,V&gt; index(java.util.Iterator&lt;V&gt;, com.google.common.base.Function&lt;? super V,K&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset.Builder com.google.common.collect.ImmutableSortedMultiset.Builder&lt;E&gt; add(E) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Maps java.util.SortedMap&lt;K,V&gt; asMap(java.util.SortedSet&lt;K&gt;, com.google.common.base.Function&lt;? super K,V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multimaps com.google.common.collect.Multimap&lt;K,V2&gt; transformEntries(com.google.common.collect.Multimap&lt;K,V1&gt;, com.google.common.collect.Maps.EntryTransformer&lt;? super K,? super V1,V2&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap.Builder com.google.common.collect.ImmutableMultimap.Builder putAll(java.lang.Iterable) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.HashBasedTable java.util.Map column(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Maps java.util.EnumMap&lt;K,V&gt; newEnumMap(java.util.Map&lt;K,? extends V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap com.google.common.collect.ImmutableSortedMap&lt;K,V&gt; tailMap(K, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap com.google.common.collect.ImmutableMultimap&lt;K,V&gt; of(K, V, K, V, K, V)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterables boolean any(java.lang.Iterable&lt;T&gt;, com.google.common.base.Predicate&lt;? super T&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset.Builder com.google.common.collect.ImmutableSortedMultiset.Builder&lt;E&gt; setCount(E, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multisets com.google.common.collect.Multiset&lt;E&gt; intersection(com.google.common.collect.Multiset&lt;E&gt;, com.google.common.collect.Multiset&lt;?&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Interners com.google.common.collect.Interner&lt;E&gt; newWeakInterner()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableList com.google.common.collect.ImmutableList&lt;E&gt; of(E) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.DiscreteDomain com.google.common.collect.DiscreteDomain&lt;java.math.BigInteger&gt; bigIntegers()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.LinkedHashMultiset com.google.common.collect.LinkedHashMultiset&lt;E&gt; create(java.lang.Iterable&lt;? extends E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Sets java.util.LinkedHashSet&lt;E&gt; newLinkedHashSet(java.lang.Iterable&lt;? extends E&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Maps com.google.common.collect.ImmutableMap&lt;K,V&gt; toMap(java.util.Iterator&lt;K&gt;, com.google.common.base.Function&lt;? super K,V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableClassToInstanceMap.Builder com.google.common.collect.ImmutableClassToInstanceMap.Builder&lt;B&gt; put(java.lang.Class&lt;T&gt;, T)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.MinMaxPriorityQueue.Builder com.google.common.collect.MinMaxPriorityQueue&lt;T&gt; create(java.lang.Iterable&lt;? extends T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSet.Builder com.google.common.collect.ImmutableCollection.ArrayBasedBuilder add(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.FluentIterable com.google.common.base.Optional&lt;E&gt; firstMatch(com.google.common.base.Predicate&lt;? super E&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.MultimapBuilder.MultimapBuilderWithKeys com.google.common.collect.MultimapBuilder.ListMultimapBuilder&lt;K0,java.lang.Object&gt; arrayListValues(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingCollection java.lang.Object delegate()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet java.util.NavigableSet subSet(java.lang.Object, boolean, java.lang.Object, boolean) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingMap java.util.Set&lt;java.util.Map.Entry&lt;K,V&gt;&gt; entrySet()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet com.google.common.collect.ImmutableSortedSet&lt;E&gt; copyOf(E[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Sets java.util.NavigableSet&lt;E&gt; unmodifiableNavigableSet(java.util.NavigableSet&lt;E&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterables T find(java.lang.Iterable&lt;? extends T&gt;, com.google.common.base.Predicate&lt;? super T&gt;, T) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableList com.google.common.collect.UnmodifiableIterator&lt;E&gt; iterator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultiset.Builder com.google.common.collect.ImmutableCollection build()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap.Builder com.google.common.collect.ImmutableMultimap.Builder put(java.lang.Object, java.lang.Object) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap java.util.Set get(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EnumHashBiMap com.google.common.collect.EnumHashBiMap&lt;K,V&gt; create(java.util.Map&lt;K,? extends V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset java.util.NavigableSet elementSet()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingQueue boolean offer(E) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.FluentIterable com.google.common.collect.FluentIterable&lt;E&gt; from(java.lang.Iterable&lt;E&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterators T getLast(java.util.Iterator&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ArrayTable java.util.Collection&lt;V&gt; values()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMap.Builder com.google.common.collect.ImmutableMap.Builder&lt;K,V&gt; putAll(java.lang.Iterable&lt;? extends java.util.Map.Entry&lt;? extends K,? extends V&gt;&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableTable.Builder com.google.common.collect.ImmutableTable.Builder&lt;R,C,V&gt; put(com.google.common.collect.Table.Cell&lt;? extends R,? extends C,? extends V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.EvictingQueue java.util.Queue&lt;E&gt; delegate()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableTable java.util.Map column(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterables T find(java.lang.Iterable&lt;? extends T&gt;, com.google.common.base.Predicate&lt;? super T&gt;, T) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap.Builder com.google.common.collect.ImmutableMultimap.Builder put(java.lang.Object, java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multiset int setCount(E, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap com.google.common.collect.ImmutableSetMultimap&lt;K,V&gt; of(K, V, K, V) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap com.google.common.collect.ImmutableMultimap&lt;K,V&gt; of(K, V, K, V, K, V, K, V) 6'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingSortedSetMultimap java.util.Set get(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps com.google.common.collect.BiMap&lt;K,V&gt; filterKeys(com.google.common.collect.BiMap&lt;K,V&gt;, com.google.common.base.Predicate&lt;? super K&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multimaps com.google.common.collect.Multimap&lt;K,V&gt; filterValues(com.google.common.collect.Multimap&lt;K,V&gt;, com.google.common.base.Predicate&lt;? super V&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.MinMaxPriorityQueue boolean add(E) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Queues java.util.concurrent.ConcurrentLinkedQueue&lt;E&gt; newConcurrentLinkedQueue(java.lang.Iterable&lt;? extends E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.FluentIterable com.google.common.collect.FluentIterable&lt;E&gt; skip(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.FluentIterable com.google.common.collect.ImmutableMultiset&lt;E&gt; toMultiset()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap.Builder com.google.common.collect.ImmutableListMultimap.Builder&lt;K,V&gt; orderKeysBy(java.util.Comparator&lt;? super K&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.TreeRangeSet boolean contains(java.lang.Comparable) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterables java.lang.Iterable&lt;T&gt; concat(java.lang.Iterable&lt;? extends java.lang.Iterable&lt;? extends T&gt;&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterators java.util.Iterator&lt;T&gt; limit(java.util.Iterator&lt;T&gt;, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Maps java.util.NavigableMap&lt;K,V&gt; asMap(java.util.NavigableSet&lt;K&gt;, com.google.common.base.Function&lt;? super K,V&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap com.google.common.collect.ImmutableMultimap&lt;K,V&gt; of(K, V) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap com.google.common.collect.ImmutableSetMultimap&lt;K,V&gt; copyOf(java.lang.Iterable&lt;? extends java.util.Map.Entry&lt;? extends K,? extends V&gt;&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet com.google.common.collect.ImmutableSortedSet&lt;E&gt; copyOf(java.util.Comparator&lt;? super E&gt;, java.lang.Iterable&lt;? extends E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Maps java.util.Map&lt;K,V2&gt; transformEntries(java.util.Map&lt;K,V1&gt;, com.google.common.collect.Maps.EntryTransformer&lt;? super K,? super V1,V2&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.RangeMap V get(K) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimap boolean putAll(com.google.common.collect.Multimap&lt;? extends K,? extends V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingList java.util.ListIterator&lt;E&gt; listIterator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableBiMap.Builder com.google.common.collect.ImmutableMap.Builder orderEntriesByValue(java.util.Comparator)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap com.google.common.collect.ImmutableSetMultimap&lt;K,V&gt; of(K, V, K, V) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap.Builder com.google.common.collect.ImmutableMultimap.Builder putAll(com.google.common.collect.Multimap)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap com.google.common.collect.ImmutableMultimap&lt;K,V&gt; of(K, V, K, V, K, V, K, V) 7'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableRangeMap.Builder com.google.common.collect.ImmutableRangeMap&lt;K,V&gt; build()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Maps com.google.common.collect.BiMap&lt;K,V&gt; filterKeys(com.google.common.collect.BiMap&lt;K,V&gt;, com.google.common.base.Predicate&lt;? super K&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Maps java.util.NavigableMap&lt;K,V&gt; unmodifiableNavigableMap(java.util.NavigableMap&lt;K,V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableCollection.Builder com.google.common.collect.ImmutableCollection.Builder&lt;E&gt; addAll(java.lang.Iterable&lt;? extends E&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap K floorKey(K) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multimaps com.google.common.collect.Multimap&lt;K,V&gt; filterValues(com.google.common.collect.Multimap&lt;K,V&gt;, com.google.common.base.Predicate&lt;? super V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap com.google.common.collect.ImmutableSetMultimap&lt;K,V&gt; of(K, V, K, V, K, V, K, V)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.HashBasedTable java.util.Collection values()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset com.google.common.collect.ImmutableSortedMultiset.Builder&lt;E&gt; naturalOrder()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.EvictingQueue boolean offer(E) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.MinMaxPriorityQueue com.google.common.collect.MinMaxPriorityQueue&lt;E&gt; create()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet com.google.common.collect.ImmutableSortedSet&lt;E&gt; copyOf(java.util.Comparator&lt;? super E&gt;, java.lang.Iterable&lt;? extends E&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Maps java.util.NavigableMap&lt;K,V&gt; asMap(java.util.NavigableSet&lt;K&gt;, com.google.common.base.Function&lt;? super K,V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableList com.google.common.collect.ImmutableList&lt;E&gt; of(E, E, E, E)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset com.google.common.collect.ImmutableSortedMultiset&lt;E&gt; copyOf(java.util.Iterator&lt;? extends E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap com.google.common.collect.ImmutableSetMultimap&lt;K,V&gt; of(K, V, K, V) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.FluentIterable com.google.common.collect.ImmutableMap&lt;E,V&gt; toMap(com.google.common.base.Function&lt;? super E,V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.MultimapBuilder com.google.common.collect.Multimap&lt;K,V&gt; build()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.HashBasedTable void putAll(com.google.common.collect.Table) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap com.google.common.collect.ImmutableListMultimap&lt;K,V&gt; of(K, V) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap com.google.common.collect.ImmutableMultimap&lt;K,V&gt; of(K, V, K, V)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterators T[] toArray(java.util.Iterator&lt;? extends T&gt;, java.lang.Class&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterators com.google.common.collect.PeekingIterator&lt;T&gt; peekingIterator(com.google.common.collect.PeekingIterator&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.MapConstraints com.google.common.collect.Multimap&lt;K,V&gt; constrainedMultimap(com.google.common.collect.Multimap&lt;K,V&gt;, com.google.common.collect.MapConstraint&lt;? super K,? super V&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ComparisonChain com.google.common.collect.ComparisonChain compare(T, T, java.util.Comparator&lt;T&gt;) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet com.google.common.collect.ImmutableSortedSet&lt;E&gt; of(E, E, E, E)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableList.Builder com.google.common.collect.ImmutableCollection.Builder add(java.lang.Object[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Sets java.util.EnumSet&lt;E&gt; newEnumSet(java.lang.Iterable&lt;E&gt;, java.lang.Class&lt;E&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet com.google.common.collect.ImmutableSortedSet&lt;E&gt; copyOf(java.util.Comparator&lt;? super E&gt;, java.util.Collection&lt;? extends E&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap.Builder com.google.common.collect.ImmutableSortedMap.Builder&lt;K,V&gt; putAll(java.lang.Iterable&lt;? extends java.util.Map.Entry&lt;? extends K,? extends V&gt;&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multimap java.util.Collection&lt;V&gt; values()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MultimapBuilder com.google.common.collect.MultimapBuilder.MultimapBuilderWithKeys&lt;java.lang.Object&gt; hashKeys(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap com.google.common.collect.ImmutableSetMultimap&lt;K,V&gt; of(K, V, K, V) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Queues java.util.concurrent.LinkedBlockingDeque&lt;E&gt; newLinkedBlockingDeque(java.lang.Iterable&lt;? extends E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.TreeBasedTable java.util.Map row(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap.Builder com.google.common.collect.ImmutableSetMultimap.Builder&lt;K,V&gt; putAll(K, java.lang.Iterable&lt;? extends V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSet.Builder com.google.common.collect.ImmutableSet.Builder&lt;E&gt; addAll(java.util.Iterator&lt;? extends E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps com.google.common.collect.ListMultimap&lt;K,V&gt; newListMultimap(java.util.Map&lt;K,java.util.Collection&lt;V&gt;&gt;, com.google.common.base.Supplier&lt;? extends java.util.List&lt;V&gt;&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.MapConstraints com.google.common.collect.Multimap&lt;K,V&gt; constrainedMultimap(com.google.common.collect.Multimap&lt;K,V&gt;, com.google.common.collect.MapConstraint&lt;? super K,? super V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Maps com.google.common.collect.MapDifference&lt;K,V&gt; difference(java.util.Map&lt;? extends K,? extends V&gt;, java.util.Map&lt;? extends K,? extends V&gt;, com.google.common.base.Equivalence&lt;? super V&gt;) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.MapConstraint java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedListMultimap java.util.List&lt;V&gt; get(K)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Lists java.util.ArrayList&lt;E&gt; newArrayList(java.util.Iterator&lt;? extends E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.EvictingQueue java.util.Collection delegate()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Lists com.google.common.collect.ImmutableList&lt;java.lang.Character&gt; charactersOf(java.lang.String) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multimaps com.google.common.collect.Multimap&lt;K,V&gt; unmodifiableMultimap(com.google.common.collect.ImmutableMultimap&lt;K,V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Queues int drain(java.util.concurrent.BlockingQueue&lt;E&gt;, java.util.Collection&lt;? super E&gt;, int, long, java.util.concurrent.TimeUnit) 4'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap com.google.common.collect.ImmutableMultimap&lt;K,V&gt; of(K, V) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.BiMap V put(K, V) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Sets com.google.common.collect.Sets.SetView&lt;E&gt; symmetricDifference(java.util.Set&lt;? extends E&gt;, java.util.Set&lt;? extends E&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap com.google.common.collect.ImmutableSortedMap&lt;K,V&gt; copyOfSorted(java.util.SortedMap&lt;K,? extends V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.SortedMultiset com.google.common.collect.SortedMultiset&lt;E&gt; tailMultiset(E, com.google.common.collect.BoundType) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EnumMultiset com.google.common.collect.EnumMultiset&lt;E&gt; create(java.lang.Iterable&lt;E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.BinaryTreeTraverser java.lang.Iterable&lt;T&gt; children(T)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterators com.google.common.collect.UnmodifiableIterator&lt;T&gt; forArray(T...) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap.Builder com.google.common.collect.ImmutableMap.Builder put(java.lang.Object, java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multisets com.google.common.collect.Multiset&lt;E&gt; unmodifiableMultiset(com.google.common.collect.ImmutableMultiset&lt;E&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterators com.google.common.collect.UnmodifiableIterator&lt;T&gt; filter(java.util.Iterator&lt;?&gt;, java.lang.Class&lt;T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Sets.SetView S copyInto(S) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultiset.Builder com.google.common.collect.ImmutableMultiset.Builder&lt;E&gt; setCount(E, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ConcurrentHashMultiset int add(E, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.RangeSet boolean encloses(com.google.common.collect.Range&lt;C&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap.Builder com.google.common.collect.ImmutableMultimap.Builder put(java.util.Map.Entry)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Maps com.google.common.collect.BiMap&lt;K,V&gt; filterEntries(com.google.common.collect.BiMap&lt;K,V&gt;, com.google.common.base.Predicate&lt;? super java.util.Map.Entry&lt;K,V&gt;&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ArrayTable com.google.common.collect.ArrayTable&lt;R,C,V&gt; create(java.lang.Iterable&lt;? extends R&gt;, java.lang.Iterable&lt;? extends C&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableBiMap.Builder com.google.common.collect.ImmutableBiMap.Builder&lt;K,V&gt; orderEntriesByValue(java.util.Comparator&lt;? super V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingList java.util.Collection delegate()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSet com.google.common.collect.UnmodifiableIterator&lt;E&gt; iterator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableRangeMap com.google.common.collect.ImmutableMap&lt;com.google.common.collect.Range&lt;K&gt;,V&gt; asMapOfRanges()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Lists java.util.concurrent.CopyOnWriteArrayList&lt;E&gt; newCopyOnWriteArrayList(java.lang.Iterable&lt;? extends E&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingNavigableSet java.util.NavigableSet&lt;E&gt; descendingSet()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.SortedMultiset com.google.common.collect.SortedMultiset&lt;E&gt; tailMultiset(E, com.google.common.collect.BoundType) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterables T get(java.lang.Iterable&lt;T&gt;, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap.Builder com.google.common.collect.ImmutableMap.Builder put(java.lang.Object, java.lang.Object) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingSortedSet java.util.SortedSet&lt;E&gt; subSet(E, E)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterables java.lang.Iterable&lt;T&gt; cycle(T...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.MultimapBuilder com.google.common.collect.MultimapBuilder.MultimapBuilderWithKeys&lt;java.lang.Object&gt; hashKeys()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.HashMultimap boolean putAll(java.lang.Object, java.lang.Iterable) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableList.Builder com.google.common.collect.ImmutableList.Builder&lt;E&gt; addAll(java.util.Iterator&lt;? extends E&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterators boolean removeAll(java.util.Iterator&lt;?&gt;, java.util.Collection&lt;?&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ComparisonChain com.google.common.collect.ComparisonChain compareFalseFirst(boolean, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset com.google.common.collect.ImmutableSortedMultiset&lt;E&gt; copyOf(java.lang.Iterable&lt;? extends E&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterables java.lang.Iterable&lt;T&gt; cycle(java.lang.Iterable&lt;T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.MapMaker com.google.common.collect.MapMaker weakValues()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ArrayTable com.google.common.collect.ArrayTable&lt;R,C,V&gt; create(java.lang.Iterable&lt;? extends R&gt;, java.lang.Iterable&lt;? extends C&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap.Builder com.google.common.collect.ImmutableMap build()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterators java.util.Iterator&lt;T&gt; concat(java.util.Iterator&lt;? extends java.util.Iterator&lt;? extends T&gt;&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.LinkedHashMultiset java.util.Iterator iterator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMap com.google.common.collect.ImmutableMap&lt;K,V&gt; copyOf(java.lang.Iterable&lt;? extends java.util.Map.Entry&lt;? extends K,? extends V&gt;&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet.Builder com.google.common.collect.ImmutableCollection.Builder addAll(java.util.Iterator) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MinMaxPriorityQueue.Builder com.google.common.collect.MinMaxPriorityQueue.Builder&lt;B&gt; maximumSize(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset com.google.common.collect.SortedMultiset headMultiset(java.lang.Object, com.google.common.collect.BoundType)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps java.util.NavigableMap&lt;K,V&gt; filterKeys(java.util.NavigableMap&lt;K,V&gt;, com.google.common.base.Predicate&lt;? super K&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableRangeMap com.google.common.collect.ImmutableRangeMap&lt;K,V&gt; of()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableBiMap com.google.common.collect.BiMap inverse()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap java.util.Collection replaceValues(java.lang.Object, java.lang.Iterable) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableBiMap.Builder com.google.common.collect.ImmutableMap.Builder putAll(java.util.Map)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingCollection boolean standardAddAll(java.util.Collection&lt;? extends E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableList java.util.Iterator iterator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableRangeSet com.google.common.collect.Range&lt;C&gt; span()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.SortedLists.KeyPresentBehavior ANY_PRESENT'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.HashMultimap boolean putAll(java.lang.Object, java.lang.Iterable) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterators boolean removeAll(java.util.Iterator&lt;?&gt;, java.util.Collection&lt;?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Maps com.google.common.collect.ImmutableMap&lt;K,V&gt; uniqueIndex(java.lang.Iterable&lt;V&gt;, com.google.common.base.Function&lt;? super V,K&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.BiMap V put(K, V) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset.Builder com.google.common.collect.ImmutableMultiset.Builder add(java.lang.Object[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset com.google.common.collect.ImmutableSortedMultiset&lt;E&gt; copyOfSorted(com.google.common.collect.SortedMultiset&lt;E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.MultimapBuilder.ListMultimapBuilder com.google.common.collect.Multimap build(com.google.common.collect.Multimap)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Maps java.util.NavigableMap&lt;K,V2&gt; transformEntries(java.util.NavigableMap&lt;K,V1&gt;, com.google.common.collect.Maps.EntryTransformer&lt;? super K,? super V1,V2&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableRangeSet.Builder com.google.common.collect.ImmutableRangeSet&lt;C&gt; build()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multimap com.google.common.collect.Multiset&lt;K&gt; keys()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Range boolean contains(C) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ContiguousSet com.google.common.collect.ContiguousSet&lt;C&gt; headSet(C, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Sets java.util.HashSet&lt;E&gt; newHashSet(java.lang.Iterable&lt;? extends E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.MultimapBuilder.MultimapBuilderWithKeys com.google.common.collect.MultimapBuilder.SetMultimapBuilder&lt;K0,java.lang.Object&gt; hashSetValues(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Sets java.util.NavigableSet&lt;E&gt; synchronizedNavigableSet(java.util.NavigableSet&lt;E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterables java.lang.Iterable&lt;T&gt; concat(java.lang.Iterable&lt;? extends T&gt;, java.lang.Iterable&lt;? extends T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.TreeRangeSet com.google.common.collect.Range&lt;C&gt; rangeContaining(C) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableRangeSet com.google.common.collect.ImmutableSortedSet&lt;C&gt; asSet(com.google.common.collect.DiscreteDomain&lt;C&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap.Builder com.google.common.collect.ImmutableListMultimap.Builder&lt;K,V&gt; putAll(java.lang.Iterable&lt;? extends java.util.Map.Entry&lt;? extends K,? extends V&gt;&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap com.google.common.collect.ImmutableSetMultimap&lt;V,K&gt; inverse()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ComparisonChain com.google.common.collect.ComparisonChain compare(double, double)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap com.google.common.collect.ImmutableSortedMap&lt;K,V&gt; headMap(K)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet com.google.common.collect.ImmutableSortedSet&lt;E&gt; subSet(E, boolean, E, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Lists java.util.List&lt;java.util.List&lt;B&gt;&gt; cartesianProduct(java.util.List&lt;? extends java.util.List&lt;? extends B&gt;&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMap V get(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.HashMultimap boolean put(java.lang.Object, java.lang.Object) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet java.util.NavigableSet subSet(java.lang.Object, boolean, java.lang.Object, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.TreeMultiset boolean remove(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeRangeMap com.google.common.collect.RangeMap&lt;K,V&gt; subRangeMap(com.google.common.collect.Range&lt;K&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap java.util.Collection get(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Table java.util.Set&lt;C&gt; columnKeySet()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset.Builder com.google.common.collect.ImmutableCollection.Builder addAll(java.util.Iterator) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Ordering E max(java.lang.Iterable&lt;E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Maps java.util.NavigableMap&lt;K,V&gt; filterKeys(java.util.NavigableMap&lt;K,V&gt;, com.google.common.base.Predicate&lt;? super K&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Sets com.google.common.collect.Sets.SetView&lt;E&gt; intersection(java.util.Set&lt;E&gt;, java.util.Set&lt;?&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap com.google.common.collect.ImmutableMultimap inverse()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Maps com.google.common.collect.ImmutableMap&lt;java.lang.String,java.lang.String&gt; fromProperties(java.util.Properties)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.LinkedHashMultiset boolean setCount(java.lang.Object, int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.FluentIterable boolean anyMatch(com.google.common.base.Predicate&lt;? super E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMap java.util.Set keySet()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap.Builder com.google.common.collect.ImmutableMultimap.Builder orderKeysBy(java.util.Comparator) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap com.google.common.collect.ImmutableSortedMap&lt;K,V&gt; of(K, V, K, V, K, V, K, V, K, V)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Sets com.google.common.collect.Sets.SetView&lt;E&gt; intersection(java.util.Set&lt;E&gt;, java.util.Set&lt;?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap.Builder com.google.common.collect.ImmutableMultimap.Builder putAll(java.lang.Object, java.lang.Iterable)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.RangeMap java.util.Map.Entry&lt;com.google.common.collect.Range&lt;K&gt;,V&gt; getEntry(K) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps com.google.common.collect.ListMultimap&lt;K,V&gt; filterKeys(com.google.common.collect.ListMultimap&lt;K,V&gt;, com.google.common.base.Predicate&lt;? super K&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap com.google.common.collect.ImmutableCollection&lt;java.util.Map.Entry&lt;K,V&gt;&gt; entries()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multimaps java.util.Map&lt;K,java.util.List&lt;V&gt;&gt; asMap(com.google.common.collect.ListMultimap&lt;K,V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableClassToInstanceMap com.google.common.collect.ImmutableClassToInstanceMap&lt;B&gt; of()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSet.Builder com.google.common.collect.ImmutableCollection.Builder addAll(java.lang.Iterable) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset com.google.common.collect.ImmutableSortedMultiset&lt;E&gt; tailMultiset(E, com.google.common.collect.BoundType) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps java.util.NavigableMap&lt;K,V&gt; filterEntries(java.util.NavigableMap&lt;K,V&gt;, com.google.common.base.Predicate&lt;? super java.util.Map.Entry&lt;K,V&gt;&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.HashBasedTable java.util.Map row(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset com.google.common.collect.ImmutableSortedMultiset&lt;E&gt; tailMultiset(E, com.google.common.collect.BoundType) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset.Builder com.google.common.collect.ImmutableSortedMultiset.Builder&lt;E&gt; addCopies(E, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.HashMultimap boolean put(java.lang.Object, java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Range com.google.common.collect.Range&lt;C&gt; canonical(com.google.common.collect.DiscreteDomain&lt;C&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Queues java.util.Deque&lt;E&gt; synchronizedDeque(java.util.Deque&lt;E&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterables int size(java.lang.Iterable&lt;?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.TreeRangeSet void remove(com.google.common.collect.Range&lt;C&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingSortedMap java.util.SortedMap&lt;K,V&gt; tailMap(K)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps com.google.common.collect.ListMultimap&lt;K,V&gt; filterKeys(com.google.common.collect.ListMultimap&lt;K,V&gt;, com.google.common.base.Predicate&lt;? super K&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingMap void putAll(java.util.Map&lt;? extends K,? extends V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MinMaxPriorityQueue com.google.common.collect.MinMaxPriorityQueue&lt;E&gt; create(java.lang.Iterable&lt;? extends E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap.Builder com.google.common.collect.ImmutableSortedMap.Builder&lt;K,V&gt; put(java.util.Map.Entry&lt;? extends K,? extends V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Maps java.util.NavigableMap&lt;K,V&gt; filterEntries(java.util.NavigableMap&lt;K,V&gt;, com.google.common.base.Predicate&lt;? super java.util.Map.Entry&lt;K,V&gt;&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.TreeRangeSet java.util.Set&lt;com.google.common.collect.Range&lt;C&gt;&gt; asRanges()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ContiguousSet com.google.common.collect.ContiguousSet&lt;C&gt; subSet(C, boolean, C, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingMultimap java.lang.Object delegate()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableBiMap.Builder com.google.common.collect.ImmutableMap.Builder put(java.lang.Object, java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Ordering com.google.common.collect.Ordering&lt;java.lang.Object&gt; usingToString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.SortedSetMultimap java.util.SortedSet&lt;V&gt; replaceValues(K, java.lang.Iterable&lt;? extends V&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap java.util.Collection replaceValues(java.lang.Object, java.lang.Iterable) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraint void checkKeyValue(K, V) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapMaker java.util.concurrent.ConcurrentMap&lt;K,V&gt; makeMap()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.MapConstraints com.google.common.collect.ListMultimap&lt;K,V&gt; constrainedListMultimap(com.google.common.collect.ListMultimap&lt;K,V&gt;, com.google.common.collect.MapConstraint&lt;? super K,? super V&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Ordering com.google.common.collect.ImmutableList&lt;E&gt; immutableSortedCopy(java.lang.Iterable&lt;E&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableRangeSet com.google.common.collect.ImmutableRangeSet&lt;C&gt; of()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Maps java.util.SortedMap&lt;K,V&gt; filterValues(java.util.SortedMap&lt;K,V&gt;, com.google.common.base.Predicate&lt;? super V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.MultimapBuilder.SetMultimapBuilder com.google.common.collect.Multimap build(com.google.common.collect.Multimap)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap com.google.common.collect.ImmutableMultimap&lt;K,V&gt; of(K, V, K, V, K, V, K, V, K, V) 4'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet com.google.common.collect.ImmutableSortedSet&lt;E&gt; of(E, E, E, E, E, E, E...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableTable.Builder com.google.common.collect.ImmutableTable.Builder&lt;R,C,V&gt; orderRowsBy(java.util.Comparator&lt;? super R&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterables boolean retainAll(java.lang.Iterable&lt;?&gt;, java.util.Collection&lt;?&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap com.google.common.collect.ImmutableListMultimap&lt;K,V&gt; of(K, V, K, V, K, V, K, V, K, V)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap com.google.common.collect.ImmutableMultimap&lt;K,V&gt; copyOf(java.lang.Iterable&lt;? extends java.util.Map.Entry&lt;? extends K,? extends V&gt;&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableTable V put(R, C, V) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableBiMap.Builder com.google.common.collect.ImmutableMap.Builder put(java.lang.Object, java.lang.Object) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap com.google.common.collect.ImmutableSortedMap&lt;K,V&gt; subMap(K, boolean, K, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableClassToInstanceMap T putInstance(java.lang.Class&lt;T&gt;, T) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Ordering java.util.List&lt;E&gt; leastOf(java.lang.Iterable&lt;E&gt;, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.MapConstraint void checkKeyValue(K, V) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedListMultimap boolean putAll(com.google.common.collect.Multimap) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Range com.google.common.collect.Range&lt;C&gt; closed(C, C) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableBiMap.Builder com.google.common.collect.ImmutableMap build()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap com.google.common.collect.ImmutableListMultimap&lt;K,V&gt; copyOf(com.google.common.collect.Multimap&lt;? extends K,? extends V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multimaps com.google.common.collect.Multimap&lt;K,V2&gt; transformValues(com.google.common.collect.Multimap&lt;K,V1&gt;, com.google.common.base.Function&lt;? super V1,V2&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.HashMultiset com.google.common.collect.HashMultiset&lt;E&gt; create(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultiset com.google.common.collect.ImmutableMultiset&lt;E&gt; copyOf(E[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Table java.util.Set&lt;R&gt; rowKeySet()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet E lower(E) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Ordering com.google.common.collect.Ordering&lt;T&gt; explicit(T, T...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Range com.google.common.collect.Range&lt;C&gt; singleton(C) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.MapConstraints com.google.common.collect.ListMultimap&lt;K,V&gt; constrainedListMultimap(com.google.common.collect.ListMultimap&lt;K,V&gt;, com.google.common.collect.MapConstraint&lt;? super K,? super V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap.Builder com.google.common.collect.ImmutableMultimap.Builder&lt;K,V&gt; putAll(K, java.lang.Iterable&lt;? extends V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.MapMaker com.google.common.collect.MapMaker concurrencyLevel(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.TreeBasedTable java.util.Map rowMap()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Maps java.util.SortedMap&lt;K,V&gt; filterValues(java.util.SortedMap&lt;K,V&gt;, com.google.common.base.Predicate&lt;? super V&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap com.google.common.collect.ImmutableMultimap&lt;K,V&gt; of(K, V, K, V, K, V, K, V, K, V) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableTable com.google.common.collect.ImmutableTable&lt;R,C,V&gt; copyOf(com.google.common.collect.Table&lt;? extends R,? extends C,? extends V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.HashBiMap java.util.Set entrySet()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultiset.Builder com.google.common.collect.ImmutableCollection.Builder addAll(java.lang.Iterable)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multimaps com.google.common.collect.Multimap&lt;K,V&gt; filterEntries(com.google.common.collect.Multimap&lt;K,V&gt;, com.google.common.base.Predicate&lt;? super java.util.Map.Entry&lt;K,V&gt;&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ConcurrentHashMultiset java.util.Set entrySet()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterators java.util.Iterator&lt;T&gt; concat(java.util.Iterator&lt;? extends T&gt;, java.util.Iterator&lt;? extends T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.LinkedHashMultimap java.util.Set get(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Range com.google.common.collect.Range&lt;C&gt; downTo(C, com.google.common.collect.BoundType)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.TreeMultimap com.google.common.collect.TreeMultimap&lt;K,V&gt; create(com.google.common.collect.Multimap&lt;? extends K,? extends V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ArrayTable java.util.Map&lt;R,java.util.Map&lt;C,V&gt;&gt; rowMap()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Maps java.util.LinkedHashMap&lt;K,V&gt; newLinkedHashMap(java.util.Map&lt;? extends K,? extends V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ContiguousSet com.google.common.collect.ContiguousSet&lt;C&gt; subSet(C, boolean, C, boolean) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableBiMap.Builder com.google.common.collect.ImmutableBiMap.Builder&lt;K,V&gt; putAll(java.lang.Iterable&lt;? extends java.util.Map.Entry&lt;? extends K,? extends V&gt;&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap com.google.common.collect.ImmutableSortedMap&lt;K,V&gt; subMap(K, K)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableTable java.util.Set columnKeySet()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.FluentIterable com.google.common.collect.FluentIterable&lt;T&gt; transformAndConcat(com.google.common.base.Function&lt;? super E,? extends java.lang.Iterable&lt;? extends T&gt;&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableBiMap.Builder com.google.common.collect.ImmutableMap.Builder put(java.util.Map.Entry) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableRangeSet com.google.common.collect.ImmutableRangeSet&lt;C&gt; of(com.google.common.collect.Range&lt;C&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Range com.google.common.collect.Range&lt;C&gt; closed(C, C) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Range com.google.common.collect.Range&lt;C&gt; atMost(C)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.BiMap void putAll(java.util.Map&lt;? extends K,? extends V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap.Builder com.google.common.collect.ImmutableMap.Builder putAll(java.util.Map)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingSortedSetMultimap java.util.SortedSet&lt;V&gt; replaceValues(K, java.lang.Iterable&lt;? extends V&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset com.google.common.collect.ImmutableSortedMultiset.Builder&lt;E&gt; orderedBy(java.util.Comparator&lt;E&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultiset int add(E, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableTable V put(R, C, V) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultiset.Builder com.google.common.collect.ImmutableMultiset.Builder&lt;E&gt; addCopies(E, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap com.google.common.collect.ImmutableMultimap&lt;K,V&gt; of(K, V, K, V, K, V, K, V, K, V) 6'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingMapEntry V getValue()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap.Builder com.google.common.collect.ImmutableMultimap.Builder putAll(com.google.common.collect.Multimap)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.EnumBiMap void putAll(java.util.Map) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.LinkedHashMultimap com.google.common.collect.LinkedHashMultimap&lt;K,V&gt; create(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableList com.google.common.collect.ImmutableList.Builder&lt;E&gt; builder()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.TreeMultiset boolean removeAll(java.util.Collection) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap java.util.NavigableMap tailMap(java.lang.Object, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMap.Builder com.google.common.collect.ImmutableMap.Builder&lt;K,V&gt; put(K, V)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Maps com.google.common.collect.ImmutableMap&lt;K,V&gt; immutableEnumMap(java.util.Map&lt;K,? extends V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Range com.google.common.collect.Range&lt;C&gt; atLeast(C) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap com.google.common.collect.ImmutableMultiset&lt;K&gt; keys()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet com.google.common.collect.ImmutableSortedSet&lt;E&gt; copyOf(java.util.Comparator&lt;? super E&gt;, java.util.Iterator&lt;? extends E&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset com.google.common.collect.ImmutableSortedMultiset&lt;E&gt; of(E, E, E)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Sets java.util.Set&lt;java.util.List&lt;B&gt;&gt; cartesianProduct(java.util.Set&lt;? extends B&gt;...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap com.google.common.collect.ImmutableMultimap&lt;K,V&gt; of(K, V, K, V, K, V, K, V, K, V) 5'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.RangeSet com.google.common.collect.Range&lt;C&gt; span()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableTable V put(R, C, V) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ArrayTable java.util.Set rowKeySet()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSet.Builder com.google.common.collect.ImmutableSet.Builder&lt;E&gt; addAll(java.lang.Iterable&lt;? extends E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableRangeMap com.google.common.collect.ImmutableRangeMap.Builder&lt;K,V&gt; builder()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Sets java.util.Set&lt;java.util.List&lt;B&gt;&gt; cartesianProduct(java.util.List&lt;? extends java.util.Set&lt;? extends B&gt;&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset.Builder com.google.common.collect.ImmutableCollection.Builder add(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultiset.Builder com.google.common.collect.ImmutableMultiset.Builder&lt;E&gt; addAll(java.lang.Iterable&lt;? extends E&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.HashBiMap com.google.common.collect.HashBiMap&lt;K,V&gt; create()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSet.Builder com.google.common.collect.ImmutableSet.Builder&lt;E&gt; add(E) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap.Builder com.google.common.collect.ImmutableMultimap.Builder&lt;K,V&gt; orderValuesBy(java.util.Comparator&lt;? super V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap com.google.common.collect.ImmutableMultimap&lt;K,V&gt; of(K, V, K, V, K, V, K, V, K, V) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingNavigableMap.StandardDescendingMap java.util.Iterator&lt;java.util.Map.Entry&lt;K,V&gt;&gt; entryIterator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Range com.google.common.collect.Range&lt;C&gt; openClosed(C, C) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.TreeMultiset com.google.common.collect.TreeMultiset&lt;E&gt; create(java.lang.Iterable&lt;? extends E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset.Builder com.google.common.collect.ImmutableMultiset.Builder addAll(java.util.Iterator) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap.Builder com.google.common.collect.ImmutableListMultimap.Builder&lt;K,V&gt; putAll(com.google.common.collect.Multimap&lt;? extends K,? extends V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Lists java.util.List&lt;java.util.List&lt;B&gt;&gt; cartesianProduct(java.util.List&lt;? extends B&gt;...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.TreeTraverser java.lang.Iterable&lt;T&gt; children(T)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps java.util.EnumMap&lt;K,V&gt; newEnumMap(java.lang.Class&lt;K&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.HashBasedTable java.util.Map rowMap()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMap com.google.common.collect.ImmutableMap&lt;K,V&gt; of(K, V, K, V, K, V, K, V, K, V)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMap com.google.common.collect.ImmutableMap&lt;K,V&gt; copyOf(java.util.Map&lt;? extends K,? extends V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingCollection java.util.Iterator&lt;E&gt; iterator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap.Builder com.google.common.collect.ImmutableSetMultimap.Builder&lt;K,V&gt; orderValuesBy(java.util.Comparator&lt;? super V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.FluentIterable com.google.common.collect.FluentIterable&lt;E&gt; of(E[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Range com.google.common.collect.Range&lt;C&gt; openClosed(C, C) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.LinkedHashMultimap boolean putAll(com.google.common.collect.Multimap) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableList com.google.common.collect.ImmutableList&lt;E&gt; copyOf(E[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Maps java.util.SortedMap&lt;K,V&gt; filterEntries(java.util.SortedMap&lt;K,V&gt;, com.google.common.base.Predicate&lt;? super java.util.Map.Entry&lt;K,V&gt;&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap com.google.common.collect.ImmutableSortedMap&lt;K,V&gt; of(K, V, K, V, K, V)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Maps java.util.Map&lt;K,V&gt; filterValues(java.util.Map&lt;K,V&gt;, com.google.common.base.Predicate&lt;? super V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Maps java.util.Map&lt;K,V&gt; asMap(java.util.Set&lt;K&gt;, com.google.common.base.Function&lt;? super K,V&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.TreeMultiset com.google.common.collect.SortedMultiset&lt;E&gt; headMultiset(E, com.google.common.collect.BoundType)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.TreeMultiset boolean addAll(java.util.Collection) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingSortedSet java.util.SortedSet&lt;E&gt; tailSet(E) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultiset com.google.common.collect.ImmutableMultiset&lt;E&gt; of(E, E, E, E, E, E, E...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap com.google.common.collect.ImmutableSortedMap&lt;K,V&gt; copyOf(java.lang.Iterable&lt;? extends java.util.Map.Entry&lt;? extends K,? extends V&gt;&gt;, java.util.Comparator&lt;? super K&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.MultimapBuilder com.google.common.collect.MultimapBuilder.MultimapBuilderWithKeys&lt;K0&gt; treeKeys(java.util.Comparator&lt;K0&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ArrayTable com.google.common.collect.ArrayTable&lt;R,C,V&gt; create(com.google.common.collect.Table&lt;R,C,V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap com.google.common.collect.ImmutableMultimap&lt;K,V&gt; of(K, V, K, V, K, V, K, V, K, V) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterables java.lang.Iterable&lt;T&gt; filter(java.lang.Iterable&lt;T&gt;, com.google.common.base.Predicate&lt;? super T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Sets com.google.common.collect.Sets.SetView&lt;E&gt; symmetricDifference(java.util.Set&lt;? extends E&gt;, java.util.Set&lt;? extends E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Maps com.google.common.collect.ImmutableMap&lt;K,V&gt; toMap(java.lang.Iterable&lt;K&gt;, com.google.common.base.Function&lt;? super K,V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Maps java.util.SortedMap&lt;K,V&gt; filterEntries(java.util.SortedMap&lt;K,V&gt;, com.google.common.base.Predicate&lt;? super java.util.Map.Entry&lt;K,V&gt;&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.BinaryTreeTraverser com.google.common.collect.FluentIterable&lt;T&gt; inOrderTraversal(T) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingMultiset java.util.Iterator&lt;E&gt; standardIterator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Table java.util.Map&lt;C,java.util.Map&lt;R,V&gt;&gt; columnMap()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet com.google.common.collect.ImmutableSortedSet&lt;E&gt; copyOf(java.util.Iterator&lt;? extends E&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multimaps com.google.common.collect.ListMultimap&lt;K,V2&gt; transformEntries(com.google.common.collect.ListMultimap&lt;K,V1&gt;, com.google.common.collect.Maps.EntryTransformer&lt;? super K,? super V1,V2&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Maps java.util.Map&lt;K,V&gt; asMap(java.util.Set&lt;K&gt;, com.google.common.base.Function&lt;? super K,V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multimaps com.google.common.collect.ListMultimap&lt;K,V2&gt; transformEntries(com.google.common.collect.ListMultimap&lt;K,V1&gt;, com.google.common.collect.Maps.EntryTransformer&lt;? super K,? super V1,V2&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap com.google.common.collect.ImmutableMultimap&lt;K,V&gt; of(K, V, K, V, K, V, K, V, K, V) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap com.google.common.collect.ImmutableSortedMap&lt;K,V&gt; copyOf(java.lang.Iterable&lt;? extends java.util.Map.Entry&lt;? extends K,? extends V&gt;&gt;, java.util.Comparator&lt;? super K&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset.Builder com.google.common.collect.ImmutableSortedMultiset.Builder&lt;E&gt; addAll(java.util.Iterator&lt;? extends E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet com.google.common.collect.ImmutableSortedSet&lt;E&gt; headSet(E, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.HashMultiset boolean retainAll(java.util.Collection) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ConcurrentHashMultiset boolean add(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset com.google.common.collect.ImmutableSortedMultiset&lt;E&gt; copyOf(java.util.Comparator&lt;? super E&gt;, java.lang.Iterable&lt;? extends E&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterables boolean retainAll(java.lang.Iterable&lt;?&gt;, java.util.Collection&lt;?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ContiguousSet com.google.common.collect.ImmutableSortedSet tailSet(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingCollection java.util.Collection&lt;E&gt; delegate()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableRangeMap java.util.Map asMapOfRanges()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableRangeMap com.google.common.collect.ImmutableRangeMap&lt;K,V&gt; subRangeMap(com.google.common.collect.Range&lt;K&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterables java.lang.Iterable&lt;T&gt; mergeSorted(java.lang.Iterable&lt;? extends java.lang.Iterable&lt;? extends T&gt;&gt;, java.util.Comparator&lt;? super T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterators com.google.common.collect.UnmodifiableIterator&lt;T&gt; filter(java.util.Iterator&lt;T&gt;, com.google.common.base.Predicate&lt;? super T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterators java.util.Iterator&lt;T&gt; concat(java.util.Iterator&lt;? extends T&gt;, java.util.Iterator&lt;? extends T&gt;, java.util.Iterator&lt;? extends T&gt;, java.util.Iterator&lt;? extends T&gt;) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Maps java.util.NavigableMap&lt;K,V&gt; synchronizedNavigableMap(java.util.NavigableMap&lt;K,V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet.Builder com.google.common.collect.ImmutableSet.Builder add(java.lang.Object[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Maps java.util.Map&lt;K,V&gt; filterKeys(java.util.Map&lt;K,V&gt;, com.google.common.base.Predicate&lt;? super K&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet.Builder com.google.common.collect.ImmutableSet.Builder addAll(java.util.Iterator)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset com.google.common.collect.ImmutableSortedMultiset&lt;E&gt; copyOf(java.util.Comparator&lt;? super E&gt;, java.util.Iterator&lt;? extends E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.TreeBasedTable java.util.SortedMap&lt;C,V&gt; row(R) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet com.google.common.collect.ImmutableSortedSet&lt;E&gt; of(E, E, E, E, E, E, E...) 6'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Queues java.util.concurrent.LinkedBlockingQueue&lt;E&gt; newLinkedBlockingQueue()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableList.Builder com.google.common.collect.ImmutableCollection.Builder add(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterators java.util.Iterator&lt;T&gt; concat(java.util.Iterator&lt;? extends T&gt;...) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset.Builder com.google.common.collect.ImmutableMultiset.Builder addAll(java.lang.Iterable)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap K higherKey(K) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap.Builder com.google.common.collect.ImmutableListMultimap.Builder&lt;K,V&gt; putAll(K, V...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap com.google.common.collect.ImmutableSortedMap.Builder&lt;K,V&gt; orderedBy(java.util.Comparator&lt;K&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.TreeTraverser com.google.common.collect.FluentIterable&lt;T&gt; postOrderTraversal(T) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterators java.util.Iterator&lt;T&gt; concat(java.util.Iterator&lt;? extends T&gt;, java.util.Iterator&lt;? extends T&gt;, java.util.Iterator&lt;? extends T&gt;, java.util.Iterator&lt;? extends T&gt;) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap com.google.common.collect.ImmutableListMultimap&lt;K,V&gt; of(K, V)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset.Builder com.google.common.collect.ImmutableSortedMultiset.Builder&lt;E&gt; addAll(java.lang.Iterable&lt;? extends E&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterators int size(java.util.Iterator&lt;?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableRangeSet com.google.common.collect.RangeSet subRangeSet(com.google.common.collect.Range) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EnumHashBiMap java.lang.Object remove(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedHashMultiset java.util.Set entrySet()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableRangeMap V get(K) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ListMultimap java.util.List&lt;V&gt; removeAll(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableList com.google.common.collect.ImmutableList&lt;E&gt; copyOf(java.util.Iterator&lt;? extends E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.SortedSetMultimap java.util.SortedSet&lt;V&gt; get(K) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap com.google.common.collect.ImmutableSortedMap&lt;K,V&gt; copyOf(java.lang.Iterable&lt;? extends java.util.Map.Entry&lt;? extends K,? extends V&gt;&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.TreeBasedTable com.google.common.collect.TreeBasedTable&lt;R,C,V&gt; create(com.google.common.collect.TreeBasedTable&lt;R,C,? extends V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.TreeMultimap com.google.common.collect.TreeMultimap&lt;K,V&gt; create()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multimaps java.util.Map&lt;K,java.util.Set&lt;V&gt;&gt; asMap(com.google.common.collect.SetMultimap&lt;K,V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingNavigableSet java.util.NavigableSet&lt;E&gt; headSet(E, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet com.google.common.collect.ImmutableSortedSet&lt;E&gt; copyOfSorted(java.util.SortedSet&lt;E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterators java.util.Iterator&lt;T&gt; concat(java.util.Iterator&lt;? extends T&gt;, java.util.Iterator&lt;? extends T&gt;, java.util.Iterator&lt;? extends T&gt;, java.util.Iterator&lt;? extends T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.SetMultimap java.util.Set&lt;V&gt; get(K) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet.Builder com.google.common.collect.ImmutableSet.Builder addAll(java.lang.Iterable) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Queues java.util.concurrent.ConcurrentLinkedQueue&lt;E&gt; newConcurrentLinkedQueue(java.lang.Iterable&lt;? extends E&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet com.google.common.collect.ImmutableSortedSet&lt;E&gt; copyOf(java.util.Comparator&lt;? super E&gt;, java.lang.Iterable&lt;? extends E&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset.Builder com.google.common.collect.ImmutableCollection.Builder add(java.lang.Object[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterators T getNext(java.util.Iterator&lt;? extends T&gt;, T) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterators java.util.Iterator&lt;T&gt; limit(java.util.Iterator&lt;T&gt;, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap com.google.common.collect.ImmutableMultimap&lt;K,V&gt; copyOf(com.google.common.collect.Multimap&lt;? extends K,? extends V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableRangeSet com.google.common.collect.ImmutableSet&lt;com.google.common.collect.Range&lt;C&gt;&gt; asDescendingSetOfRanges()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset com.google.common.collect.SortedMultiset subMultiset(java.lang.Object, com.google.common.collect.BoundType, java.lang.Object, com.google.common.collect.BoundType) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterables com.google.common.base.Optional&lt;T&gt; tryFind(java.lang.Iterable&lt;T&gt;, com.google.common.base.Predicate&lt;? super T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset com.google.common.collect.ImmutableSortedMultiset&lt;E&gt; of(E, E, E, E, E, E, E...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterables java.lang.Iterable&lt;T&gt; filter(java.lang.Iterable&lt;T&gt;, com.google.common.base.Predicate&lt;? super T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableBiMap com.google.common.collect.ImmutableBiMap.Builder&lt;K,V&gt; builder()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap java.util.Collection get(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multiset boolean contains(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet com.google.common.collect.ImmutableSortedSet&lt;E&gt; copyOf(java.lang.Iterable&lt;? extends E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterators java.util.Iterator&lt;T&gt; concat(java.util.Iterator&lt;? extends T&gt;, java.util.Iterator&lt;? extends T&gt;, java.util.Iterator&lt;? extends T&gt;, java.util.Iterator&lt;? extends T&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset com.google.common.collect.ImmutableSortedMultiset&lt;E&gt; copyOf(java.util.Comparator&lt;? super E&gt;, java.util.Iterator&lt;? extends E&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableTable.Builder com.google.common.collect.ImmutableTable.Builder&lt;R,C,V&gt; putAll(com.google.common.collect.Table&lt;? extends R,? extends C,? extends V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableList com.google.common.collect.ImmutableList&lt;E&gt; copyOf(java.lang.Iterable&lt;? extends E&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableClassToInstanceMap.Builder com.google.common.collect.ImmutableClassToInstanceMap.Builder&lt;B&gt; put(java.lang.Class&lt;T&gt;, T) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet java.util.NavigableSet headSet(java.lang.Object, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.FluentIterable com.google.common.collect.ImmutableList&lt;E&gt; toSortedList(java.util.Comparator&lt;? super E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableList.Builder com.google.common.collect.ImmutableCollection.Builder addAll(java.util.Iterator)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterables com.google.common.base.Optional&lt;T&gt; tryFind(java.lang.Iterable&lt;T&gt;, com.google.common.base.Predicate&lt;? super T&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterators T find(java.util.Iterator&lt;T&gt;, com.google.common.base.Predicate&lt;? super T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset com.google.common.collect.ImmutableSortedMultiset&lt;E&gt; copyOf(java.util.Iterator&lt;? extends E&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multimaps com.google.common.collect.SetMultimap&lt;K,V&gt; newSetMultimap(java.util.Map&lt;K,java.util.Collection&lt;V&gt;&gt;, com.google.common.base.Supplier&lt;? extends java.util.Set&lt;V&gt;&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingSortedMap.StandardKeySet StandardKeySet(com.google.common.collect.ForwardingSortedMap) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMap com.google.common.collect.ImmutableSetMultimap&lt;K,V&gt; asMultimap()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableRangeMap java.util.Map asDescendingMapOfRanges()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterators java.util.Iterator&lt;T&gt; transform(java.util.Iterator&lt;F&gt;, com.google.common.base.Function&lt;? super F,? extends T&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet.Builder com.google.common.collect.ImmutableCollection.Builder add(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingNavigableSet java.util.NavigableSet&lt;E&gt; tailSet(E, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.HashMultimap java.util.Set entries()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Range boolean encloses(com.google.common.collect.Range&lt;C&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingList boolean standardAddAll(int, java.lang.Iterable&lt;? extends E&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap com.google.common.collect.ImmutableListMultimap&lt;K,V&gt; of(K, V, K, V) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap com.google.common.collect.ImmutableMultimap&lt;K,V&gt; of(K, V, K, V, K, V, K, V, K, V) 8'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet.Builder com.google.common.collect.ImmutableSortedSet.Builder&lt;E&gt; add(E...) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultiset com.google.common.collect.ImmutableMultiset&lt;E&gt; of(E, E)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterators T find(java.util.Iterator&lt;T&gt;, com.google.common.base.Predicate&lt;? super T&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.MapMaker com.google.common.collect.GenericMapMaker concurrencyLevel(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ComparisonChain com.google.common.collect.ComparisonChain compare(float, float)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps com.google.common.collect.ImmutableListMultimap&lt;K,V&gt; index(java.util.Iterator&lt;V&gt;, com.google.common.base.Function&lt;? super V,K&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableRangeMap com.google.common.collect.ImmutableRangeMap&lt;K,V&gt; of(com.google.common.collect.Range&lt;K&gt;, V) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Maps java.util.NavigableMap&lt;K,V&gt; unmodifiableNavigableMap(java.util.NavigableMap&lt;K,V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset.Builder com.google.common.collect.ImmutableMultiset.Builder setCount(java.lang.Object, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Maps com.google.common.collect.ImmutableMap&lt;K,V&gt; toMap(java.util.Iterator&lt;K&gt;, com.google.common.base.Function&lt;? super K,V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.SortedMultiset com.google.common.collect.SortedMultiset&lt;E&gt; subMultiset(E, com.google.common.collect.BoundType, E, com.google.common.collect.BoundType)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMap com.google.common.collect.ImmutableMap&lt;K,V&gt; of(K, V) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSet com.google.common.collect.ImmutableSet&lt;E&gt; of(E)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterators java.util.Iterator&lt;T&gt; transform(java.util.Iterator&lt;F&gt;, com.google.common.base.Function&lt;? super F,? extends T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableList com.google.common.collect.ImmutableList&lt;E&gt; copyOf(java.util.Collection&lt;? extends E&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap com.google.common.collect.ImmutableListMultimap&lt;K,V&gt; of(K, V, K, V) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableList com.google.common.collect.ImmutableList&lt;E&gt; of(E, E, E, E, E, E, E, E, E, E, E)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap com.google.common.collect.ImmutableMultimap&lt;K,V&gt; of(K, V, K, V, K, V, K, V, K, V) 7'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableRangeMap com.google.common.collect.ImmutableRangeMap&lt;K,V&gt; of(com.google.common.collect.Range&lt;K&gt;, V) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet.Builder com.google.common.collect.ImmutableSet build()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableRangeMap com.google.common.collect.ImmutableRangeMap&lt;K,V&gt; copyOf(com.google.common.collect.RangeMap&lt;K,? extends V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Maps com.google.common.collect.BiMap&lt;K,V&gt; unmodifiableBiMap(com.google.common.collect.BiMap&lt;? extends K,? extends V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap.Builder com.google.common.collect.ImmutableMultimap.Builder putAll(java.lang.Object, java.lang.Object[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multimaps com.google.common.collect.SetMultimap&lt;K,V&gt; filterEntries(com.google.common.collect.SetMultimap&lt;K,V&gt;, com.google.common.base.Predicate&lt;? super java.util.Map.Entry&lt;K,V&gt;&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterables java.lang.Iterable&lt;T&gt; consumingIterable(java.lang.Iterable&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap com.google.common.collect.ImmutableListMultimap&lt;K,V&gt; of(K, V, K, V) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingMultimap java.util.Collection&lt;V&gt; get(K)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps com.google.common.collect.SetMultimap&lt;K,V&gt; newSetMultimap(java.util.Map&lt;K,java.util.Collection&lt;V&gt;&gt;, com.google.common.base.Supplier&lt;? extends java.util.Set&lt;V&gt;&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterators com.google.common.collect.UnmodifiableIterator&lt;T&gt; filter(java.util.Iterator&lt;T&gt;, com.google.common.base.Predicate&lt;? super T&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap.Builder com.google.common.collect.ImmutableMultimap.Builder&lt;K,V&gt; putAll(java.lang.Iterable&lt;? extends java.util.Map.Entry&lt;? extends K,? extends V&gt;&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingList java.lang.Object delegate()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap.Builder com.google.common.collect.ImmutableListMultimap.Builder&lt;K,V&gt; orderValuesBy(java.util.Comparator&lt;? super V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap com.google.common.collect.ImmutableMultimap&lt;K,V&gt; of(K, V, K, V, K, V, K, V, K, V) 9'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.FluentIterable com.google.common.collect.FluentIterable&lt;T&gt; filter(java.lang.Class&lt;T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap com.google.common.collect.ImmutableListMultimap&lt;K,V&gt; of(K, V, K, V) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.MultimapBuilder.MultimapBuilderWithKeys com.google.common.collect.MultimapBuilder.ListMultimapBuilder&lt;K0,java.lang.Object&gt; arrayListValues()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingMultimap boolean put(K, V) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMap com.google.common.collect.ImmutableMap&lt;K,V&gt; of(K, V, K, V, K, V, K, V) 4'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap.Builder com.google.common.collect.ImmutableListMultimap.Builder&lt;K,V&gt; put(K, V) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap java.util.SortedMap tailMap(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Collections2 java.util.Collection&lt;java.util.List&lt;E&gt;&gt; orderedPermutations(java.lang.Iterable&lt;E&gt;, java.util.Comparator&lt;? super E&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterators java.util.Iterator&lt;T&gt; consumingIterator(java.util.Iterator&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap.Builder com.google.common.collect.ImmutableSortedMap.Builder&lt;K,V&gt; putAll(java.lang.Iterable&lt;? extends java.util.Map.Entry&lt;? extends K,? extends V&gt;&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap.Builder com.google.common.collect.ImmutableMultimap.Builder putAll(com.google.common.collect.Multimap) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Ordering com.google.common.collect.Ordering&lt;T&gt; from(java.util.Comparator&lt;T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.EvictingQueue boolean contains(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ArrayTable V put(R, C, V) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EnumBiMap java.util.Set keySet()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSet java.util.Iterator iterator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableTable java.util.Set cellSet()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Sets java.util.HashSet&lt;E&gt; newHashSetWithExpectedSize(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Sets java.util.NavigableSet&lt;E&gt; unmodifiableNavigableSet(java.util.NavigableSet&lt;E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap.Builder com.google.common.collect.ImmutableListMultimap.Builder&lt;K,V&gt; put(K, V) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableRangeMap void remove(com.google.common.collect.Range&lt;K&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps java.util.SortedMap&lt;K,V2&gt; transformEntries(java.util.SortedMap&lt;K,V1&gt;, com.google.common.collect.Maps.EntryTransformer&lt;? super K,? super V1,V2&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.EnumBiMap java.util.Set values()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Collections2 java.util.Collection&lt;java.util.List&lt;E&gt;&gt; orderedPermutations(java.lang.Iterable&lt;E&gt;, java.util.Comparator&lt;? super E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Ordering com.google.common.collect.Ordering&lt;C&gt; natural()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap com.google.common.collect.ImmutableCollection&lt;V&gt; replaceValues(K, java.lang.Iterable&lt;? extends V&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ComparisonChain com.google.common.collect.ComparisonChain compare(T, T, java.util.Comparator&lt;T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.FluentIterable com.google.common.base.Optional&lt;E&gt; firstMatch(com.google.common.base.Predicate&lt;? super E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMap com.google.common.collect.ImmutableMap&lt;K,V&gt; of(K, V, K, V, K, V, K, V) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingTable void putAll(com.google.common.collect.Table&lt;? extends R,? extends C,? extends V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultiset com.google.common.collect.ImmutableMultiset.Builder&lt;E&gt; builder()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.SortedLists.KeyPresentBehavior LAST_PRESENT'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableList.Builder com.google.common.collect.ImmutableCollection.Builder add(java.lang.Object[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ArrayTable V put(R, C, V) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingCollection boolean retainAll(java.util.Collection&lt;?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap.Builder com.google.common.collect.ImmutableListMultimap.Builder&lt;K,V&gt; orderKeysBy(java.util.Comparator&lt;? super K&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.TreeBasedTable java.util.Map row(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multimaps com.google.common.collect.SetMultimap&lt;K,V&gt; filterKeys(com.google.common.collect.SetMultimap&lt;K,V&gt;, com.google.common.base.Predicate&lt;? super K&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.TreeBasedTable java.util.Map column(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableList com.google.common.collect.ImmutableList&lt;E&gt; of(E, E, E)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet com.google.common.collect.ImmutableSortedSet&lt;E&gt; subSet(E, boolean, E, boolean) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMap com.google.common.collect.ImmutableMap&lt;K,V&gt; of(K, V, K, V, K, V, K, V) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ContiguousSet com.google.common.collect.ImmutableSortedSet headSet(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.LinkedListMultimap java.util.List&lt;V&gt; get(K) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ArrayTable V put(R, C, V) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap com.google.common.collect.ImmutableSortedMap&lt;K,V&gt; tailMap(K) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterators java.lang.String toString(java.util.Iterator&lt;?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Sets java.util.EnumSet&lt;E&gt; complementOf(java.util.Collection&lt;E&gt;, java.lang.Class&lt;E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMap com.google.common.collect.ImmutableMap&lt;K,V&gt; of(K, V) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.EnumMultiset boolean retainAll(java.util.Collection) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableList.Builder com.google.common.collect.ImmutableCollection.Builder addAll(java.lang.Iterable) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Sets java.util.concurrent.CopyOnWriteArraySet&lt;E&gt; newCopyOnWriteArraySet()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingMultimap boolean put(K, V) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multisets com.google.common.collect.Multiset&lt;E&gt; union(com.google.common.collect.Multiset&lt;? extends E&gt;, com.google.common.collect.Multiset&lt;? extends E&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ObjectArrays T[] concat(T[], T)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.MapConstraints com.google.common.collect.Multimap&lt;K,V&gt; constrainedMultimap(com.google.common.collect.Multimap&lt;K,V&gt;, com.google.common.collect.MapConstraint&lt;? super K,? super V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.RangeMap com.google.common.collect.RangeMap&lt;K,V&gt; subRangeMap(com.google.common.collect.Range&lt;K&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Table void putAll(com.google.common.collect.Table&lt;? extends R,? extends C,? extends V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps com.google.common.collect.SetMultimap&lt;K,V&gt; filterKeys(com.google.common.collect.SetMultimap&lt;K,V&gt;, com.google.common.base.Predicate&lt;? super K&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Ordering java.util.List&lt;E&gt; greatestOf(java.lang.Iterable&lt;E&gt;, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ContiguousSet com.google.common.collect.Range&lt;C&gt; range()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMap com.google.common.collect.ImmutableMap&lt;K,V&gt; of(K, V, K, V, K, V, K, V) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.TreeRangeMap com.google.common.collect.Range&lt;K&gt; span()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.MutableClassToInstanceMap java.util.Set entrySet()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableBiMap com.google.common.collect.ImmutableBiMap&lt;K,V&gt; of(K, V) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Ordering com.google.common.collect.Ordering&lt;T&gt; compound(java.lang.Iterable&lt;? extends java.util.Comparator&lt;? super T&gt;&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Lists java.util.List&lt;E&gt; asList(E, E[]) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap com.google.common.collect.ImmutableSetMultimap.Builder&lt;K,V&gt; builder()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingSortedSet java.util.SortedSet&lt;E&gt; headSet(E) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMap com.google.common.collect.ImmutableMap&lt;K,V&gt; of()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableRangeSet com.google.common.collect.ImmutableRangeSet&lt;C&gt; subRangeSet(com.google.common.collect.Range&lt;C&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.MapConstraints com.google.common.collect.SetMultimap&lt;K,V&gt; constrainedSetMultimap(com.google.common.collect.SetMultimap&lt;K,V&gt;, com.google.common.collect.MapConstraint&lt;? super K,? super V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multimaps com.google.common.collect.Multimap&lt;K,V&gt; unmodifiableMultimap(com.google.common.collect.ImmutableMultimap&lt;K,V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableCollection.Builder com.google.common.collect.ImmutableCollection&lt;E&gt; build()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMap com.google.common.collect.ImmutableMap&lt;K,V&gt; of(K, V, K, V, K, V, K, V) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingMultiset java.util.Set&lt;com.google.common.collect.Multiset.Entry&lt;E&gt;&gt; entrySet()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Lists com.google.common.collect.ImmutableList&lt;java.lang.Character&gt; charactersOf(java.lang.String)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Maps java.util.SortedMap&lt;K,V&gt; asMap(java.util.SortedSet&lt;K&gt;, com.google.common.base.Function&lt;? super K,V&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.EvictingQueue boolean add(E) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Range com.google.common.collect.Range&lt;C&gt; open(C, C) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultiset.Builder com.google.common.collect.ImmutableMultiset.Builder&lt;E&gt; addAll(java.util.Iterator&lt;? extends E&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Tables com.google.common.collect.Table&lt;R,C,V2&gt; transformValues(com.google.common.collect.Table&lt;R,C,V1&gt;, com.google.common.base.Function&lt;? super V1,V2&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableBiMap com.google.common.collect.ImmutableBiMap&lt;K,V&gt; of(K, V) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset com.google.common.collect.ImmutableSortedMultiset&lt;E&gt; of(E)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableClassToInstanceMap.Builder com.google.common.collect.ImmutableClassToInstanceMap.Builder&lt;B&gt; put(java.lang.Class&lt;T&gt;, T) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset.Builder com.google.common.collect.ImmutableSortedMultiset.Builder&lt;E&gt; add(E...) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingSortedSetMultimap java.util.Collection replaceValues(java.lang.Object, java.lang.Iterable) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Sets java.util.EnumSet&lt;E&gt; newEnumSet(java.lang.Iterable&lt;E&gt;, java.lang.Class&lt;E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingCollection boolean containsAll(java.util.Collection&lt;?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableList com.google.common.collect.ImmutableList&lt;E&gt; of(E)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Maps java.util.SortedMap&lt;K,V&gt; asMap(java.util.SortedSet&lt;K&gt;, com.google.common.base.Function&lt;? super K,V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multimaps com.google.common.collect.Multimap&lt;K,V2&gt; transformEntries(com.google.common.collect.Multimap&lt;K,V1&gt;, com.google.common.collect.Maps.EntryTransformer&lt;? super K,? super V1,V2&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multimaps com.google.common.collect.ListMultimap&lt;K,V&gt; synchronizedListMultimap(com.google.common.collect.ListMultimap&lt;K,V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Range com.google.common.collect.Range&lt;C&gt; open(C, C) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.RangeSet com.google.common.collect.RangeSet&lt;C&gt; subRangeSet(com.google.common.collect.Range&lt;C&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap.Builder com.google.common.collect.ImmutableMultimap.Builder&lt;K,V&gt; orderKeysBy(java.util.Comparator&lt;? super K&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Tables com.google.common.collect.Table&lt;R,C,V2&gt; transformValues(com.google.common.collect.Table&lt;R,C,V1&gt;, com.google.common.base.Function&lt;? super V1,V2&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Maps java.util.HashMap&lt;K,V&gt; newHashMap(java.util.Map&lt;? extends K,? extends V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingMap V put(K, V) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap java.util.Set get(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Sets java.util.HashSet&lt;E&gt; newHashSet(java.lang.Iterable&lt;? extends E&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.HashBiMap com.google.common.collect.HashBiMap&lt;K,V&gt; create(java.util.Map&lt;? extends K,? extends V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableList boolean contains(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap.Builder com.google.common.collect.ImmutableMultimap.Builder put(java.lang.Object, java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.HashMultiset boolean contains(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset.Builder com.google.common.collect.ImmutableMultiset.Builder add(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.HashBasedTable java.util.Set cellSet()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet java.util.SortedSet tailSet(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableTable com.google.common.collect.ImmutableTable.Builder&lt;R,C,V&gt; builder()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multisets com.google.common.collect.Multiset&lt;E&gt; intersection(com.google.common.collect.Multiset&lt;E&gt;, com.google.common.collect.Multiset&lt;?&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Ordering boolean isOrdered(java.lang.Iterable&lt;? extends T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterables java.lang.Iterable&lt;T&gt; unmodifiableIterable(java.lang.Iterable&lt;T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap java.util.Collection values()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.MapConstraints com.google.common.collect.BiMap&lt;K,V&gt; constrainedBiMap(com.google.common.collect.BiMap&lt;K,V&gt;, com.google.common.collect.MapConstraint&lt;? super K,? super V&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Maps java.util.concurrent.ConcurrentMap&lt;K,V&gt; newConcurrentMap()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap.Builder com.google.common.collect.ImmutableSetMultimap.Builder&lt;K,V&gt; put(K, V)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.EnumMultiset java.util.Iterator iterator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableRangeMap java.util.Map.Entry&lt;com.google.common.collect.Range&lt;K&gt;,V&gt; getEntry(K) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.EnumBiMap com.google.common.collect.EnumBiMap&lt;K,V&gt; create(java.util.Map&lt;K,V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingMap V put(K, V) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.FluentIterable com.google.common.collect.FluentIterable&lt;E&gt; from(java.lang.Iterable&lt;E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multimaps com.google.common.collect.ListMultimap&lt;K,V&gt; unmodifiableListMultimap(com.google.common.collect.ImmutableListMultimap&lt;K,V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.EnumHashBiMap com.google.common.collect.EnumHashBiMap&lt;K,V&gt; create(java.util.Map&lt;K,? extends V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.FluentIterable C copyInto(C) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.TreeTraverser com.google.common.collect.FluentIterable&lt;T&gt; breadthFirstTraversal(T)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset com.google.common.collect.ImmutableSortedMultiset&lt;E&gt; of()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap java.util.Map.Entry&lt;K,V&gt; floorEntry(K) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.MapConstraints com.google.common.collect.BiMap&lt;K,V&gt; constrainedBiMap(com.google.common.collect.BiMap&lt;K,V&gt;, com.google.common.collect.MapConstraint&lt;? super K,? super V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableRangeSet void removeAll(com.google.common.collect.RangeSet&lt;C&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap java.util.Set entries()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap com.google.common.collect.ImmutableSet&lt;java.util.Map.Entry&lt;K,V&gt;&gt; entries()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap.Builder com.google.common.collect.ImmutableMultimap.Builder&lt;K,V&gt; put(K, V)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.HashMultimap java.util.Set get(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap.Builder com.google.common.collect.ImmutableMultimap.Builder putAll(java.lang.Object, java.lang.Iterable)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset.Builder com.google.common.collect.ImmutableMultiset.Builder addCopies(java.lang.Object, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableTable java.util.Map row(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multimaps com.google.common.collect.ImmutableListMultimap&lt;K,V&gt; index(java.lang.Iterable&lt;V&gt;, com.google.common.base.Function&lt;? super V,K&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterators T get(java.util.Iterator&lt;? extends T&gt;, int, T) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Sets java.util.Set&lt;E&gt; filter(java.util.Set&lt;E&gt;, com.google.common.base.Predicate&lt;? super E&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multimaps com.google.common.collect.Multimap&lt;K,V&gt; unmodifiableMultimap(com.google.common.collect.Multimap&lt;K,V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.RangeSet void removeAll(com.google.common.collect.RangeSet&lt;C&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ContiguousSet com.google.common.collect.ImmutableSortedSet subSet(java.lang.Object, java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Sets java.util.Set&lt;java.util.Set&lt;E&gt;&gt; powerSet(java.util.Set&lt;E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Lists java.util.List&lt;T&gt; reverse(java.util.List&lt;T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableTable.Builder com.google.common.collect.ImmutableTable.Builder&lt;R,C,V&gt; put(R, C, V)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset com.google.common.collect.SortedMultiset descendingMultiset()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap java.util.NavigableMap headMap(java.lang.Object, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multisets boolean removeOccurrences(com.google.common.collect.Multiset&lt;?&gt;, java.lang.Iterable&lt;?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.TreeMultimap boolean putAll(java.lang.Object, java.lang.Iterable) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterators int frequency(java.util.Iterator&lt;?&gt;, java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Maps java.util.NavigableMap&lt;K,V&gt; asMap(java.util.NavigableSet&lt;K&gt;, com.google.common.base.Function&lt;? super K,V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.BoundType CLOSED'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingMultiset boolean setCount(E, int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps com.google.common.collect.ImmutableListMultimap&lt;K,V&gt; index(java.lang.Iterable&lt;V&gt;, com.google.common.base.Function&lt;? super V,K&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.HashMultimap boolean putAll(com.google.common.collect.Multimap) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps com.google.common.collect.ImmutableMap&lt;K,V&gt; uniqueIndex(java.util.Iterator&lt;V&gt;, com.google.common.base.Function&lt;? super V,K&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap com.google.common.collect.ImmutableListMultimap.Builder&lt;K,V&gt; builder()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap java.util.SortedMap headMap(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.MapMaker com.google.common.collect.MapMaker weakKeys()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Sets java.util.SortedSet&lt;E&gt; filter(java.util.SortedSet&lt;E&gt;, com.google.common.base.Predicate&lt;? super E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableRangeSet com.google.common.collect.ImmutableRangeSet.Builder&lt;C&gt; builder()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Sets java.util.TreeSet&lt;E&gt; newTreeSet(java.lang.Iterable&lt;? extends E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.TreeMultimap boolean putAll(java.lang.Object, java.lang.Iterable) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterators com.google.common.base.Optional&lt;T&gt; tryFind(java.util.Iterator&lt;T&gt;, com.google.common.base.Predicate&lt;? super T&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Ordering com.google.common.collect.Ordering&lt;S&gt; reverse()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap.Builder com.google.common.collect.ImmutableSetMultimap.Builder&lt;K,V&gt; putAll(K, V...) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multisets boolean removeOccurrences(com.google.common.collect.Multiset&lt;?&gt;, java.lang.Iterable&lt;?&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.FluentIterable com.google.common.collect.FluentIterable&lt;E&gt; filter(com.google.common.base.Predicate&lt;? super E&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.MutableClassToInstanceMap com.google.common.collect.MutableClassToInstanceMap&lt;B&gt; create(java.util.Map&lt;java.lang.Class&lt;? extends B&gt;,B&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap com.google.common.collect.ImmutableSetMultimap&lt;K,V&gt; of(K, V, K, V, K, V)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ConcurrentHashMultiset com.google.common.collect.ConcurrentHashMultiset&lt;E&gt; create(java.lang.Iterable&lt;? extends E&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Maps com.google.common.collect.ImmutableMap&lt;K,V&gt; uniqueIndex(java.util.Iterator&lt;V&gt;, com.google.common.base.Function&lt;? super V,K&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap com.google.common.collect.ImmutableSetMultimap&lt;K,V&gt; of(K, V) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Sets java.util.TreeSet&lt;E&gt; newTreeSet(java.lang.Iterable&lt;? extends E&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.HashMultiset boolean addAll(java.util.Collection) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.FluentIterable com.google.common.collect.FluentIterable&lt;E&gt; limit(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableTable com.google.common.collect.ImmutableMap&lt;R,V&gt; column(C)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.LinkedHashMultimap boolean putAll(java.lang.Object, java.lang.Iterable) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps com.google.common.collect.Multimap&lt;K,V&gt; unmodifiableMultimap(com.google.common.collect.Multimap&lt;K,V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap com.google.common.collect.ImmutableSetMultimap&lt;K,V&gt; copyOf(java.lang.Iterable&lt;? extends java.util.Map.Entry&lt;? extends K,? extends V&gt;&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Sets java.util.HashSet&lt;E&gt; newHashSet()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableBiMap com.google.common.collect.ImmutableBiMap&lt;K,V&gt; of(K, V, K, V)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Queues java.util.concurrent.LinkedBlockingQueue&lt;E&gt; newLinkedBlockingQueue(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet.Builder com.google.common.collect.ImmutableCollection.ArrayBasedBuilder add(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.TreeRangeSet boolean encloses(com.google.common.collect.Range&lt;C&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.MultimapBuilder.SetMultimapBuilder com.google.common.collect.Multimap build()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingTable java.util.Map&lt;C,V&gt; row(R) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultiset com.google.common.collect.ImmutableMultiset&lt;E&gt; copyOf(java.util.Iterator&lt;? extends E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap com.google.common.collect.ImmutableSetMultimap&lt;K,V&gt; of(K, V) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterables java.lang.Iterable&lt;T&gt; limit(java.lang.Iterable&lt;T&gt;, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingMultiset int add(E, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedHashMultimap java.util.Set&lt;V&gt; replaceValues(K, java.lang.Iterable&lt;? extends V&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Lists java.util.List&lt;T&gt; reverse(java.util.List&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableCollection.Builder com.google.common.collect.ImmutableCollection.Builder&lt;E&gt; addAll(java.lang.Iterable&lt;? extends E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.LinkedHashMultimap boolean putAll(java.lang.Object, java.lang.Iterable) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap com.google.common.collect.ImmutableSortedMap&lt;K,V&gt; headMap(K, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet.Builder com.google.common.collect.ImmutableCollection build()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterables java.lang.String toString(java.lang.Iterable&lt;?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Queues java.util.concurrent.PriorityBlockingQueue&lt;E&gt; newPriorityBlockingQueue()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap com.google.common.collect.ImmutableListMultimap&lt;K,V&gt; copyOf(java.lang.Iterable&lt;? extends java.util.Map.Entry&lt;? extends K,? extends V&gt;&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Range boolean containsAll(java.lang.Iterable&lt;? extends C&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultiset com.google.common.collect.UnmodifiableIterator&lt;E&gt; iterator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset.Builder com.google.common.collect.ImmutableCollection.Builder addAll(java.lang.Iterable) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap java.util.SortedMap subMap(java.lang.Object, java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multimaps com.google.common.collect.SetMultimap&lt;K,V&gt; synchronizedSetMultimap(com.google.common.collect.SetMultimap&lt;K,V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingMultimap boolean putAll(K, java.lang.Iterable&lt;? extends V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset.Builder Builder(java.util.Comparator&lt;? super E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableTable.Builder com.google.common.collect.ImmutableTable.Builder&lt;R,C,V&gt; put(com.google.common.collect.Table.Cell&lt;? extends R,? extends C,? extends V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterables boolean all(java.lang.Iterable&lt;T&gt;, com.google.common.base.Predicate&lt;? super T&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Sets java.util.NavigableSet&lt;E&gt; filter(java.util.NavigableSet&lt;E&gt;, com.google.common.base.Predicate&lt;? super E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.EnumMultiset com.google.common.collect.EnumMultiset&lt;E&gt; create(java.lang.Iterable&lt;E&gt;, java.lang.Class&lt;E&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingNavigableSet java.util.NavigableSet&lt;E&gt; subSet(E, boolean, E, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedHashMultiset com.google.common.collect.LinkedHashMultiset&lt;E&gt; create(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.HashMultiset com.google.common.collect.HashMultiset&lt;E&gt; create(java.lang.Iterable&lt;? extends E&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.TreeBasedTable java.lang.Object put(java.lang.Object, java.lang.Object, java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.FluentIterable com.google.common.collect.ImmutableSortedSet&lt;E&gt; toSortedSet(java.util.Comparator&lt;? super E&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ArrayTable java.util.Map&lt;R,V&gt; column(C) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultiset.Builder com.google.common.collect.ImmutableMultiset.Builder&lt;E&gt; add(E)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ConcurrentHashMultiset boolean contains(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMap com.google.common.collect.ImmutableMap&lt;K,V&gt; of(K, V, K, V, K, V, K, V) 7'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Range com.google.common.collect.Range&lt;C&gt; lessThan(C) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.MultimapBuilder.MultimapBuilderWithKeys com.google.common.collect.MultimapBuilder.ListMultimapBuilder&lt;K0,java.lang.Object&gt; linkedListValues()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap com.google.common.collect.ImmutableSortedMap&lt;K,V&gt; of()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.MultimapBuilder.ListMultimapBuilder com.google.common.collect.ListMultimap&lt;K,V&gt; build(com.google.common.collect.Multimap&lt;? extends K,? extends V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingMultimap boolean putAll(K, java.lang.Iterable&lt;? extends V&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Ordering com.google.common.collect.Ordering&lt;T&gt; from(com.google.common.collect.Ordering&lt;T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterables boolean all(java.lang.Iterable&lt;T&gt;, com.google.common.base.Predicate&lt;? super T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterables java.lang.Iterable&lt;T&gt; transform(java.lang.Iterable&lt;F&gt;, com.google.common.base.Function&lt;? super F,? extends T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Sets java.util.NavigableSet&lt;E&gt; filter(java.util.NavigableSet&lt;E&gt;, com.google.common.base.Predicate&lt;? super E&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet.Builder Builder(java.util.Comparator&lt;? super E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Queues java.util.concurrent.PriorityBlockingQueue&lt;E&gt; newPriorityBlockingQueue(java.lang.Iterable&lt;? extends E&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableList com.google.common.collect.ImmutableList&lt;E&gt; subList(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multimaps java.util.Map&lt;K,java.util.Collection&lt;V&gt;&gt; asMap(com.google.common.collect.Multimap&lt;K,V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMap com.google.common.collect.ImmutableMap&lt;K,V&gt; of(K, V, K, V, K, V, K, V) 6'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ObjectArrays T[] concat(T[], T[], java.lang.Class&lt;T&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap com.google.common.collect.Multiset keys()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap java.util.List replaceValues(java.lang.Object, java.lang.Iterable) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterables java.lang.Iterable&lt;T&gt; transform(java.lang.Iterable&lt;F&gt;, com.google.common.base.Function&lt;? super F,? extends T&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Sets java.util.SortedSet&lt;E&gt; filter(java.util.SortedSet&lt;E&gt;, com.google.common.base.Predicate&lt;? super E&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Sets java.util.Set&lt;java.util.Set&lt;E&gt;&gt; powerSet(java.util.Set&lt;E&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterators com.google.common.base.Optional&lt;T&gt; tryFind(java.util.Iterator&lt;T&gt;, com.google.common.base.Predicate&lt;? super T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterables java.lang.Iterable&lt;T&gt; skip(java.lang.Iterable&lt;T&gt;, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableRangeMap com.google.common.collect.RangeMap subRangeMap(com.google.common.collect.Range) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.TreeBasedTable java.lang.Object put(java.lang.Object, java.lang.Object, java.lang.Object) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableRangeMap.Builder com.google.common.collect.ImmutableRangeMap.Builder&lt;K,V&gt; put(com.google.common.collect.Range&lt;K&gt;, V)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ObjectArrays T[] concat(T[], T[], java.lang.Class&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMap com.google.common.collect.ImmutableMap&lt;K,V&gt; of(K, V, K, V, K, V, K, V) 5'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset.Builder com.google.common.collect.ImmutableMultiset.Builder addCopies(java.lang.Object, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multimaps com.google.common.collect.SortedSetMultimap&lt;K,V&gt; unmodifiableSortedSetMultimap(com.google.common.collect.SortedSetMultimap&lt;K,V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap com.google.common.collect.ImmutableSet&lt;K&gt; keySet()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableBiMap.Builder com.google.common.collect.ImmutableMap.Builder putAll(java.lang.Iterable)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableCollection.Builder com.google.common.collect.ImmutableCollection.Builder&lt;E&gt; add(E...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ContiguousSet com.google.common.collect.ImmutableSortedSet subSet(java.lang.Object, java.lang.Object) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset.Builder com.google.common.collect.ImmutableCollection.Builder addAll(java.lang.Iterable)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.FluentIterable java.lang.String join(com.google.common.base.Joiner) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Sets java.util.HashSet&lt;E&gt; newHashSet(java.util.Iterator&lt;? extends E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ArrayTable java.util.Map&lt;R,V&gt; column(C)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.SortedLists.KeyPresentBehavior FIRST_PRESENT'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableList.Builder com.google.common.collect.ImmutableList.Builder&lt;E&gt; add(E)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap.Builder com.google.common.collect.ImmutableMultimap.Builder put(java.util.Map.Entry) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.RangeSet com.google.common.collect.RangeSet&lt;C&gt; complement()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeBasedTable java.lang.Object put(java.lang.Object, java.lang.Object, java.lang.Object) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSet.Builder com.google.common.collect.ImmutableSet.Builder&lt;E&gt; add(E...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.MultimapBuilder com.google.common.collect.Multimap&lt;K,V&gt; build(com.google.common.collect.Multimap&lt;? extends K,? extends V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap java.util.SortedMap subMap(java.lang.Object, java.lang.Object) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.MultimapBuilder.SortedSetMultimapBuilder com.google.common.collect.SetMultimap build(com.google.common.collect.Multimap)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Maps java.util.NavigableMap&lt;K,V&gt; filterValues(java.util.NavigableMap&lt;K,V&gt;, com.google.common.base.Predicate&lt;? super V&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ContiguousSet java.util.NavigableSet headSet(java.lang.Object, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterables java.lang.Iterable&lt;E&gt; unmodifiableIterable(com.google.common.collect.ImmutableCollection&lt;E&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multisets com.google.common.collect.Multiset&lt;E&gt; difference(com.google.common.collect.Multiset&lt;E&gt;, com.google.common.collect.Multiset&lt;?&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ConcurrentHashMultiset boolean addAll(java.util.Collection) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap.Builder com.google.common.collect.ImmutableMultimap.Builder orderValuesBy(java.util.Comparator)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.RangeMap java.util.Map&lt;com.google.common.collect.Range&lt;K&gt;,V&gt; asMapOfRanges()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap.Builder com.google.common.collect.ImmutableMap.Builder orderEntriesByValue(java.util.Comparator) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MultimapBuilder com.google.common.collect.MultimapBuilder.MultimapBuilderWithKeys&lt;java.lang.Comparable&gt; treeKeys()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ArrayListMultimap java.util.List replaceValues(java.lang.Object, java.lang.Iterable) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableList java.util.ListIterator listIterator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Lists java.util.LinkedList&lt;E&gt; newLinkedList(java.lang.Iterable&lt;? extends E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.MultimapBuilder.SortedSetMultimapBuilder com.google.common.collect.SortedSetMultimap&lt;K,V&gt; build(com.google.common.collect.Multimap&lt;? extends K,? extends V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingSet java.util.Collection delegate()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableTable com.google.common.collect.ImmutableSet&lt;C&gt; columnKeySet()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableTable com.google.common.collect.ImmutableTable&lt;R,C,V&gt; of(R, C, V) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap java.util.Collection entries()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset com.google.common.collect.ImmutableSortedMultiset&lt;E&gt; of(E, E, E, E, E)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Lists java.util.List&lt;T&gt; transform(java.util.List&lt;F&gt;, com.google.common.base.Function&lt;? super F,? extends T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableTable com.google.common.collect.ImmutableTable&lt;R,C,V&gt; of(R, C, V)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Maps java.util.TreeMap&lt;K,V&gt; newTreeMap()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap com.google.common.collect.ImmutableCollection get(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingMapEntry java.util.Map.Entry&lt;K,V&gt; delegate()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap com.google.common.collect.ImmutableSetMultimap&lt;K,V&gt; copyOf(com.google.common.collect.Multimap&lt;? extends K,? extends V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Ordering java.util.List&lt;E&gt; sortedCopy(java.lang.Iterable&lt;E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.HashBasedTable com.google.common.collect.HashBasedTable&lt;R,C,V&gt; create(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ComparisonChain com.google.common.collect.ComparisonChain compare(java.lang.Boolean, java.lang.Boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multimaps com.google.common.collect.Multimap&lt;K,V&gt; synchronizedMultimap(com.google.common.collect.Multimap&lt;K,V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Interner E intern(E)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultiset.Builder com.google.common.collect.ImmutableCollection.Builder addAll(java.util.Iterator) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multisets boolean removeOccurrences(com.google.common.collect.Multiset&lt;?&gt;, com.google.common.collect.Multiset&lt;?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultiset com.google.common.collect.ImmutableMultiset&lt;E&gt; copyOf(java.lang.Iterable&lt;? extends E&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Ordering com.google.common.collect.Ordering&lt;S&gt; nullsLast()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableList.Builder com.google.common.collect.ImmutableList.Builder&lt;E&gt; add(E) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Tables com.google.common.collect.RowSortedTable&lt;R,C,V&gt; unmodifiableRowSortedTable(com.google.common.collect.RowSortedTable&lt;R,? extends C,? extends V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableTable com.google.common.collect.ImmutableTable&lt;R,C,V&gt; of(R, C, V) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.SetMultimap java.util.Set&lt;V&gt; replaceValues(K, java.lang.Iterable&lt;? extends V&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeTraverser com.google.common.collect.FluentIterable&lt;T&gt; preOrderTraversal(T)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingCollection T[] toArray(T[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ContiguousSet java.lang.String toString()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.FluentIterable com.google.common.collect.FluentIterable&lt;E&gt; from(com.google.common.collect.FluentIterable&lt;E&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet.Builder com.google.common.collect.ImmutableCollection.Builder addAll(java.lang.Iterable)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ComparisonChain com.google.common.collect.ComparisonChain compare(java.lang.Boolean, java.lang.Boolean) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.LinkedHashMultimap com.google.common.collect.LinkedHashMultimap&lt;K,V&gt; create()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.TreeMultiset com.google.common.collect.TreeMultiset&lt;E&gt; create(java.util.Comparator&lt;? super E&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingNavigableMap.StandardNavigableKeySet StandardNavigableKeySet(com.google.common.collect.ForwardingNavigableMap) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterators java.util.Iterator&lt;T&gt; cycle(T...) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.TreeRangeSet boolean enclosesAll(com.google.common.collect.RangeSet) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap java.util.SortedMap subMap(java.lang.Object, java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multisets boolean removeOccurrences(com.google.common.collect.Multiset&lt;?&gt;, com.google.common.collect.Multiset&lt;?&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ContiguousSet java.util.NavigableSet subSet(java.lang.Object, boolean, java.lang.Object, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSet com.google.common.collect.ImmutableSet&lt;E&gt; copyOf(java.util.Iterator&lt;? extends E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableTable com.google.common.collect.ImmutableTable&lt;R,C,V&gt; of(R, C, V) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultiset int setCount(E, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedListMultimap java.util.List&lt;V&gt; replaceValues(K, java.lang.Iterable&lt;? extends V&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset com.google.common.collect.ImmutableSortedSet&lt;E&gt; elementSet()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Sets java.util.HashSet&lt;E&gt; newHashSet(java.util.Iterator&lt;? extends E&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.TreeRangeMap com.google.common.collect.TreeRangeMap&lt;K,V&gt; create()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap.Builder com.google.common.collect.ImmutableMultimap.Builder putAll(java.lang.Iterable)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Ordering boolean isStrictlyOrdered(java.lang.Iterable&lt;? extends T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.HashMultiset java.util.Iterator iterator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Range boolean apply(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.RangeMap java.util.Map&lt;com.google.common.collect.Range&lt;K&gt;,V&gt; asDescendingMapOfRanges()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EnumMultiset boolean removeAll(java.util.Collection) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap.Builder com.google.common.collect.ImmutableMultimap.Builder putAll(java.lang.Object, java.lang.Iterable) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Maps com.google.common.collect.ImmutableMap&lt;K,V&gt; uniqueIndex(java.util.Iterator&lt;V&gt;, com.google.common.base.Function&lt;? super V,K&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multimaps com.google.common.collect.SetMultimap&lt;K,V&gt; unmodifiableSetMultimap(com.google.common.collect.ImmutableSetMultimap&lt;K,V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Range com.google.common.collect.Range&lt;C&gt; range(C, com.google.common.collect.BoundType, C, com.google.common.collect.BoundType) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multiset boolean add(E) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeRangeSet void addAll(com.google.common.collect.RangeSet) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.SortedMultiset com.google.common.collect.SortedMultiset&lt;E&gt; headMultiset(E, com.google.common.collect.BoundType)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableRangeSet.Builder com.google.common.collect.ImmutableRangeSet.Builder&lt;C&gt; addAll(com.google.common.collect.RangeSet&lt;C&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Sets com.google.common.collect.Sets.SetView&lt;E&gt; difference(java.util.Set&lt;E&gt;, java.util.Set&lt;?&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset com.google.common.collect.SortedMultiset subMultiset(java.lang.Object, com.google.common.collect.BoundType, java.lang.Object, com.google.common.collect.BoundType) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MinMaxPriorityQueue.Builder com.google.common.collect.MinMaxPriorityQueue.Builder&lt;B&gt; expectedSize(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ContiguousSet java.util.NavigableSet subSet(java.lang.Object, boolean, java.lang.Object, boolean) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableCollection.Builder com.google.common.collect.ImmutableCollection.Builder&lt;E&gt; add(E)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeRangeSet com.google.common.collect.TreeRangeSet&lt;C&gt; create()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet java.util.SortedSet headSet(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap.Builder com.google.common.collect.ImmutableMultimap.Builder putAll(java.lang.Object, java.lang.Iterable) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterators boolean removeIf(java.util.Iterator&lt;T&gt;, com.google.common.base.Predicate&lt;? super T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.TreeMultiset int add(E, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableClassToInstanceMap T getInstance(java.lang.Class&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSet.Builder com.google.common.collect.ImmutableCollection.Builder addAll(java.util.Iterator) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Range com.google.common.collect.Range&lt;C&gt; range(C, com.google.common.collect.BoundType, C, com.google.common.collect.BoundType) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Sets com.google.common.collect.Sets.SetView&lt;E&gt; difference(java.util.Set&lt;E&gt;, java.util.Set&lt;?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Ordering com.google.common.collect.Ordering&lt;T&gt; from(com.google.common.collect.Ordering&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.EnumMultiset boolean contains(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingCollection boolean removeAll(java.util.Collection&lt;?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.HashMultimap com.google.common.collect.HashMultimap&lt;K,V&gt; create(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.RangeMap void remove(com.google.common.collect.Range&lt;K&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RangeSet void remove(com.google.common.collect.Range&lt;C&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableRangeMap.Builder com.google.common.collect.ImmutableRangeMap.Builder&lt;K,V&gt; putAll(com.google.common.collect.RangeMap&lt;K,? extends V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Queues java.util.concurrent.LinkedBlockingDeque&lt;E&gt; newLinkedBlockingDeque(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.RangeMap void putAll(com.google.common.collect.RangeMap&lt;K,V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MinMaxPriorityQueue com.google.common.collect.MinMaxPriorityQueue.Builder&lt;B&gt; orderedBy(java.util.Comparator&lt;B&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterators T get(java.util.Iterator&lt;T&gt;, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterators boolean removeIf(java.util.Iterator&lt;T&gt;, com.google.common.base.Predicate&lt;? super T&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap.Builder com.google.common.collect.ImmutableSetMultimap.Builder&lt;K,V&gt; put(java.util.Map.Entry&lt;? extends K,? extends V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.EnumMultiset boolean addAll(java.util.Collection) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ContiguousSet com.google.common.collect.ContiguousSet&lt;C&gt; headSet(C) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet.Builder com.google.common.collect.ImmutableSortedSet.Builder&lt;E&gt; addAll(java.lang.Iterable&lt;? extends E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multisets boolean containsOccurrences(com.google.common.collect.Multiset&lt;?&gt;, com.google.common.collect.Multiset&lt;?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Range com.google.common.collect.Range&lt;C&gt; range(C, com.google.common.collect.BoundType, C, com.google.common.collect.BoundType) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap.Builder com.google.common.collect.ImmutableSetMultimap&lt;K,V&gt; build()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multimaps com.google.common.collect.SetMultimap&lt;K,V&gt; unmodifiableSetMultimap(com.google.common.collect.ImmutableSetMultimap&lt;K,V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Sets java.util.TreeSet&lt;E&gt; newTreeSet(java.util.Comparator&lt;? super E&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableRangeSet com.google.common.collect.ImmutableRangeSet&lt;C&gt; copyOf(com.google.common.collect.RangeSet&lt;C&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableClassToInstanceMap com.google.common.collect.ImmutableClassToInstanceMap&lt;B&gt; of(java.lang.Class&lt;T&gt;, T)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.LinkedHashMultiset com.google.common.collect.LinkedHashMultiset&lt;E&gt; create()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.FluentIterable com.google.common.base.Optional&lt;E&gt; first()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingObject java.lang.Object delegate()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableList com.google.common.collect.ImmutableList&lt;E&gt; of()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ArrayListMultimap com.google.common.collect.ArrayListMultimap&lt;K,V&gt; create(com.google.common.collect.Multimap&lt;? extends K,? extends V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap com.google.common.collect.ImmutableMultimap.Builder&lt;K,V&gt; builder()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset com.google.common.collect.ImmutableSortedMultiset&lt;E&gt; headMultiset(E, com.google.common.collect.BoundType) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.HashMultiset boolean setCount(java.lang.Object, int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap com.google.common.collect.ImmutableSetMultimap&lt;K,V&gt; of(K, V)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet com.google.common.collect.ImmutableSortedSet&lt;E&gt; descendingSet()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Maps java.util.NavigableMap&lt;K,V&gt; filterValues(java.util.NavigableMap&lt;K,V&gt;, com.google.common.base.Predicate&lt;? super V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Range com.google.common.collect.Range&lt;C&gt; closedOpen(C, C)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSet com.google.common.collect.ImmutableSet&lt;E&gt; copyOf(java.util.Iterator&lt;? extends E&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Range com.google.common.collect.Range&lt;C&gt; range(C, com.google.common.collect.BoundType, C, com.google.common.collect.BoundType) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.FluentIterable com.google.common.collect.FluentIterable&lt;E&gt; cycle()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.TreeMultiset com.google.common.collect.SortedMultiset descendingMultiset()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap.Builder com.google.common.collect.ImmutableListMultimap&lt;K,V&gt; build()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multisets boolean containsOccurrences(com.google.common.collect.Multiset&lt;?&gt;, com.google.common.collect.Multiset&lt;?&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multimap java.util.Collection&lt;V&gt; removeAll(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultiset boolean setCount(E, int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeTraverser com.google.common.collect.FluentIterable&lt;T&gt; preOrderTraversal(T) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableRangeSet com.google.common.collect.ImmutableRangeSet&lt;C&gt; complement()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap com.google.common.collect.ImmutableSortedMap&lt;K,V&gt; of(K, V, K, V, K, V, K, V)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multisets com.google.common.collect.Multiset&lt;E&gt; sum(com.google.common.collect.Multiset&lt;? extends E&gt;, com.google.common.collect.Multiset&lt;? extends E&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterables java.lang.Iterable&lt;java.util.List&lt;T&gt;&gt; paddedPartition(java.lang.Iterable&lt;T&gt;, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterators com.google.common.collect.PeekingIterator&lt;T&gt; peekingIterator(java.util.Iterator&lt;? extends T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.LinkedHashMultimap com.google.common.collect.LinkedHashMultimap&lt;K,V&gt; create(com.google.common.collect.Multimap&lt;? extends K,? extends V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterables boolean removeIf(java.lang.Iterable&lt;T&gt;, com.google.common.base.Predicate&lt;? super T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset com.google.common.collect.ImmutableSortedMultiset&lt;E&gt; headMultiset(E, com.google.common.collect.BoundType) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableTable java.util.Map rowMap()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterables java.lang.Iterable&lt;T&gt; filter(java.lang.Iterable&lt;?&gt;, java.lang.Class&lt;T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap com.google.common.collect.ImmutableListMultimap&lt;K,V&gt; of(K, V, K, V, K, V) 5'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap com.google.common.collect.ImmutableCollection&lt;V&gt; get(K)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps java.util.Map&lt;K,V&gt; filterEntries(java.util.Map&lt;K,V&gt;, com.google.common.base.Predicate&lt;? super java.util.Map.Entry&lt;K,V&gt;&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap com.google.common.collect.ImmutableMultimap&lt;K,V&gt; copyOf(com.google.common.collect.Multimap&lt;? extends K,? extends V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multimaps com.google.common.collect.ListMultimap&lt;K,V2&gt; transformValues(com.google.common.collect.ListMultimap&lt;K,V1&gt;, com.google.common.base.Function&lt;? super V1,V2&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Tables com.google.common.collect.Table&lt;R,C,V&gt; newCustomTable(java.util.Map&lt;R,java.util.Map&lt;C,V&gt;&gt;, com.google.common.base.Supplier&lt;? extends java.util.Map&lt;C,V&gt;&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Queues int drainUninterruptibly(java.util.concurrent.BlockingQueue&lt;E&gt;, java.util.Collection&lt;? super E&gt;, int, long, java.util.concurrent.TimeUnit) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ContiguousSet com.google.common.collect.ContiguousSet&lt;C&gt; subSet(C, C) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableRangeMap com.google.common.collect.ImmutableRangeMap&lt;K,V&gt; copyOf(com.google.common.collect.RangeMap&lt;K,? extends V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap.Builder com.google.common.collect.ImmutableListMultimap.Builder&lt;K,V&gt; putAll(K, java.lang.Iterable&lt;? extends V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultiset.Builder com.google.common.collect.ImmutableMultiset.Builder&lt;E&gt; add(E...) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap com.google.common.collect.ImmutableListMultimap&lt;K,V&gt; of(K, V, K, V, K, V, K, V, K, V) 6'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Range com.google.common.collect.Range&lt;C&gt; intersection(com.google.common.collect.Range&lt;C&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap com.google.common.collect.ImmutableSet&lt;V&gt; get(K)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap.Builder com.google.common.collect.ImmutableListMultimap.Builder&lt;K,V&gt; orderValuesBy(java.util.Comparator&lt;? super V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap com.google.common.collect.ImmutableSortedMap.Builder&lt;K,V&gt; naturalOrder()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterables boolean removeIf(java.lang.Iterable&lt;T&gt;, com.google.common.base.Predicate&lt;? super T&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.FluentIterable com.google.common.collect.ImmutableList&lt;E&gt; toSortedList(java.util.Comparator&lt;? super E&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableClassToInstanceMap com.google.common.collect.ImmutableClassToInstanceMap&lt;B&gt; copyOf(java.util.Map&lt;? extends java.lang.Class&lt;? extends S&gt;,? extends S&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.SortedSetMultimap java.util.SortedSet&lt;V&gt; get(K)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterables T getOnlyElement(java.lang.Iterable&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Maps java.util.Map&lt;K,V&gt; filterEntries(java.util.Map&lt;K,V&gt;, com.google.common.base.Predicate&lt;? super java.util.Map.Entry&lt;K,V&gt;&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multimaps com.google.common.collect.SortedSetMultimap&lt;K,V&gt; synchronizedSortedSetMultimap(com.google.common.collect.SortedSetMultimap&lt;K,V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap.Builder com.google.common.collect.ImmutableMultimap.Builder putAll(java.lang.Object, java.lang.Object[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterators com.google.common.collect.UnmodifiableIterator&lt;T&gt; forEnumeration(java.util.Enumeration&lt;T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Maps java.util.HashMap&lt;K,V&gt; newHashMap()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multimap java.util.Collection&lt;V&gt; replaceValues(K, java.lang.Iterable&lt;? extends V&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.HashMultiset java.util.Set entrySet()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ContiguousSet com.google.common.collect.ContiguousSet&lt;C&gt; subSet(C, C) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultiset.Builder com.google.common.collect.ImmutableMultiset.Builder&lt;E&gt; addAll(java.util.Iterator&lt;? extends E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ContiguousSet com.google.common.collect.ImmutableSortedSet tailSet(java.lang.Object, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap com.google.common.collect.ImmutableMultimap&lt;K,V&gt; of()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap com.google.common.collect.ImmutableCollection replaceValues(java.lang.Object, java.lang.Iterable) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap com.google.common.collect.ImmutableListMultimap&lt;K,V&gt; of(K, V, K, V, K, V, K, V)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap com.google.common.collect.ImmutableListMultimap&lt;K,V&gt; of(K, V, K, V, K, V, K, V, K, V) 5'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Lists java.util.ArrayList&lt;E&gt; newArrayList()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Range com.google.common.collect.Range&lt;C&gt; openClosed(C, C)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultiset.Builder com.google.common.collect.ImmutableCollection.Builder add(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterators com.google.common.collect.UnmodifiableIterator&lt;T&gt; unmodifiableIterator(java.util.Iterator&lt;T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Queues java.util.PriorityQueue&lt;E&gt; newPriorityQueue()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableList com.google.common.collect.ImmutableList&lt;E&gt; copyOf(java.util.Collection&lt;? extends E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterators com.google.common.collect.UnmodifiableIterator&lt;T&gt; filter(java.util.Iterator&lt;T&gt;, com.google.common.base.Predicate&lt;? super T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Sets java.util.EnumSet&lt;E&gt; complementOf(java.util.Collection&lt;E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ArrayTable java.util.Map&lt;C,V&gt; row(R)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap com.google.common.collect.ImmutableListMultimap&lt;K,V&gt; of(K, V, K, V, K, V, K, V, K, V) 8'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.TreeMultiset boolean contains(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Ordering com.google.common.collect.Ordering&lt;S&gt; nullsFirst()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.SetMultimap java.util.Set&lt;java.util.Map.Entry&lt;K,V&gt;&gt; entries()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMap com.google.common.collect.ImmutableCollection&lt;V&gt; values()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Sets com.google.common.collect.Sets.SetView&lt;E&gt; union(java.util.Set&lt;? extends E&gt;, java.util.Set&lt;? extends E&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap.Builder com.google.common.collect.ImmutableListMultimap.Builder&lt;K,V&gt; putAll(K, java.lang.Iterable&lt;? extends V&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet com.google.common.collect.ImmutableSortedSet.Builder&lt;E&gt; orderedBy(java.util.Comparator&lt;E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Maps java.util.SortedMap&lt;K,V2&gt; transformValues(java.util.SortedMap&lt;K,V1&gt;, com.google.common.base.Function&lt;? super V1,V2&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ObjectArrays T[] concat(T, T[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ArrayListMultimap boolean put(java.lang.Object, java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Queues int drainUninterruptibly(java.util.concurrent.BlockingQueue&lt;E&gt;, java.util.Collection&lt;? super E&gt;, int, long, java.util.concurrent.TimeUnit) 4'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.MapConstraints com.google.common.collect.BiMap&lt;K,V&gt; constrainedBiMap(com.google.common.collect.BiMap&lt;K,V&gt;, com.google.common.collect.MapConstraint&lt;? super K,? super V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingMultiset int setCount(E, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.FluentIterable com.google.common.collect.ImmutableMap&lt;K,E&gt; uniqueIndex(com.google.common.base.Function&lt;? super E,K&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multimaps M invertFrom(com.google.common.collect.Multimap&lt;? extends V,? extends K&gt;, M) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ListMultimap java.util.List&lt;V&gt; get(K)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap com.google.common.collect.ImmutableListMultimap&lt;K,V&gt; of(K, V, K, V, K, V, K, V, K, V) 7'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.MultimapBuilder.MultimapBuilderWithKeys com.google.common.collect.MultimapBuilder.SetMultimapBuilder&lt;K0,V0&gt; enumSetValues(java.lang.Class&lt;V0&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableTable com.google.common.collect.ImmutableSet&lt;R&gt; rowKeySet()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingMap java.util.Set&lt;K&gt; keySet()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingMultimap java.util.Collection&lt;V&gt; get(K) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeBasedTable com.google.common.collect.TreeBasedTable&lt;R,C,V&gt; create(com.google.common.collect.TreeBasedTable&lt;R,C,? extends V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.FluentIterable com.google.common.collect.FluentIterable&lt;T&gt; filter(java.lang.Class&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multimaps com.google.common.collect.Multimap&lt;K,V2&gt; transformValues(com.google.common.collect.Multimap&lt;K,V1&gt;, com.google.common.base.Function&lt;? super V1,V2&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Table V put(R, C, V) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EvictingQueue boolean addAll(java.util.Collection&lt;? extends E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap com.google.common.collect.ImmutableSortedMap&lt;K,V&gt; of(K, V)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableRangeSet void add(com.google.common.collect.Range&lt;C&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterators java.util.Iterator&lt;T&gt; concat(java.util.Iterator&lt;? extends T&gt;, java.util.Iterator&lt;? extends T&gt;, java.util.Iterator&lt;? extends T&gt;, java.util.Iterator&lt;? extends T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap com.google.common.collect.ImmutableListMultimap&lt;K,V&gt; of()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterators com.google.common.collect.UnmodifiableIterator&lt;T&gt; unmodifiableIterator(com.google.common.collect.UnmodifiableIterator&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Range com.google.common.collect.Range&lt;C&gt; upTo(C, com.google.common.collect.BoundType) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap com.google.common.collect.ImmutableListMultimap&lt;K,V&gt; of(K, V, K, V, K, V, K, V, K, V) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.MultimapBuilder.SortedSetMultimapBuilder com.google.common.collect.SetMultimap build()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap.Builder com.google.common.collect.ImmutableMultimap.Builder&lt;K,V&gt; put(java.util.Map.Entry&lt;? extends K,? extends V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableRangeSet java.util.Set asDescendingSetOfRanges()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multimaps M invertFrom(com.google.common.collect.Multimap&lt;? extends V,? extends K&gt;, M) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Maps com.google.common.collect.BiMap&lt;K,V&gt; filterValues(com.google.common.collect.BiMap&lt;K,V&gt;, com.google.common.base.Predicate&lt;? super V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multimaps com.google.common.collect.Multimap&lt;K,V&gt; newMultimap(java.util.Map&lt;K,java.util.Collection&lt;V&gt;&gt;, com.google.common.base.Supplier&lt;? extends java.util.Collection&lt;V&gt;&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ObjectArrays T[] concat(T[], T) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Collections2 java.util.Collection&lt;java.util.List&lt;E&gt;&gt; orderedPermutations(java.lang.Iterable&lt;E&gt;, java.util.Comparator&lt;? super E&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableList.Builder com.google.common.collect.ImmutableCollection.Builder addAll(java.lang.Iterable)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Table V put(R, C, V) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps com.google.common.collect.Multimap&lt;K,V2&gt; transformValues(com.google.common.collect.Multimap&lt;K,V1&gt;, com.google.common.base.Function&lt;? super V1,V2&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Sets.SetView com.google.common.collect.ImmutableSet&lt;E&gt; immutableCopy()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingNavigableSet java.util.NavigableSet&lt;E&gt; headSet(E, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableRangeMap com.google.common.collect.ImmutableRangeMap&lt;K,V&gt; of(com.google.common.collect.Range&lt;K&gt;, V)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.TreeMultimap com.google.common.collect.TreeMultimap&lt;K,V&gt; create(java.util.Comparator&lt;? super K&gt;, java.util.Comparator&lt;? super V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingSortedMap java.util.SortedMap&lt;K,V&gt; headMap(K)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Lists java.util.List&lt;E&gt; asList(E, E, E[]) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap.Builder com.google.common.collect.ImmutableMultimap.Builder&lt;K,V&gt; putAll(com.google.common.collect.Multimap&lt;? extends K,? extends V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableTable com.google.common.collect.ImmutableCollection&lt;V&gt; values()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.SortedMultiset java.util.NavigableSet&lt;E&gt; elementSet()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.HashBasedTable com.google.common.collect.HashBasedTable&lt;R,C,V&gt; create(com.google.common.collect.Table&lt;? extends R,? extends C,? extends V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap com.google.common.collect.ImmutableListMultimap&lt;K,V&gt; of(K, V, K, V, K, V, K, V, K, V) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.HashBasedTable java.util.Set columnKeySet()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap com.google.common.collect.ImmutableSortedMap&lt;K,V&gt; descendingMap()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multimaps com.google.common.collect.Multimap&lt;K,V&gt; newMultimap(java.util.Map&lt;K,java.util.Collection&lt;V&gt;&gt;, com.google.common.base.Supplier&lt;? extends java.util.Collection&lt;V&gt;&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterators java.util.Iterator&lt;T&gt; concat(java.util.Iterator&lt;? extends T&gt;...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingSortedSet java.lang.Object delegate()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingMultiset boolean standardAddAll(java.util.Collection&lt;? extends E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap K ceilingKey(K) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableList.Builder com.google.common.collect.ImmutableCollection build()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Range com.google.common.collect.Range&lt;C&gt; greaterThan(C) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableBiMap.Builder com.google.common.collect.ImmutableBiMap.Builder&lt;K,V&gt; put(K, V) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Ordering com.google.common.collect.Ordering&lt;java.lang.Object&gt; arbitrary()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multisets com.google.common.collect.Multiset&lt;E&gt; union(com.google.common.collect.Multiset&lt;? extends E&gt;, com.google.common.collect.Multiset&lt;? extends E&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ArrayListMultimap boolean putAll(java.lang.Object, java.lang.Iterable) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Tables com.google.common.collect.Table&lt;R,C,V&gt; unmodifiableTable(com.google.common.collect.Table&lt;? extends R,? extends C,? extends V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Maps java.util.LinkedHashMap&lt;K,V&gt; newLinkedHashMap()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap com.google.common.collect.ImmutableListMultimap&lt;K,V&gt; of(K, V, K, V, K, V, K, V, K, V) 4'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset com.google.common.collect.ImmutableSortedMultiset&lt;E&gt; copyOf(java.util.Comparator&lt;? super E&gt;, java.util.Iterator&lt;? extends E&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap.Builder com.google.common.collect.ImmutableMap.Builder putAll(java.util.Map) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterators java.util.Iterator&lt;T&gt; concat(java.util.Iterator&lt;? extends T&gt;, java.util.Iterator&lt;? extends T&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.LinkedHashMultiset int setCount(java.lang.Object, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimap java.util.Map&lt;K,java.util.Collection&lt;V&gt;&gt; asMap()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeRangeSet com.google.common.collect.TreeRangeSet&lt;C&gt; create(com.google.common.collect.RangeSet&lt;C&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet com.google.common.collect.ImmutableSortedSet.Builder&lt;E&gt; reverseOrder()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.SetMultimap java.util.Set&lt;V&gt; get(K)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multisets com.google.common.collect.Multiset&lt;E&gt; union(com.google.common.collect.Multiset&lt;? extends E&gt;, com.google.common.collect.Multiset&lt;? extends E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.TreeBasedTable java.util.SortedMap&lt;C,V&gt; row(R)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ArrayListMultimap boolean putAll(java.lang.Object, java.lang.Iterable) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableList com.google.common.collect.ImmutableList&lt;E&gt; of(E, E, E, E, E, E, E)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap com.google.common.collect.ImmutableListMultimap&lt;K,V&gt; of(K, V, K, V, K, V, K, V, K, V) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Range com.google.common.collect.Range&lt;C&gt; upTo(C, com.google.common.collect.BoundType) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Lists java.util.List&lt;java.util.List&lt;T&gt;&gt; partition(java.util.List&lt;T&gt;, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet com.google.common.collect.ImmutableSortedSet&lt;E&gt; copyOfSorted(java.util.SortedSet&lt;E&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ArrayListMultimap java.util.List get(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet.Builder com.google.common.collect.ImmutableCollection.Builder add(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingNavigableSet java.util.NavigableSet&lt;E&gt; tailSet(E, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.HashBiMap com.google.common.collect.HashBiMap&lt;K,V&gt; create(java.util.Map&lt;? extends K,? extends V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap.Builder com.google.common.collect.ImmutableMultimap.Builder putAll(java.lang.Object, java.lang.Object[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterators java.util.Iterator&lt;T&gt; concat(java.util.Iterator&lt;? extends T&gt;, java.util.Iterator&lt;? extends T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ClassToInstanceMap T getInstance(java.lang.Class&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps com.google.common.collect.SetMultimap&lt;K,V&gt; filterValues(com.google.common.collect.SetMultimap&lt;K,V&gt;, com.google.common.base.Predicate&lt;? super V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet com.google.common.collect.ImmutableSortedSet&lt;E&gt; subSet(E, E) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterables T get(java.lang.Iterable&lt;? extends T&gt;, int, T) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.FluentIterable com.google.common.collect.FluentIterable&lt;T&gt; transform(com.google.common.base.Function&lt;? super E,T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableList com.google.common.collect.ImmutableList&lt;E&gt; of(E, E, E, E, E, E, E, E, E, E)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.HashMultiset boolean removeAll(java.util.Collection) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableRangeMap void putAll(com.google.common.collect.RangeMap&lt;K,V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps com.google.common.collect.SetMultimap&lt;K,V&gt; filterEntries(com.google.common.collect.SetMultimap&lt;K,V&gt;, com.google.common.base.Predicate&lt;? super java.util.Map.Entry&lt;K,V&gt;&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingListMultimap java.util.Collection get(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableList.Builder com.google.common.collect.ImmutableList.Builder&lt;E&gt; add(E...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ConcurrentHashMultiset java.util.Set elementSet()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Ordering java.util.List&lt;E&gt; greatestOf(java.util.Iterator&lt;E&gt;, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultiset com.google.common.collect.ImmutableMultiset&lt;E&gt; of(E, E, E, E)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Range com.google.common.collect.Range&lt;C&gt; canonical(com.google.common.collect.DiscreteDomain&lt;C&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSet.Builder com.google.common.collect.ImmutableSet&lt;E&gt; build()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Collections2 java.util.Collection&lt;java.util.List&lt;E&gt;&gt; permutations(java.util.Collection&lt;E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableList.Builder com.google.common.collect.ImmutableCollection.ArrayBasedBuilder add(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.TreeBasedTable com.google.common.collect.TreeBasedTable&lt;R,C,V&gt; create()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingSortedMap java.util.SortedMap&lt;K,V&gt; subMap(K, K)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RangeSet void addAll(com.google.common.collect.RangeSet&lt;C&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet com.google.common.collect.ImmutableSortedSet&lt;E&gt; subSet(E, E) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.MultimapBuilder.MultimapBuilderWithKeys com.google.common.collect.MultimapBuilder.SortedSetMultimapBuilder&lt;K0,V0&gt; treeSetValues(java.util.Comparator&lt;V0&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Lists java.util.List&lt;java.util.List&lt;B&gt;&gt; cartesianProduct(java.util.List&lt;? extends java.util.List&lt;? extends B&gt;&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.MapMaker com.google.common.collect.GenericMapMaker initialCapacity(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multimaps com.google.common.collect.SetMultimap&lt;K,V&gt; filterEntries(com.google.common.collect.SetMultimap&lt;K,V&gt;, com.google.common.base.Predicate&lt;? super java.util.Map.Entry&lt;K,V&gt;&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.FluentIterable com.google.common.collect.FluentIterable&lt;E&gt; append(E...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingCollection T[] standardToArray(T[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap.Builder com.google.common.collect.ImmutableListMultimap.Builder&lt;K,V&gt; put(java.util.Map.Entry&lt;? extends K,? extends V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultiset java.util.Iterator iterator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet.Builder com.google.common.collect.ImmutableSortedSet.Builder&lt;E&gt; add(E...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.TreeRangeSet com.google.common.collect.Range&lt;C&gt; span()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingMultimap boolean putAll(com.google.common.collect.Multimap&lt;? extends K,? extends V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterators java.util.Iterator&lt;T&gt; consumingIterator(java.util.Iterator&lt;T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset.Builder com.google.common.collect.ImmutableSortedMultiset.Builder&lt;E&gt; add(E...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableRangeSet.Builder com.google.common.collect.ImmutableRangeSet.Builder&lt;C&gt; add(com.google.common.collect.Range&lt;C&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet com.google.common.collect.UnmodifiableIterator&lt;E&gt; iterator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps com.google.common.base.Converter&lt;A,B&gt; asConverter(com.google.common.collect.BiMap&lt;A,B&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.RangeSet java.util.Set&lt;com.google.common.collect.Range&lt;C&gt;&gt; asRanges()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableTable com.google.common.collect.ImmutableSet&lt;com.google.common.collect.Table.Cell&lt;R,C,V&gt;&gt; cellSet()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ArrayTable java.util.Set columnKeySet()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.EnumMultiset java.util.Set entrySet()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.BiMap java.util.Set&lt;V&gt; values()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableBiMap com.google.common.collect.ImmutableBiMap&lt;K,V&gt; copyOf(java.util.Map&lt;? extends K,? extends V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMap.Builder com.google.common.collect.ImmutableMap.Builder&lt;K,V&gt; putAll(java.util.Map&lt;? extends K,? extends V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.FluentIterable boolean allMatch(com.google.common.base.Predicate&lt;? super E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Ordering com.google.common.collect.Ordering&lt;T&gt; from(java.util.Comparator&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.MapConstraints com.google.common.collect.SetMultimap&lt;K,V&gt; constrainedSetMultimap(com.google.common.collect.SetMultimap&lt;K,V&gt;, com.google.common.collect.MapConstraint&lt;? super K,? super V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap com.google.common.collect.ImmutableListMultimap&lt;K,V&gt; of(K, V, K, V, K, V, K, V, K, V) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSet.Builder com.google.common.collect.ImmutableCollection.Builder add(java.lang.Object[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset.Builder com.google.common.collect.ImmutableMultiset.Builder add(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableBiMap com.google.common.collect.ImmutableBiMap&lt;K,V&gt; copyOf(java.lang.Iterable&lt;? extends java.util.Map.Entry&lt;? extends K,? extends V&gt;&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.TreeRangeSet com.google.common.collect.RangeSet&lt;C&gt; subRangeSet(com.google.common.collect.Range&lt;C&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Maps java.util.SortedMap&lt;K,V&gt; filterKeys(java.util.SortedMap&lt;K,V&gt;, com.google.common.base.Predicate&lt;? super K&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multiset int add(E, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset com.google.common.collect.ImmutableSortedMultiset&lt;E&gt; of(E, E, E, E)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap.Builder com.google.common.collect.ImmutableMap.Builder putAll(java.lang.Iterable) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingMultimap com.google.common.collect.Multiset&lt;K&gt; keys()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ConcurrentHashMultiset boolean retainAll(java.util.Collection) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Maps com.google.common.collect.BiMap&lt;K,V&gt; synchronizedBiMap(com.google.common.collect.BiMap&lt;K,V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.MapConstraints com.google.common.collect.SetMultimap&lt;K,V&gt; constrainedSetMultimap(com.google.common.collect.SetMultimap&lt;K,V&gt;, com.google.common.collect.MapConstraint&lt;? super K,? super V&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset com.google.common.collect.ImmutableSortedMultiset.Builder&lt;E&gt; reverseOrder()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Maps java.util.SortedMap&lt;K,V&gt; filterKeys(java.util.SortedMap&lt;K,V&gt;, com.google.common.base.Predicate&lt;? super K&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap com.google.common.collect.ImmutableListMultimap&lt;K,V&gt; of(K, V, K, V, K, V) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultiset com.google.common.collect.ImmutableMultiset&lt;E&gt; of(E)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterables T getLast(java.lang.Iterable&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.TreeMultiset com.google.common.collect.TreeMultiset&lt;E&gt; create()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.SetMultimap java.util.Set&lt;V&gt; removeAll(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps java.util.SortedMap&lt;K,V2&gt; transformEntries(java.util.SortedMap&lt;K,V1&gt;, com.google.common.collect.Maps.EntryTransformer&lt;? super K,? super V1,V2&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap.Builder com.google.common.collect.ImmutableListMultimap.Builder&lt;K,V&gt; put(K, V)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableTable java.util.Collection values()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap.Builder com.google.common.collect.ImmutableMultimap.Builder orderValuesBy(java.util.Comparator) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap.Builder com.google.common.collect.ImmutableSetMultimap.Builder&lt;K,V&gt; put(K, V) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ArrayListMultimap boolean put(java.lang.Object, java.lang.Object) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingSortedSet java.util.Collection delegate()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterables boolean addAll(java.util.Collection&lt;T&gt;, java.lang.Iterable&lt;? extends T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ConcurrentHashMultiset com.google.common.collect.ConcurrentHashMultiset&lt;E&gt; create()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableTable.Builder com.google.common.collect.ImmutableTable.Builder&lt;R,C,V&gt; put(R, C, V) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.EnumBiMap com.google.common.collect.EnumBiMap&lt;K,V&gt; create(java.util.Map&lt;K,V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableRangeSet boolean contains(java.lang.Comparable) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.HashMultimap com.google.common.collect.HashMultimap&lt;K,V&gt; create(com.google.common.collect.Multimap&lt;? extends K,? extends V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.EnumHashBiMap java.util.Set keySet()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap com.google.common.collect.ImmutableListMultimap&lt;K,V&gt; of(K, V, K, V, K, V) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterators com.google.common.collect.UnmodifiableIterator&lt;T&gt; mergeSorted(java.lang.Iterable&lt;? extends java.util.Iterator&lt;? extends T&gt;&gt;, java.util.Comparator&lt;? super T&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap com.google.common.collect.ImmutableListMultimap&lt;K,V&gt; of(K, V, K, V, K, V) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Queues java.util.concurrent.LinkedBlockingQueue&lt;E&gt; newLinkedBlockingQueue(java.lang.Iterable&lt;? extends E&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Maps java.util.SortedMap&lt;K,V2&gt; transformEntries(java.util.SortedMap&lt;K,V1&gt;, com.google.common.collect.Maps.EntryTransformer&lt;? super K,? super V1,V2&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap.Builder com.google.common.collect.ImmutableSetMultimap.Builder&lt;K,V&gt; put(K, V) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ContiguousSet com.google.common.collect.ContiguousSet&lt;C&gt; tailSet(C, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Maps com.google.common.collect.MapDifference&lt;K,V&gt; difference(java.util.Map&lt;? extends K,? extends V&gt;, java.util.Map&lt;? extends K,? extends V&gt;, com.google.common.base.Equivalence&lt;? super V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterables java.lang.Iterable&lt;T&gt; mergeSorted(java.lang.Iterable&lt;? extends java.lang.Iterable&lt;? extends T&gt;&gt;, java.util.Comparator&lt;? super T&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.LinkedHashMultiset boolean remove(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableTable com.google.common.collect.ImmutableMap&lt;C,V&gt; row(R)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Sets com.google.common.collect.ImmutableSet&lt;E&gt; immutableEnumSet(java.lang.Iterable&lt;E&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableList com.google.common.collect.ImmutableList&lt;E&gt; of(E, E, E, E, E, E, E, E, E)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ContiguousSet com.google.common.collect.ContiguousSet&lt;C&gt; create(com.google.common.collect.Range&lt;C&gt;, com.google.common.collect.DiscreteDomain&lt;C&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableTable.Builder com.google.common.collect.ImmutableTable.Builder&lt;R,C,V&gt; put(R, C, V) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap.Builder com.google.common.collect.ImmutableSetMultimap.Builder&lt;K,V&gt; putAll(java.lang.Iterable&lt;? extends java.util.Map.Entry&lt;? extends K,? extends V&gt;&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Lists java.util.List&lt;java.lang.Character&gt; charactersOf(java.lang.CharSequence)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap com.google.common.collect.ImmutableListMultimap&lt;V,K&gt; inverse()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterables java.lang.Iterable&lt;java.util.List&lt;T&gt;&gt; partition(java.lang.Iterable&lt;T&gt;, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableCollection.Builder com.google.common.collect.ImmutableCollection.Builder&lt;E&gt; addAll(java.util.Iterator&lt;? extends E&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap java.util.Collection get(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableRangeSet void addAll(com.google.common.collect.RangeSet&lt;C&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterators com.google.common.collect.UnmodifiableIterator&lt;T&gt; mergeSorted(java.lang.Iterable&lt;? extends java.util.Iterator&lt;? extends T&gt;&gt;, java.util.Comparator&lt;? super T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap com.google.common.collect.ImmutableListMultimap&lt;K,V&gt; of(K, V, K, V, K, V) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableBiMap.Builder com.google.common.collect.ImmutableBiMap.Builder&lt;K,V&gt; put(java.util.Map.Entry&lt;? extends K,? extends V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterables java.lang.Iterable&lt;T&gt; mergeSorted(java.lang.Iterable&lt;? extends java.lang.Iterable&lt;? extends T&gt;&gt;, java.util.Comparator&lt;? super T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset com.google.common.collect.SortedMultiset headMultiset(java.lang.Object, com.google.common.collect.BoundType) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap java.util.Collection entries()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterables boolean removeAll(java.lang.Iterable&lt;?&gt;, java.util.Collection&lt;?&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Range com.google.common.collect.Range&lt;C&gt; open(C, C)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableTable.Builder com.google.common.collect.ImmutableTable.Builder&lt;R,C,V&gt; putAll(com.google.common.collect.Table&lt;? extends R,? extends C,? extends V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Collections2 java.util.Collection&lt;java.util.List&lt;E&gt;&gt; orderedPermutations(java.lang.Iterable&lt;E&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.MultimapBuilder.MultimapBuilderWithKeys com.google.common.collect.MultimapBuilder.SetMultimapBuilder&lt;K0,java.lang.Object&gt; linkedHashSetValues(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.RangeMap com.google.common.collect.RangeMap&lt;K,V&gt; subRangeMap(com.google.common.collect.Range&lt;K&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableBiMap com.google.common.collect.ImmutableBiMap&lt;K,V&gt; of(K, V, K, V, K, V, K, V)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap com.google.common.collect.ImmutableSetMultimap&lt;K,V&gt; of(K, V, K, V, K, V, K, V, K, V)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Tables com.google.common.collect.Table&lt;R,C,V2&gt; transformValues(com.google.common.collect.Table&lt;R,C,V1&gt;, com.google.common.base.Function&lt;? super V1,V2&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ContiguousSet java.util.NavigableSet tailSet(java.lang.Object, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset com.google.common.collect.ImmutableSortedMultiset&lt;E&gt; of(E) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap.Builder com.google.common.collect.ImmutableMultimap.Builder&lt;K,V&gt; orderKeysBy(java.util.Comparator&lt;? super K&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultiset java.util.Set entrySet()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.FluentIterable com.google.common.collect.ImmutableList&lt;E&gt; toList()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap com.google.common.collect.ImmutableListMultimap&lt;K,V&gt; of(K, V, K, V, K, V) 4'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet.Builder com.google.common.collect.ImmutableSet.Builder add(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multimaps com.google.common.collect.SetMultimap&lt;K,V&gt; filterKeys(com.google.common.collect.SetMultimap&lt;K,V&gt;, com.google.common.base.Predicate&lt;? super K&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Range com.google.common.collect.Range&lt;C&gt; span(com.google.common.collect.Range&lt;C&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterables boolean addAll(java.util.Collection&lt;T&gt;, java.lang.Iterable&lt;? extends T&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet com.google.common.collect.ImmutableSortedSet&lt;E&gt; copyOf(java.lang.Iterable&lt;? extends E&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableRangeMap com.google.common.collect.ImmutableRangeMap&lt;K,V&gt; subRangeMap(com.google.common.collect.Range&lt;K&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset com.google.common.collect.SortedMultiset headMultiset(java.lang.Object, com.google.common.collect.BoundType) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedListMultimap java.util.Collection values()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ContiguousSet java.util.SortedSet headSet(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Lists java.util.List&lt;E&gt; asList(E, E[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingCollection boolean standardRemoveAll(java.util.Collection&lt;?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterables boolean removeAll(java.lang.Iterable&lt;?&gt;, java.util.Collection&lt;?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMap.Builder com.google.common.collect.ImmutableMap.Builder&lt;K,V&gt; put(java.util.Map.Entry&lt;? extends K,? extends V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableTable.Builder com.google.common.collect.ImmutableTable.Builder&lt;R,C,V&gt; put(R, C, V) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ArrayListMultimap com.google.common.collect.ArrayListMultimap&lt;K,V&gt; create()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableList com.google.common.collect.ImmutableList&lt;E&gt; copyOf(java.util.Iterator&lt;? extends E&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset com.google.common.collect.ImmutableSortedMultiset&lt;E&gt; copyOf(java.lang.Iterable&lt;? extends E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterators int indexOf(java.util.Iterator&lt;T&gt;, com.google.common.base.Predicate&lt;? super T&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Maps java.util.NavigableMap&lt;K,V&gt; filterEntries(java.util.NavigableMap&lt;K,V&gt;, com.google.common.base.Predicate&lt;? super java.util.Map.Entry&lt;K,V&gt;&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.HashMultiset boolean remove(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps java.util.Map&lt;K,V2&gt; transformEntries(java.util.Map&lt;K,V1&gt;, com.google.common.collect.Maps.EntryTransformer&lt;? super K,? super V1,V2&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMap com.google.common.collect.ImmutableMap&lt;K,V&gt; of(K, V, K, V, K, V, K, V, K, V) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSet.Builder com.google.common.collect.ImmutableSet.Builder&lt;E&gt; addAll(java.util.Iterator&lt;? extends E&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterables java.lang.Iterable&lt;T&gt; cycle(java.lang.Iterable&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Maps com.google.common.collect.ImmutableMap&lt;java.lang.String,java.lang.String&gt; fromProperties(java.util.Properties) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap.Builder com.google.common.collect.ImmutableSortedMap.Builder&lt;K,V&gt; put(java.util.Map.Entry&lt;? extends K,? extends V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Maps java.util.NavigableMap&lt;K,V2&gt; transformEntries(java.util.NavigableMap&lt;K,V1&gt;, com.google.common.collect.Maps.EntryTransformer&lt;? super K,? super V1,V2&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingSortedSetMultimap java.util.Set replaceValues(java.lang.Object, java.lang.Iterable) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.RowSortedTable java.util.SortedMap&lt;R,java.util.Map&lt;C,V&gt;&gt; rowMap()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset com.google.common.collect.ImmutableSortedMultiset&lt;E&gt; copyOfSorted(com.google.common.collect.SortedMultiset&lt;E&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.MapConstraints java.util.Map&lt;K,V&gt; constrainedMap(java.util.Map&lt;K,V&gt;, com.google.common.collect.MapConstraint&lt;? super K,? super V&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.RangeSet void add(com.google.common.collect.Range&lt;C&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Table java.util.Map&lt;R,V&gt; column(C)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ArrayTable com.google.common.collect.ArrayTable&lt;R,C,V&gt; create(com.google.common.collect.Table&lt;R,C,V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Queues java.util.concurrent.ArrayBlockingQueue&lt;E&gt; newArrayBlockingQueue(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.SortedMultiset java.util.Set&lt;com.google.common.collect.Multiset.Entry&lt;E&gt;&gt; entrySet()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableList java.util.ListIterator listIterator(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap com.google.common.collect.ImmutableSortedMap&lt;K,V&gt; headMap(K) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterators int indexOf(java.util.Iterator&lt;T&gt;, com.google.common.base.Predicate&lt;? super T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Maps java.util.Map&lt;K,V2&gt; transformEntries(java.util.Map&lt;K,V1&gt;, com.google.common.collect.Maps.EntryTransformer&lt;? super K,? super V1,V2&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMap com.google.common.collect.ImmutableMap&lt;K,V&gt; of(K, V, K, V, K, V, K, V, K, V) 4'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableClassToInstanceMap com.google.common.collect.ImmutableClassToInstanceMap.Builder&lt;B&gt; builder()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap.Builder Builder(java.util.Comparator&lt;? super K&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableBiMap.Builder com.google.common.collect.ImmutableMap.Builder putAll(java.util.Map) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.LinkedListMultimap com.google.common.collect.Multiset keys()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.MapConstraints java.util.Map&lt;K,V&gt; constrainedMap(java.util.Map&lt;K,V&gt;, com.google.common.collect.MapConstraint&lt;? super K,? super V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterables java.lang.Iterable&lt;T&gt; cycle(T...) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.DiscreteDomain C previous(C) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableTable com.google.common.collect.ImmutableMap&lt;C,java.util.Map&lt;R,V&gt;&gt; columnMap()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterables java.lang.Iterable&lt;T&gt; concat(java.lang.Iterable&lt;? extends T&gt;, java.lang.Iterable&lt;? extends T&gt;, java.lang.Iterable&lt;? extends T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap.Builder com.google.common.collect.ImmutableMultimap.Builder put(java.util.Map.Entry) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap.Builder com.google.common.collect.ImmutableMultimap.Builder putAll(com.google.common.collect.Multimap) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Maps com.google.common.collect.ImmutableMap&lt;K,V&gt; toMap(java.lang.Iterable&lt;K&gt;, com.google.common.base.Function&lt;? super K,V&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.TreeMultiset int setCount(E, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MultimapBuilder.MultimapBuilderWithKeys com.google.common.collect.MultimapBuilder.SetMultimapBuilder&lt;K0,java.lang.Object&gt; linkedHashSetValues()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.RangeSet com.google.common.collect.Range&lt;C&gt; rangeContaining(C) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingList java.util.ListIterator&lt;E&gt; listIterator(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterables int indexOf(java.lang.Iterable&lt;T&gt;, com.google.common.base.Predicate&lt;? super T&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.TreeMultimap boolean putAll(com.google.common.collect.Multimap) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMap com.google.common.collect.ImmutableMap&lt;K,V&gt; of(K, V, K, V, K, V, K, V, K, V) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multisets com.google.common.collect.Multiset&lt;E&gt; unmodifiableMultiset(com.google.common.collect.ImmutableMultiset&lt;E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterators com.google.common.collect.UnmodifiableIterator&lt;T&gt; filter(java.util.Iterator&lt;?&gt;, java.lang.Class&lt;T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.LinkedHashMultiset boolean addAll(java.util.Collection) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingSortedSet java.util.SortedSet&lt;E&gt; subSet(E, E) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet.Builder com.google.common.collect.ImmutableSortedSet&lt;E&gt; build()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset.Builder com.google.common.collect.ImmutableSortedMultiset.Builder&lt;E&gt; addAll(java.util.Iterator&lt;? extends E&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableBiMap.Builder com.google.common.collect.ImmutableBiMap.Builder&lt;K,V&gt; orderEntriesByValue(java.util.Comparator&lt;? super V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ConcurrentHashMultiset java.util.Set&lt;com.google.common.collect.Multiset.Entry&lt;E&gt;&gt; createEntrySet()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterators com.google.common.collect.UnmodifiableIterator&lt;T&gt; forArray(T...)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap com.google.common.collect.ImmutableMultimap&lt;K,V&gt; of(K, V, K, V, K, V, K, V, K, V)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableList java.util.List subList(int, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Maps com.google.common.collect.ImmutableMap&lt;K,V&gt; toMap(java.lang.Iterable&lt;K&gt;, com.google.common.base.Function&lt;? super K,V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.FluentIterable com.google.common.collect.ImmutableMap&lt;E,V&gt; toMap(com.google.common.base.Function&lt;? super E,V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableList com.google.common.collect.ImmutableList&lt;E&gt; of(E, E)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingNavigableSet E floor(E) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap.Builder com.google.common.collect.ImmutableMultimap.Builder orderKeysBy(java.util.Comparator)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingSortedSetMultimap java.util.Collection get(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterables int indexOf(java.lang.Iterable&lt;T&gt;, com.google.common.base.Predicate&lt;? super T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMap com.google.common.collect.ImmutableMap&lt;K,V&gt; of(K, V, K, V, K, V, K, V, K, V) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterables boolean isEmpty(java.lang.Iterable&lt;?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Sets com.google.common.collect.Sets.SetView&lt;E&gt; symmetricDifference(java.util.Set&lt;? extends E&gt;, java.util.Set&lt;? extends E&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap.Builder com.google.common.collect.ImmutableMultimap.Builder&lt;K,V&gt; putAll(K, java.lang.Iterable&lt;? extends V&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterators com.google.common.collect.UnmodifiableIterator&lt;T&gt; filter(java.util.Iterator&lt;?&gt;, java.lang.Class&lt;T&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableRangeMap com.google.common.collect.ImmutableMap&lt;com.google.common.collect.Range&lt;K&gt;,V&gt; asDescendingMapOfRanges()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap.Builder com.google.common.collect.ImmutableMap.Builder put(java.lang.Object, java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingSortedSet java.util.SortedSet&lt;E&gt; subSet(E, E) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Queues java.util.Deque&lt;E&gt; synchronizedDeque(java.util.Deque&lt;E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multimaps com.google.common.collect.ListMultimap&lt;K,V&gt; filterKeys(com.google.common.collect.ListMultimap&lt;K,V&gt;, com.google.common.base.Predicate&lt;? super K&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultiset boolean contains(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSet.Builder com.google.common.collect.ImmutableCollection.Builder addAll(java.lang.Iterable)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.SortedLists.KeyAbsentBehavior NEXT_HIGHER'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.TreeRangeMap void putAll(com.google.common.collect.RangeMap&lt;K,V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset.Builder com.google.common.collect.ImmutableCollection build()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.MutableClassToInstanceMap void putAll(java.util.Map) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.LinkedHashMultiset int add(java.lang.Object, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.EnumHashBiMap void putAll(java.util.Map) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableClassToInstanceMap.Builder com.google.common.collect.ImmutableClassToInstanceMap.Builder&lt;B&gt; putAll(java.util.Map&lt;? extends java.lang.Class&lt;? extends T&gt;,? extends T&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingSortedMultiset com.google.common.collect.SortedMultiset&lt;E&gt; headMultiset(E, com.google.common.collect.BoundType) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSet com.google.common.collect.ImmutableSet&lt;E&gt; copyOf(E[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableTable java.util.Set rowKeySet()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ArrayTable com.google.common.collect.ArrayTable&lt;R,C,V&gt; create(java.lang.Iterable&lt;? extends R&gt;, java.lang.Iterable&lt;? extends C&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.SortedMultiset com.google.common.collect.SortedMultiset&lt;E&gt; tailMultiset(E, com.google.common.collect.BoundType)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet E ceiling(E) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.HashBasedTable java.util.Map row(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap java.util.NavigableMap tailMap(java.lang.Object, boolean)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset.Builder com.google.common.collect.ImmutableMultiset.Builder add(java.lang.Object[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Table java.util.Map&lt;R,java.util.Map&lt;C,V&gt;&gt; rowMap()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterators java.util.Iterator&lt;T&gt; concat(java.util.Iterator&lt;? extends java.util.Iterator&lt;? extends T&gt;&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Maps com.google.common.collect.ImmutableMap&lt;K,V&gt; uniqueIndex(java.lang.Iterable&lt;V&gt;, com.google.common.base.Function&lt;? super V,K&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset.Builder com.google.common.collect.ImmutableSortedMultiset.Builder&lt;E&gt; addCopies(E, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSet.Builder com.google.common.collect.ImmutableCollection.ArrayBasedBuilder add(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.BinaryTreeTraverser java.lang.Iterable&lt;T&gt; children(T) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap.Builder com.google.common.collect.ImmutableMultimap.Builder putAll(java.lang.Object, java.lang.Iterable) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset com.google.common.collect.ImmutableSortedMultiset&lt;E&gt; tailMultiset(E, com.google.common.collect.BoundType)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Iterators boolean elementsEqual(java.util.Iterator&lt;?&gt;, java.util.Iterator&lt;?&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMap com.google.common.collect.ImmutableMap&lt;K,V&gt; of(K, V, K, V, K, V, K, V, K, V) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap.Builder com.google.common.collect.ImmutableSortedMap&lt;K,V&gt; build()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet java.util.Iterator iterator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MultimapBuilder.SortedSetMultimapBuilder com.google.common.collect.SortedSetMultimap&lt;K,V&gt; build()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingCollection boolean remove(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.MapConstraints com.google.common.collect.ListMultimap&lt;K,V&gt; constrainedListMultimap(com.google.common.collect.ListMultimap&lt;K,V&gt;, com.google.common.collect.MapConstraint&lt;? super K,? super V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterators boolean elementsEqual(java.util.Iterator&lt;?&gt;, java.util.Iterator&lt;?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.TreeMultimap java.util.Set get(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Queues java.util.concurrent.LinkedBlockingDeque&lt;E&gt; newLinkedBlockingDeque()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap.Builder com.google.common.collect.ImmutableMultimap.Builder putAll(java.lang.Object, java.lang.Iterable) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableCollection com.google.common.collect.ImmutableList&lt;E&gt; asList()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableTable.Builder com.google.common.collect.ImmutableTable.Builder&lt;R,C,V&gt; orderRowsBy(java.util.Comparator&lt;? super R&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMap java.util.Collection values()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset.Builder com.google.common.collect.ImmutableSortedMultiset.Builder&lt;E&gt; setCount(E, int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableList com.google.common.collect.ImmutableList&lt;E&gt; of(E, E, E, E, E, E)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.HashMultimap com.google.common.collect.HashMultimap&lt;K,V&gt; create()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ConcurrentHashMultiset boolean setCount(E, int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset com.google.common.collect.ImmutableSortedMultiset&lt;E&gt; copyOf(E[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.EvictingQueue com.google.common.collect.EvictingQueue&lt;E&gt; create(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableRangeSet boolean enclosesAll(com.google.common.collect.RangeSet) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingQueue java.util.Queue&lt;E&gt; delegate()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultimap java.util.SortedSet get(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableBiMap.Builder com.google.common.collect.ImmutableMap.Builder put(java.util.Map.Entry)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.MinMaxPriorityQueue.Builder com.google.common.collect.MinMaxPriorityQueue&lt;T&gt; create(java.lang.Iterable&lt;? extends T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultiset.Builder com.google.common.collect.ImmutableCollection.Builder addAll(java.lang.Iterable) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet.Builder com.google.common.collect.ImmutableCollection.Builder addAll(java.util.Iterator)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Maps java.util.NavigableMap&lt;K,V2&gt; transformEntries(java.util.NavigableMap&lt;K,V1&gt;, com.google.common.collect.Maps.EntryTransformer&lt;? super K,? super V1,V2&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableList com.google.common.collect.UnmodifiableListIterator&lt;E&gt; listIterator(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multisets boolean retainOccurrences(com.google.common.collect.Multiset&lt;?&gt;, com.google.common.collect.Multiset&lt;?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap java.util.Map.Entry&lt;K,V&gt; higherEntry(K) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableRangeSet com.google.common.collect.ImmutableSortedSet&lt;C&gt; asSet(com.google.common.collect.DiscreteDomain&lt;C&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableRangeSet com.google.common.collect.ImmutableRangeSet&lt;C&gt; of(com.google.common.collect.Range&lt;C&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Maps com.google.common.collect.ImmutableMap&lt;K,V&gt; uniqueIndex(java.lang.Iterable&lt;V&gt;, com.google.common.base.Function&lt;? super V,K&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap java.util.Collection get(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultiset.Builder com.google.common.collect.ImmutableMultiset.Builder&lt;E&gt; setCount(E, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.FluentIterable com.google.common.collect.FluentIterable&lt;T&gt; transformAndConcat(com.google.common.base.Function&lt;? super E,? extends java.lang.Iterable&lt;? extends T&gt;&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap com.google.common.collect.ImmutableSortedMap&lt;K,V&gt; tailMap(K)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset.Builder com.google.common.collect.ImmutableSortedMultiset&lt;E&gt; build()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Maps com.google.common.collect.ImmutableMap&lt;K,V&gt; immutableEnumMap(java.util.Map&lt;K,? extends V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.MultimapBuilder.SetMultimapBuilder com.google.common.collect.SetMultimap&lt;K,V&gt; build(com.google.common.collect.Multimap&lt;? extends K,? extends V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Range com.google.common.collect.Range&lt;C&gt; downTo(C, com.google.common.collect.BoundType) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.EnumMultiset com.google.common.collect.EnumMultiset&lt;E&gt; create(java.lang.Class&lt;E&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.TreeTraverser java.lang.Iterable&lt;T&gt; children(T) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimap java.util.Collection&lt;V&gt; get(K) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMap com.google.common.collect.ImmutableMap&lt;K,V&gt; of(K, V)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.MutableClassToInstanceMap T putInstance(java.lang.Class&lt;T&gt;, T) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultiset com.google.common.collect.ImmutableMultiset&lt;E&gt; of(E, E, E, E, E, E, E...) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap.Builder com.google.common.collect.ImmutableSetMultimap.Builder&lt;K,V&gt; orderValuesBy(java.util.Comparator&lt;? super V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multisets boolean retainOccurrences(com.google.common.collect.Multiset&lt;?&gt;, com.google.common.collect.Multiset&lt;?&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap.Builder com.google.common.collect.ImmutableListMultimap.Builder&lt;K,V&gt; putAll(java.lang.Iterable&lt;? extends java.util.Map.Entry&lt;? extends K,? extends V&gt;&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableList.Builder com.google.common.collect.ImmutableList.Builder&lt;E&gt; addAll(java.lang.Iterable&lt;? extends E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Maps java.util.Map&lt;K,V&gt; filterValues(java.util.Map&lt;K,V&gt;, com.google.common.base.Predicate&lt;? super V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multisets com.google.common.collect.Multiset&lt;E&gt; unmodifiableMultiset(com.google.common.collect.Multiset&lt;? extends E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.MultimapBuilder com.google.common.collect.MultimapBuilder.MultimapBuilderWithKeys&lt;K0&gt; treeKeys(java.util.Comparator&lt;K0&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap boolean put(K, V) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultiset.Builder com.google.common.collect.ImmutableMultiset.Builder&lt;E&gt; addCopies(E, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Maps java.util.EnumMap&lt;K,V&gt; newEnumMap(java.lang.Class&lt;K&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Sets java.util.LinkedHashSet&lt;E&gt; newLinkedHashSet()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Range com.google.common.collect.Range&lt;C&gt; closed(C, C)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet java.util.NavigableSet tailSet(java.lang.Object, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.TreeRangeMap com.google.common.collect.RangeMap&lt;K,V&gt; subRangeMap(com.google.common.collect.Range&lt;K&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableBiMap.Builder com.google.common.collect.ImmutableBiMap.Builder&lt;K,V&gt; put(K, V) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Range com.google.common.collect.Range&lt;C&gt; singleton(C)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap com.google.common.collect.ImmutableSortedMap&lt;K,V&gt; subMap(K, K) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSet.Builder com.google.common.collect.ImmutableSet.Builder&lt;E&gt; add(E)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableList com.google.common.collect.ImmutableList&lt;E&gt; copyOf(E[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultiset boolean setCount(E, int, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Multimaps com.google.common.collect.Multimap&lt;K,V&gt; filterEntries(com.google.common.collect.Multimap&lt;K,V&gt;, com.google.common.base.Predicate&lt;? super java.util.Map.Entry&lt;K,V&gt;&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Maps java.util.Map&lt;K,V&gt; filterValues(java.util.Map&lt;K,V&gt;, com.google.common.base.Predicate&lt;? super V&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.FluentIterable com.google.common.collect.FluentIterable&lt;E&gt; of(E[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultiset.Builder com.google.common.collect.ImmutableMultiset.Builder&lt;E&gt; addAll(java.lang.Iterable&lt;? extends E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap java.util.Set keySet()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap.Builder com.google.common.collect.ImmutableSetMultimap.Builder&lt;K,V&gt; orderKeysBy(java.util.Comparator&lt;? super K&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap.Builder com.google.common.collect.ImmutableMultimap.Builder&lt;K,V&gt; orderValuesBy(java.util.Comparator&lt;? super V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterators com.google.common.collect.UnmodifiableIterator&lt;T&gt; emptyIterator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Sets java.util.NavigableSet&lt;E&gt; synchronizedNavigableSet(java.util.NavigableSet&lt;E&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMap com.google.common.collect.ImmutableMap&lt;K,V&gt; of(K, V, K, V, K, V, K, V, K, V) 9'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap com.google.common.collect.ImmutableSortedMap&lt;K,V&gt; subMap(K, boolean, K, boolean) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Maps java.util.SortedMap&lt;K,V&gt; filterValues(java.util.SortedMap&lt;K,V&gt;, com.google.common.base.Predicate&lt;? super V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Sets java.util.Set&lt;java.util.List&lt;B&gt;&gt; cartesianProduct(java.util.List&lt;? extends java.util.Set&lt;? extends B&gt;&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap boolean put(K, V) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.TreeMultiset java.util.Comparator comparator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap com.google.common.collect.ImmutableSortedMap&lt;K,V&gt; subMap(K, K) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.MapMaker com.google.common.collect.GenericMapMaker weakValues()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multimaps com.google.common.collect.ListMultimap&lt;K,V2&gt; transformEntries(com.google.common.collect.ListMultimap&lt;K,V1&gt;, com.google.common.collect.Maps.EntryTransformer&lt;? super K,? super V1,V2&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.TreeMultiset com.google.common.collect.SortedMultiset&lt;E&gt; headMultiset(E, com.google.common.collect.BoundType) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultiset com.google.common.collect.ImmutableMultiset&lt;E&gt; of(E, E, E, E, E, E, E...) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Queues java.util.ArrayDeque&lt;E&gt; newArrayDeque()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap com.google.common.collect.ImmutableList&lt;V&gt; get(K)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.TreeMultiset com.google.common.collect.TreeMultiset&lt;E&gt; create(java.lang.Iterable&lt;? extends E&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multimaps com.google.common.collect.Multimap&lt;K,V&gt; filterEntries(com.google.common.collect.Multimap&lt;K,V&gt;, com.google.common.base.Predicate&lt;? super java.util.Map.Entry&lt;K,V&gt;&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset.Builder com.google.common.collect.ImmutableCollection.Builder addAll(java.util.Iterator)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Maps java.util.SortedMap&lt;K,V&gt; filterEntries(java.util.SortedMap&lt;K,V&gt;, com.google.common.base.Predicate&lt;? super java.util.Map.Entry&lt;K,V&gt;&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableBiMap.Builder com.google.common.collect.ImmutableMap.Builder put(java.lang.Object, java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.MinMaxPriorityQueue com.google.common.collect.MinMaxPriorityQueue&lt;E&gt; create(java.lang.Iterable&lt;? extends E&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Maps.EntryTransformer V2 transformEntry(K, V1) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset.Builder com.google.common.collect.ImmutableCollection.Builder add(java.lang.Object) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultiset com.google.common.collect.ImmutableMultiset&lt;E&gt; of(E, E, E, E, E, E, E...) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.TreeMultiset com.google.common.collect.SortedMultiset&lt;E&gt; headMultiset(E, com.google.common.collect.BoundType) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.HashBiMap com.google.common.collect.HashBiMap&lt;K,V&gt; create(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset com.google.common.collect.ImmutableSortedMultiset&lt;E&gt; copyOf(java.util.Comparator&lt;? super E&gt;, java.lang.Iterable&lt;? extends E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Sets com.google.common.collect.Sets.SetView&lt;E&gt; intersection(java.util.Set&lt;E&gt;, java.util.Set&lt;?&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingSortedSet java.util.SortedSet&lt;E&gt; tailSet(E)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Maps java.util.Map&lt;K,V&gt; asMap(java.util.Set&lt;K&gt;, com.google.common.base.Function&lt;? super K,V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSet com.google.common.collect.ImmutableSet&lt;E&gt; of()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap com.google.common.collect.ImmutableSortedMap&lt;K,V&gt; subMap(K, boolean, K, boolean) 2'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Ordering E min(java.util.Iterator&lt;E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.EnumHashBiMap java.util.Set values()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterables java.lang.Iterable&lt;T&gt; filter(java.lang.Iterable&lt;T&gt;, com.google.common.base.Predicate&lt;? super T&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMap com.google.common.collect.ImmutableMap&lt;K,V&gt; of(K, V, K, V, K, V, K, V, K, V) 7'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMap.Builder com.google.common.collect.ImmutableMap&lt;K,V&gt; build()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Ordering com.google.common.collect.Ordering&lt;T&gt; explicit(T, T...) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Ordering E min(java.lang.Iterable&lt;E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.MultimapBuilder.SetMultimapBuilder com.google.common.collect.SetMultimap&lt;K,V&gt; build()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap com.google.common.collect.ImmutableSortedMap&lt;K,V&gt; copyOf(java.lang.Iterable&lt;? extends java.util.Map.Entry&lt;? extends K,? extends V&gt;&gt;, java.util.Comparator&lt;? super K&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.TreeTraverser com.google.common.collect.FluentIterable&lt;T&gt; postOrderTraversal(T)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap.Builder com.google.common.collect.ImmutableMap.Builder put(java.util.Map.Entry)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap.Builder com.google.common.collect.ImmutableMultimap.Builder&lt;K,V&gt; putAll(K, java.lang.Iterable&lt;? extends V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterables java.lang.Iterable&lt;T&gt; concat(java.lang.Iterable&lt;? extends T&gt;, java.lang.Iterable&lt;? extends T&gt;, java.lang.Iterable&lt;? extends T&gt;, java.lang.Iterable&lt;? extends T&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset com.google.common.collect.ImmutableSortedMultiset&lt;E&gt; copyOf(java.util.Comparator&lt;? super E&gt;, java.lang.Iterable&lt;? extends E&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultiset com.google.common.collect.ImmutableMultiset&lt;E&gt; of(E, E, E, E, E, E, E...) 4'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Iterables T getLast(java.lang.Iterable&lt;? extends T&gt;, T) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.HashMultiset int setCount(java.lang.Object, int) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingMultimap java.util.Collection&lt;V&gt; replaceValues(K, java.lang.Iterable&lt;? extends V&gt;) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingMultiset boolean standardRetainAll(java.util.Collection&lt;?&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMap com.google.common.collect.ImmutableMap&lt;K,V&gt; of(K, V, K, V, K, V, K, V, K, V) 8'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultimap com.google.common.collect.ImmutableMultimap&lt;K,V&gt; copyOf(java.lang.Iterable&lt;? extends java.util.Map.Entry&lt;? extends K,? extends V&gt;&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMap.Builder com.google.common.collect.ImmutableMap.Builder&lt;K,V&gt; put(K, V) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMap com.google.common.collect.ImmutableMap&lt;K,V&gt; copyOf(java.util.Map&lt;? extends K,? extends V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap com.google.common.collect.ImmutableListMultimap&lt;K,V&gt; copyOf(com.google.common.collect.Multimap&lt;? extends K,? extends V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet.Builder com.google.common.collect.ImmutableSet.Builder add(java.lang.Object[]) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Ordering com.google.common.collect.ImmutableList&lt;E&gt; immutableSortedCopy(java.lang.Iterable&lt;E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultiset com.google.common.collect.ImmutableMultiset&lt;E&gt; of(E, E, E, E, E, E, E...) 3'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset java.util.SortedSet elementSet()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.Lists java.util.concurrent.CopyOnWriteArrayList&lt;E&gt; newCopyOnWriteArrayList(java.lang.Iterable&lt;? extends E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.BinaryTreeTraverser com.google.common.collect.FluentIterable&lt;T&gt; inOrderTraversal(T)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableTable com.google.common.collect.ImmutableTable&lt;R,C,V&gt; copyOf(com.google.common.collect.Table&lt;? extends R,? extends C,? extends V&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableListMultimap com.google.common.collect.ImmutableListMultimap&lt;K,V&gt; of(K, V, K, V, K, V, K, V, K, V) 9'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingQueue java.lang.Object delegate()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSet com.google.common.collect.ImmutableSet&lt;E&gt; copyOf(java.util.Collection&lt;? extends E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet.Builder com.google.common.collect.ImmutableCollection.Builder add(java.lang.Object[])'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMultiset.Builder com.google.common.collect.ImmutableMultiset.Builder addAll(java.util.Iterator)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ContiguousSet com.google.common.collect.Range&lt;C&gt; range(com.google.common.collect.BoundType, com.google.common.collect.BoundType)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ForwardingMultimap java.util.Collection&lt;java.util.Map.Entry&lt;K,V&gt;&gt; entries()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMap com.google.common.collect.ImmutableMap&lt;K,V&gt; of(K, V, K, V, K, V, K, V, K, V) 5'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMap.Builder com.google.common.collect.ImmutableMap.Builder&lt;K,V&gt; put(K, V) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingMap.StandardValues StandardValues(com.google.common.collect.ForwardingMap) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultiset com.google.common.collect.ImmutableMultiset&lt;E&gt; of(E, E, E, E, E, E, E...) 6'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableMultiset com.google.common.collect.ImmutableMultiset&lt;E&gt; of()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedMap com.google.common.collect.ImmutableSortedMap&lt;K,V&gt; copyOfSorted(java.util.SortedMap&lt;K,? extends V&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.LinkedHashMultimap java.util.Set get(java.lang.Object)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Range com.google.common.collect.Range&lt;C&gt; downTo(C, com.google.common.collect.BoundType) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableBiMap.Builder com.google.common.collect.ImmutableBiMap.Builder&lt;K,V&gt; putAll(java.lang.Iterable&lt;? extends java.util.Map.Entry&lt;? extends K,? extends V&gt;&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSet.Builder com.google.common.collect.ImmutableSet.Builder&lt;E&gt; addAll(java.lang.Iterable&lt;? extends E&gt;)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableList com.google.common.collect.ImmutableList&lt;E&gt; copyOf(java.lang.Iterable&lt;? extends E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Multiset java.util.Iterator&lt;E&gt; iterator()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMap com.google.common.collect.ImmutableMap&lt;K,V&gt; of(K, V, K, V, K, V, K, V, K, V) 6'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.DiscreteDomain com.google.common.collect.DiscreteDomain&lt;java.lang.Long&gt; longs()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.MinMaxPriorityQueue com.google.common.collect.MinMaxPriorityQueue.Builder&lt;java.lang.Comparable&gt; maximumSize(int)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet com.google.common.collect.ImmutableSortedSet&lt;E&gt; of()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.LinkedHashMultimap java.util.Collection entries()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ForwardingTable com.google.common.collect.Table&lt;R,C,V&gt; delegate()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableSetMultimap com.google.common.collect.ImmutableCollection replaceValues(java.lang.Object, java.lang.Iterable) 1'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
        <annotation name='org.jetbrains.kannotator.runtime.annotations.Propagated'>
            <val name="value" val="{org.jetbrains.kannotator.controlFlow.builder.analysis.NullabilityKey.class}"/>
        </annotation>
    </item>
    <item name='com.google.common.collect.ImmutableMultiset com.google.common.collect.ImmutableMultiset&lt;E&gt; of(E, E, E, E, E, E, E...) 5'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.LinkedListMultimap java.util.Collection entries()'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.Sets.SetView S copyInto(S)'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
    <item name='com.google.common.collect.ImmutableSortedSet com.google.common.collect.ImmutableSortedSet&lt;E&gt; copyOf(java.util.Comparator&lt;? super E&gt;, java.util.Iterator&lt;? extends E&gt;) 0'>
        <annotation name='org.jetbrains.annotations.NotNull'/>
    </item>
</root>
