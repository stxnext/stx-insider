apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'org.jetbrains.dokka'
apply plugin: 'com.getkeepsafe.dexcount'

android {
    compileSdkVersion 'Google Inc.:Google APIs:23'
    buildToolsVersion "23.0.2"

    defaultConfig {
        applicationId "com.stxnext.stxinsider"
        minSdkVersion 16
        targetSdkVersion 23
        versionCode 8
        versionName "1.0.7"
    }

    signingConfigs {
        debug {
            storeFile file("keystore/debug.keystore")
            storePassword "android"
            keyAlias "androiddebugkey"
            keyPassword "android"
        }
        //define gradle StxNextKeys.repo variable in your home directory ~/.gradle/gradle.properties
        release {
            if (project.hasProperty("StxNextKeys.repo")) {
                def projectPropsFile = file(project.property("StxNextKeys.repo") + "/StxInsider.properties")
                if (projectPropsFile.exists()) {
                    Properties props = new Properties()
                    props.load(new FileInputStream(projectPropsFile))

                    storeFile file(file(project.property("StxNextKeys.repo") + props['RELEASE_STORE_FILE']))
                    storePassword props['RELEASE_STORE_PASS']
                    keyAlias props['RELEASE_ALIAS']
                    keyPassword props['RELEASE_KEY_PASS']
                }
            } else {
                println "======================================================="
                println "[ERROR] - Please configure release-compilation environment - e.g. in ~/.signing  directory"
                println "======================================================="
            }
        }
    }

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
    }

    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
            signingConfig signingConfigs.debug
        }

        release {
            debuggable false
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
}

//--- only for dokka plugin functionality ----
sourceSets {
    main.java.srcDirs += 'src/main/kotlin'
}

kapt {
    generateStubs = true
}

dokka {
    outputFormat = 'html' //'markdown', 'javadoc'
    outputDirectory = "$buildDir/kotlindocs"
}

dexcount {
    format = "list"
    includeClasses = false
    includeFieldCount = true
    includeTotalMethodCount = false
    orderByMethodCount = false
    verbose = false
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'

    compile 'com.google.android.gms:play-services-maps:8.4.+'

    compile 'com.android.support:design:23.1.0'

    compile 'com.android.support:appcompat-v7:23.+'
    compile 'com.android.support:cardview-v7:23.1.0'
    compile 'com.android.support:recyclerview-v7:23.1.0'
    compile 'com.android.support:percent:23.1.0'

    compile 'net.danlew:android.joda:2.9.2'

    compile 'com.google.dagger:dagger:2.0.2'
    compile 'org.glassfish:javax.annotation:10.0-b28'
    kapt 'com.google.dagger:dagger-compiler:2.0.2'

    compile 'com.jakewharton:kotterknife:0.1.0-SNAPSHOT'

    compile 'com.squareup.retrofit2:retrofit:2.0.0-beta4'
    compile 'com.squareup.retrofit2:converter-gson:2.0.0-beta4'
    compile 'com.squareup.okhttp3:logging-interceptor:3.0.1'

    compile 'com.google.guava:guava:19.0'

    compile 'com.estimote:sdk:0.9.4@aar'
}
